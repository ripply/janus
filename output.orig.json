{
  "stats": {
    "suites": 893,
    "tests": 1515,
    "passes": 1346,
    "pending": 4,
    "failures": 174,
    "start": "2021-04-20T21:27:46.876Z",
    "end": "2021-04-20T22:31:45.059Z",
    "duration": 3838183
  },
  "suites": [
    {
      "title": "Contract: AccessControl",
      "tests": []
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "AccessControl",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 14,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 13,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "hasRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "hasRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleAdmin(bytes32)",
      "tests": [
        {
          "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "grantRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "grantRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "revokeRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "revokeRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "renounceRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "renounceRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "default admin",
      "tests": [
        {
          "fullTitle": "default admin deployer has default admin role",
          "title": "deployer has default admin role",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "default admin other roles's admin is the default admin role",
          "title": "other roles's admin is the default admin role",
          "duration": 13,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "default admin default admin role's admin is itself",
          "title": "default admin role's admin is itself",
          "duration": 11,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "granting",
      "tests": [
        {
          "fullTitle": "granting admin can grant role to other accounts",
          "title": "admin can grant role to other accounts",
          "duration": 371,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "granting non-admin cannot grant role to other accounts",
          "title": "non-admin cannot grant role to other accounts",
          "duration": 526,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "granting accounts can be granted a role multiple times",
          "title": "accounts can be granted a role multiple times",
          "duration": 683,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "revoking",
      "tests": [
        {
          "fullTitle": "revoking roles that are not had can be revoked",
          "title": "roles that are not had can be revoked",
          "duration": 358,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with granted role",
      "tests": [
        {
          "fullTitle": "with granted role admin can revoke role",
          "title": "admin can revoke role",
          "duration": 352,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role non-admin cannot revoke role",
          "title": "non-admin cannot revoke role",
          "duration": 512,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role a role can be revoked multiple times",
          "title": "a role can be revoked multiple times",
          "duration": 661,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "renouncing",
      "tests": [
        {
          "fullTitle": "renouncing roles that are not had can be renounced",
          "title": "roles that are not had can be renounced",
          "duration": 352,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with granted role",
      "tests": [
        {
          "fullTitle": "with granted role bearer can renounce role",
          "title": "bearer can renounce role",
          "duration": 372,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role only the sender can renounce their roles",
          "title": "only the sender can renounce their roles",
          "duration": 367,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role a role can be renounced multiple times",
          "title": "a role can be renounced multiple times",
          "duration": 702,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setting role admin",
      "tests": [
        {
          "fullTitle": "setting role admin a role's admin role can be changed",
          "title": "a role's admin role can be changed",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin the new admin can grant roles",
          "title": "the new admin can grant roles",
          "duration": 530,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin the new admin can revoke roles",
          "title": "the new admin can revoke roles",
          "duration": 1018,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin a role's previous admins no longer grant roles",
          "title": "a role's previous admins no longer grant roles",
          "duration": 398,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin a role's previous admins no longer revoke roles",
          "title": "a role's previous admins no longer revoke roles",
          "duration": 383,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: AccessControl",
      "tests": []
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "AccessControl",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 11,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "hasRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "hasRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleAdmin(bytes32)",
      "tests": [
        {
          "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "grantRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "grantRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "revokeRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "revokeRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "renounceRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "renounceRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "default admin",
      "tests": [
        {
          "fullTitle": "default admin deployer has default admin role",
          "title": "deployer has default admin role",
          "duration": 24,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "default admin other roles's admin is the default admin role",
          "title": "other roles's admin is the default admin role",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "default admin default admin role's admin is itself",
          "title": "default admin role's admin is itself",
          "duration": 122,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "granting",
      "tests": [
        {
          "fullTitle": "granting admin can grant role to other accounts",
          "title": "admin can grant role to other accounts",
          "duration": 346,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "granting non-admin cannot grant role to other accounts",
          "title": "non-admin cannot grant role to other accounts",
          "duration": 503,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "granting accounts can be granted a role multiple times",
          "title": "accounts can be granted a role multiple times",
          "duration": 745,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "revoking",
      "tests": [
        {
          "fullTitle": "revoking roles that are not had can be revoked",
          "title": "roles that are not had can be revoked",
          "duration": 355,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with granted role",
      "tests": [
        {
          "fullTitle": "with granted role admin can revoke role",
          "title": "admin can revoke role",
          "duration": 392,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role non-admin cannot revoke role",
          "title": "non-admin cannot revoke role",
          "duration": 591,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role a role can be revoked multiple times",
          "title": "a role can be revoked multiple times",
          "duration": 738,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "renouncing",
      "tests": [
        {
          "fullTitle": "renouncing roles that are not had can be renounced",
          "title": "roles that are not had can be renounced",
          "duration": 346,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with granted role",
      "tests": [
        {
          "fullTitle": "with granted role bearer can renounce role",
          "title": "bearer can renounce role",
          "duration": 407,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role only the sender can renounce their roles",
          "title": "only the sender can renounce their roles",
          "duration": 360,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with granted role a role can be renounced multiple times",
          "title": "a role can be renounced multiple times",
          "duration": 745,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setting role admin",
      "tests": [
        {
          "fullTitle": "setting role admin a role's admin role can be changed",
          "title": "a role's admin role can be changed",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin the new admin can grant roles",
          "title": "the new admin can grant roles",
          "duration": 535,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin the new admin can revoke roles",
          "title": "the new admin can revoke roles",
          "duration": 1109,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin a role's previous admins no longer grant roles",
          "title": "a role's previous admins no longer grant roles",
          "duration": 398,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "setting role admin a role's previous admins no longer revoke roles",
          "title": "a role's previous admins no longer revoke roles",
          "duration": 384,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "AccessControlEnumerable",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 24,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleMember(bytes32,uint256)",
      "tests": [
        {
          "fullTitle": "getRoleMember(bytes32,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleMemberCount(bytes32)",
      "tests": [
        {
          "fullTitle": "getRoleMemberCount(bytes32) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "enumerating",
      "tests": [
        {
          "fullTitle": "enumerating role bearers can be enumerated",
          "title": "role bearers can be enumerated",
          "duration": 1487,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "enumerating role enumeration should be in sync after renounceRole call",
          "title": "role enumeration should be in sync after renounceRole call",
          "duration": 811,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: Ownable",
      "tests": [
        {
          "fullTitle": "Contract: Ownable has an owner",
          "title": "has an owner",
          "duration": 12,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transfer ownership",
      "tests": [
        {
          "fullTitle": "transfer ownership changes owner after transfer",
          "title": "changes owner after transfer",
          "duration": 374,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "transfer ownership prevents non-owners from transferring",
          "title": "prevents non-owners from transferring",
          "duration": 343,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "transfer ownership guards ownership against stuck state",
          "title": "guards ownership against stuck state",
          "duration": 374,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "renounce ownership",
      "tests": [
        {
          "fullTitle": "renounce ownership loses owner after renouncement",
          "title": "loses owner after renouncement",
          "duration": 394,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "renounce ownership prevents non-owners from renouncement",
          "title": "prevents non-owners from renouncement",
          "duration": 367,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: TimelockController",
      "tests": [
        {
          "fullTitle": "Contract: TimelockController initial state",
          "title": "initial state",
          "duration": 32,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "methods",
      "tests": []
    },
    {
      "title": "operation hashing",
      "tests": [
        {
          "fullTitle": "operation hashing hashOperation",
          "title": "hashOperation",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "operation hashing hashOperationBatch",
          "title": "hashOperationBatch",
          "duration": 20,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "simple",
      "tests": []
    },
    {
      "title": "schedule",
      "tests": [
        {
          "fullTitle": "schedule proposer can schedule",
          "title": "proposer can schedule",
          "duration": 400,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule prevent overwritting active operation",
          "title": "prevent overwritting active operation",
          "duration": 709,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule prevent non-proposer from commiting",
          "title": "prevent non-proposer from commiting",
          "duration": 564,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule enforce minimum delay",
          "title": "enforce minimum delay",
          "duration": 384,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "execute",
      "tests": [
        {
          "fullTitle": "execute revert if operation is not scheduled",
          "title": "revert if operation is not scheduled",
          "duration": 562,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with scheduled operation",
      "tests": [
        {
          "fullTitle": "with scheduled operation revert if execution comes too early 1/2",
          "title": "revert if execution comes too early 1/2",
          "duration": 513,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with scheduled operation revert if execution comes too early 2/2",
          "title": "revert if execution comes too early 2/2",
          "duration": 598,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "on time",
      "tests": [
        {
          "fullTitle": "on time executor can reveal",
          "title": "executor can reveal",
          "duration": 520,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:271:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23",
            "receipt": {
              "transactionHash": "0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23",
              "transactionIndex": 1,
              "blockHash": "0x019205eadfef82f3831fbd1d48c162fc706a7e3311985c1f2235f58ad6935be2",
              "blockNumber": 5011,
              "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
              "to": "0x4860643faf6a8dd20ed787e9665fc56c2874af07",
              "cumulativeGasUsed": 30218,
              "gasUsed": 30218,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TimelockController: operation is not ready",
            "hijackedStack": "StatusError: Transaction: 0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "on time prevent non-executor from revealing",
          "title": "prevent non-executor from revealing",
          "duration": 528,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "batch",
      "tests": []
    },
    {
      "title": "schedule",
      "tests": [
        {
          "fullTitle": "schedule proposer can schedule",
          "title": "proposer can schedule",
          "duration": 385,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule prevent overwritting active operation",
          "title": "prevent overwritting active operation",
          "duration": 741,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule length of batch parameter must match #1",
          "title": "length of batch parameter must match #1",
          "duration": 377,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule length of batch parameter must match #1",
          "title": "length of batch parameter must match #1",
          "duration": 379,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule prevent non-proposer from commiting",
          "title": "prevent non-proposer from commiting",
          "duration": 547,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "schedule enforce minimum delay",
          "title": "enforce minimum delay",
          "duration": 358,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "execute",
      "tests": [
        {
          "fullTitle": "execute revert if operation is not scheduled",
          "title": "revert if operation is not scheduled",
          "duration": 593,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "execute partial execution",
          "title": "partial execution",
          "duration": 910,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with scheduled operation",
      "tests": [
        {
          "fullTitle": "with scheduled operation revert if execution comes too early 1/2",
          "title": "revert if execution comes too early 1/2",
          "duration": 522,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with scheduled operation revert if execution comes too early 2/2",
          "title": "revert if execution comes too early 2/2",
          "duration": 602,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "on time",
      "tests": [
        {
          "fullTitle": "on time executor can reveal",
          "title": "executor can reveal",
          "duration": 552,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:508:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869",
            "receipt": {
              "transactionHash": "0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869",
              "transactionIndex": 1,
              "blockHash": "0x503ab070f5365a9ea72b6a0e4808ccb539fa337b2a26db5693f9062ebc546bde",
              "blockNumber": 5065,
              "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
              "to": "0x7bbc3c35ddd718f02c23ee0edf96970586e92f55",
              "cumulativeGasUsed": 76839,
              "gasUsed": 76839,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TimelockController: operation is not ready",
            "hijackedStack": "StatusError: Transaction: 0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "on time prevent non-executor from revealing",
          "title": "prevent non-executor from revealing",
          "duration": 529,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "on time length mismatch #1",
          "title": "length mismatch #1",
          "duration": 549,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "on time length mismatch #2",
          "title": "length mismatch #2",
          "duration": 529,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "on time length mismatch #3",
          "title": "length mismatch #3",
          "duration": 564,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "cancel",
      "tests": [
        {
          "fullTitle": "cancel proposer can cancel",
          "title": "proposer can cancel",
          "duration": 363,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "cancel cannot cancel invalid operation",
          "title": "cannot cancel invalid operation",
          "duration": 392,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "cancel prevent non-proposer from canceling",
          "title": "prevent non-proposer from canceling",
          "duration": 548,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "maintenance",
      "tests": [
        {
          "fullTitle": "maintenance prevent unauthorized maintenance",
          "title": "prevent unauthorized maintenance",
          "duration": 505,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "maintenance timelock scheduled maintenance",
          "title": "timelock scheduled maintenance",
          "duration": 883,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:700:43)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26",
            "receipt": {
              "transactionHash": "0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26",
              "transactionIndex": 1,
              "blockHash": "0x1c49f92c2814fbb0260abf3956e6bc99ed816eadb38a8862904e5aee20c25586",
              "blockNumber": 5109,
              "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
              "to": "0xf76040c4ba63e00042dc107e4774d329006ee2e2",
              "cumulativeGasUsed": 38247,
              "gasUsed": 38247,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TimelockController: operation is not ready",
            "hijackedStack": "StatusError: Transaction: 0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "dependency",
      "tests": [
        {
          "fullTitle": "dependency cannot execute before dependency",
          "title": "cannot execute before dependency",
          "duration": 536,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "dependency can execute after dependency",
          "title": "can execute after dependency",
          "duration": 539,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:766:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961",
            "receipt": {
              "transactionHash": "0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961",
              "transactionIndex": 1,
              "blockHash": "0x1bbfd999972ae2a1a1e91557e6089a853c05bfc22cc672ed966132d8d74f4e81",
              "blockNumber": 5121,
              "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
              "to": "0x484a4efdaf24bef77053d0658dc9c0e0f785a47e",
              "cumulativeGasUsed": 30206,
              "gasUsed": 30206,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TimelockController: operation is not ready",
            "hijackedStack": "StatusError: Transaction: 0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "usage scenario",
      "tests": [
        {
          "fullTitle": "usage scenario call",
          "title": "call",
          "duration": 917,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:807:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6",
            "receipt": {
              "transactionHash": "0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6",
              "transactionIndex": 1,
              "blockHash": "0x7cf0fcd001d989ac25c70793b273f90363fc01b08f7c80c1e322d80215c58e57",
              "blockNumber": 5126,
              "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
              "to": "0x2cbbb2123f937f23513fb5857bcb671c0cc8befc",
              "cumulativeGasUsed": 50847,
              "gasUsed": 50847,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TimelockController: operation is not ready",
            "hijackedStack": "StatusError: Transaction: 0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "usage scenario call reverting",
          "title": "call reverting",
          "duration": 915,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "usage scenario call throw",
          "title": "call throw",
          "duration": 965,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "usage scenario call out of gas",
          "title": "call out of gas",
          "duration": 896,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "usage scenario call payable with eth",
          "title": "call payable with eth",
          "duration": 932,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8 exited with an error (status 0). Reason given: TimelockController: underlying transaction reverted.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:938:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8 exited with an error (status 0). Reason given: TimelockController: underlying transaction reverted.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8",
            "receipt": {
              "transactionHash": "0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8",
              "transactionIndex": 1,
              "blockHash": "0x4ab6a9eadcce05005a743fd7c70f4d43bf7d24ba7cf6c311fbaf42930900a7bb",
              "blockNumber": 5146,
              "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
              "to": "0x7cac358dc4cf973468074554d555eb0d3ab1db60",
              "cumulativeGasUsed": 38354,
              "gasUsed": 38354,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TimelockController: underlying transaction reverted",
            "hijackedStack": "StatusError: Transaction: 0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8 exited with an error (status 0). Reason given: TimelockController: underlying transaction reverted.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "usage scenario call nonpayable with eth",
          "title": "call nonpayable with eth",
          "duration": 810,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "usage scenario call reverting with eth",
          "title": "call reverting with eth",
          "duration": 797,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC2771Context",
      "tests": [
        {
          "fullTitle": "Contract: ERC2771Context recognize trusted forwarder",
          "title": "recognize trusted forwarder",
          "duration": 11,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called directly",
      "tests": []
    },
    {
      "title": "msgSender",
      "tests": [
        {
          "fullTitle": "msgSender returns the transaction sender when called from an EOA",
          "title": "returns the transaction sender when called from an EOA",
          "duration": 370,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "msgSender returns the transaction sender when from another contract",
          "title": "returns the transaction sender when from another contract",
          "duration": 362,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "msgData",
      "tests": [
        {
          "fullTitle": "msgData returns the transaction data when called from an EOA",
          "title": "returns the transaction data when called from an EOA",
          "duration": 420,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "msgData returns the transaction sender when from another contract",
          "title": "returns the transaction sender when from another contract",
          "duration": 407,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when receiving a relayed call",
      "tests": []
    },
    {
      "title": "msgSender",
      "tests": [
        {
          "fullTitle": "msgSender returns the relayed transaction original sender",
          "title": "returns the relayed transaction original sender",
          "duration": 393,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "msgData",
      "tests": [
        {
          "fullTitle": "msgData returns the relayed transaction original data",
          "title": "returns the relayed transaction original data",
          "duration": 397,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: MinimalForwarder",
      "tests": []
    },
    {
      "title": "with message",
      "tests": []
    },
    {
      "title": "verify",
      "tests": []
    },
    {
      "title": "valid signature",
      "tests": [
        {
          "fullTitle": "valid signature success",
          "title": "success",
          "duration": 11,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "invalid signature",
      "tests": [
        {
          "fullTitle": "invalid signature tampered from",
          "title": "tampered from",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered to",
          "title": "tampered to",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered value",
          "title": "tampered value",
          "duration": 10,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered nonce",
          "title": "tampered nonce",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered data",
          "title": "tampered data",
          "duration": 14,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered signature",
          "title": "tampered signature",
          "duration": 34,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "execute",
      "tests": []
    },
    {
      "title": "valid signature",
      "tests": [
        {
          "fullTitle": "valid signature success",
          "title": "success",
          "duration": 344,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "invalid signature",
      "tests": [
        {
          "fullTitle": "invalid signature tampered from",
          "title": "tampered from",
          "duration": 377,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered to",
          "title": "tampered to",
          "duration": 357,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered value",
          "title": "tampered value",
          "duration": 387,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered nonce",
          "title": "tampered nonce",
          "duration": 384,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered data",
          "title": "tampered data",
          "duration": 320,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "invalid signature tampered signature",
          "title": "tampered signature",
          "duration": 355,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "migrate-imports.js",
      "tests": [
        {
          "fullTitle": "migrate-imports.js every new path exists",
          "title": "every new path exists",
          "duration": 4,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "migrate-imports.js replaces import paths in a file",
          "title": "replaces import paths in a file",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: BeaconProxy",
      "tests": [
        {
          "fullTitle": "Contract: BeaconProxy upgrade a proxy by upgrading its beacon",
          "title": "upgrade a proxy by upgrading its beacon",
          "duration": 1244,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: BeaconProxy upgrade 2 proxies by upgrading shared beacon",
          "title": "upgrade 2 proxies by upgrading shared beacon",
          "duration": 1527,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "bad beacon is not accepted",
      "tests": [
        {
          "fullTitle": "bad beacon is not accepted non-contract beacon",
          "title": "non-contract beacon",
          "duration": 681,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "bad beacon is not accepted non-compliant beacon",
          "title": "non-compliant beacon",
          "duration": 772,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit.' to equal 'revert'",
            "showDiff": true,
            "actual": "The contract code couldn't be stored, please check your gas limit.",
            "expected": "revert",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit.' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "bad beacon is not accepted non-contract implementation",
          "title": "non-contract implementation",
          "duration": 781,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "initialization",
      "tests": [
        {
          "fullTitle": "initialization no initialization",
          "title": "no initialization",
          "duration": 447,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '10'",
            "showDiff": true,
            "actual": "0",
            "expected": "10",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '10'\n    at Context.assertInitialized (test/proxy/beacon/BeaconProxy.test.js:62:76)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "initialization non-payable initialization",
          "title": "non-payable initialization",
          "duration": 405,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "initialization payable initialization",
          "title": "payable initialization",
          "duration": 390,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '100'",
            "showDiff": true,
            "actual": "0",
            "expected": "100",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '100'\n    at Context.assertInitialized (test/proxy/beacon/BeaconProxy.test.js:62:76)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "initialization reverting initialization",
          "title": "reverting initialization",
          "duration": 400,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: UpgradeableBeacon",
      "tests": [
        {
          "fullTitle": "Contract: UpgradeableBeacon cannot be created with non-contract implementation",
          "title": "cannot be created with non-contract implementation",
          "duration": 418,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "once deployed",
      "tests": [
        {
          "fullTitle": "once deployed returns implementation",
          "title": "returns implementation",
          "duration": 15,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed can be upgraded by the owner",
          "title": "can be upgraded by the owner",
          "duration": 829,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed cannot be upgraded to a non-contract",
          "title": "cannot be upgraded to a non-contract",
          "duration": 425,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed cannot be upgraded by other account",
          "title": "cannot be upgraded by other account",
          "duration": 825,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: Clones",
      "tests": []
    },
    {
      "title": "clone",
      "tests": []
    },
    {
      "title": "initialization without parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 24,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 802,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 15,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 23,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 35,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 36,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "initialization with parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 22,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 889,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 47,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 30,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 44,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 38,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "cloneDeterministic",
      "tests": [
        {
          "fullTitle": "cloneDeterministic address already used",
          "title": "address already used",
          "duration": 1399,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "cloneDeterministic address prediction",
          "title": "address prediction",
          "duration": 971,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "initialization without parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 40,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 26,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 878,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 20,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "initialization with parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 60,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 823,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 43,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 17,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 24,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 19,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC1967Proxy",
      "tests": [
        {
          "fullTitle": "Contract: ERC1967Proxy cannot be initialized with a non-contract address",
          "title": "cannot be initialized with a non-contract address",
          "duration": 389,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'",
            "showDiff": true,
            "actual": "The contract code couldn't be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.",
            "expected": "revert",
            "operator": "notStrictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "without initialization",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 9,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 17,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 5,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 37,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 25,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '1000000'",
            "showDiff": true,
            "actual": "0",
            "expected": "1000000",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "initialization without parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 4,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 14,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 428,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 17,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 42,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 13,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '1000000'",
            "showDiff": true,
            "actual": "0",
            "expected": "1000000",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "initialization with parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 410,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 3,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 31,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 5,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 20,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 18,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '1000000'",
            "showDiff": true,
            "actual": "0",
            "expected": "1000000",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "reverting initialization",
      "tests": [
        {
          "fullTitle": "reverting initialization reverts",
          "title": "reverts",
          "duration": 438,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ProxyAdmin",
      "tests": [
        {
          "fullTitle": "Contract: ProxyAdmin has an owner",
          "title": "has an owner",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "#getProxyAdmin",
      "tests": [
        {
          "fullTitle": "#getProxyAdmin returns proxyAdmin as admin of the proxy",
          "title": "returns proxyAdmin as admin of the proxy",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "#getProxyAdmin call to invalid proxy",
          "title": "call to invalid proxy",
          "duration": 221,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'",
            "showDiff": true,
            "actual": "Returned error: Revert: executionResult output is empty",
            "expected": "revert",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "#changeProxyAdmin",
      "tests": [
        {
          "fullTitle": "#changeProxyAdmin fails to change proxy admin if its not the proxy owner",
          "title": "fails to change proxy admin if its not the proxy owner",
          "duration": 419,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "#changeProxyAdmin changes proxy admin",
          "title": "changes proxy admin",
          "duration": 467,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "#getProxyImplementation",
      "tests": [
        {
          "fullTitle": "#getProxyImplementation returns proxy implementation address",
          "title": "returns proxy implementation address",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "#getProxyImplementation call to invalid proxy",
          "title": "call to invalid proxy",
          "duration": 18,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'",
            "showDiff": true,
            "actual": "Returned error: Revert: executionResult output is empty",
            "expected": "revert",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "#upgrade",
      "tests": []
    },
    {
      "title": "with unauthorized account",
      "tests": [
        {
          "fullTitle": "with unauthorized account fails to upgrade",
          "title": "fails to upgrade",
          "duration": 409,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with authorized account",
      "tests": [
        {
          "fullTitle": "with authorized account upgrades implementation",
          "title": "upgrades implementation",
          "duration": 392,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "#upgradeAndCall",
      "tests": []
    },
    {
      "title": "with unauthorized account",
      "tests": [
        {
          "fullTitle": "with unauthorized account fails to upgrade",
          "title": "fails to upgrade",
          "duration": 405,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with authorized account",
      "tests": []
    },
    {
      "title": "with invalid callData",
      "tests": [
        {
          "fullTitle": "with invalid callData fails to upgrade",
          "title": "fails to upgrade",
          "duration": 426,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with valid callData",
      "tests": [
        {
          "fullTitle": "with valid callData upgrades implementation",
          "title": "upgrades implementation",
          "duration": 394,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: TransparentUpgradeableProxy",
      "tests": [
        {
          "fullTitle": "Contract: TransparentUpgradeableProxy cannot be initialized with a non-contract address",
          "title": "cannot be initialized with a non-contract address",
          "duration": 424,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'",
            "showDiff": true,
            "actual": "The contract code couldn't be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.",
            "expected": "revert",
            "operator": "notStrictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "without initialization",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 5,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 20,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "0",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 20,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 14,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 20,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "0",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 30,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '1000000'",
            "showDiff": true,
            "actual": "0",
            "expected": "1000000",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "initialization without parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 20,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 14,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "10",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 401,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 16,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "100",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 26,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 14,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 13,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "100",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 19,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '1000000'",
            "showDiff": true,
            "actual": "0",
            "expected": "1000000",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "initialization with parameters",
      "tests": []
    },
    {
      "title": "non payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 24,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 20,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "10",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 15,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance reverts",
          "title": "reverts",
          "duration": 311,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "payable",
      "tests": []
    },
    {
      "title": "when not sending balance",
      "tests": [
        {
          "fullTitle": "when not sending balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 5,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when not sending balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 12,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "42",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when not sending balance has expected balance",
          "title": "has expected balance",
          "duration": 13,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sending some balance",
      "tests": [
        {
          "fullTitle": "when sending some balance sets the implementation address",
          "title": "sets the implementation address",
          "duration": 6,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sending some balance initializes the proxy",
          "title": "initializes the proxy",
          "duration": 12,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "42",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when sending some balance has expected balance",
          "title": "has expected balance",
          "duration": 13,
          "result": "failed",
          "err": {
            "message": "expected '0' to equal '1000000'",
            "showDiff": true,
            "actual": "0",
            "expected": "1000000",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "reverting initialization",
      "tests": [
        {
          "fullTitle": "reverting initialization reverts",
          "title": "reverts",
          "duration": 321,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "implementation",
      "tests": [
        {
          "fullTitle": "implementation returns the current implementation address",
          "title": "returns the current implementation address",
          "duration": 20,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "implementation delegates to the implementation",
          "title": "delegates to the implementation",
          "duration": 11,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "upgradeTo",
      "tests": []
    },
    {
      "title": "when the sender is the admin",
      "tests": []
    },
    {
      "title": "when the given implementation is different from the current one",
      "tests": [
        {
          "fullTitle": "when the given implementation is different from the current one upgrades to the requested implementation",
          "title": "upgrades to the requested implementation",
          "duration": 321,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the given implementation is different from the current one emits an event",
          "title": "emits an event",
          "duration": 292,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given implementation is the zero address",
      "tests": [
        {
          "fullTitle": "when the given implementation is the zero address reverts",
          "title": "reverts",
          "duration": 293,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not the admin",
      "tests": [
        {
          "fullTitle": "when the sender is not the admin reverts",
          "title": "reverts",
          "duration": 295,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "upgradeToAndCall",
      "tests": []
    },
    {
      "title": "without migrations",
      "tests": []
    },
    {
      "title": "when the call does not fail",
      "tests": []
    },
    {
      "title": "when the sender is the admin",
      "tests": [
        {
          "fullTitle": "when the sender is the admin upgrades to the requested implementation",
          "title": "upgrades to the requested implementation",
          "duration": 15,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender is the admin emits an event",
          "title": "emits an event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender is the admin calls the initializer function",
          "title": "calls the initializer function",
          "duration": 39,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "42",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:136:39)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "when the sender is the admin sends given value to the proxy",
          "title": "sends given value to the proxy",
          "duration": 28,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender is the admin uses the storage of the proxy",
          "title": "uses the storage of the proxy",
          "result": "pending",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not the admin",
      "tests": [
        {
          "fullTitle": "when the sender is not the admin reverts",
          "title": "reverts",
          "duration": 437,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the call does fail",
      "tests": [
        {
          "fullTitle": "when the call does fail reverts",
          "title": "reverts",
          "duration": 444,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with migrations",
      "tests": []
    },
    {
      "title": "when the sender is the admin",
      "tests": []
    },
    {
      "title": "when upgrading to V1",
      "tests": [
        {
          "fullTitle": "when upgrading to V1 upgrades to the requested version and emits an event",
          "title": "upgrades to the requested version and emits an event",
          "duration": 43,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when upgrading to V1 calls the 'initialize' function and sends given value to the proxy",
          "title": "calls the 'initialize' function and sends given value to the proxy",
          "duration": 55,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "42",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:199:39)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "when upgrading to V2",
      "tests": [
        {
          "fullTitle": "when upgrading to V2 upgrades to the requested version and emits an event",
          "title": "upgrades to the requested version and emits an event",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when upgrading to V2 calls the 'migrate' function and sends given value to the proxy",
          "title": "calls the 'migrate' function and sends given value to the proxy",
          "duration": 29,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "10",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:225:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "when upgrading to V3",
      "tests": [
        {
          "fullTitle": "when upgrading to V3 upgrades to the requested version and emits an event",
          "title": "upgrades to the requested version and emits an event",
          "duration": 42,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when upgrading to V3 calls the 'migrate' function and sends given value to the proxy",
          "title": "calls the 'migrate' function and sends given value to the proxy",
          "duration": 38,
          "result": "failed",
          "err": {
            "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
            "showDiff": true,
            "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
            "expected": "42",
            "operator": "strictEqual",
            "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:254:43)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "when the sender is not the admin",
      "tests": [
        {
          "fullTitle": "when the sender is not the admin reverts",
          "title": "reverts",
          "duration": 646,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "changeAdmin",
      "tests": []
    },
    {
      "title": "when the new proposed admin is not the zero address",
      "tests": []
    },
    {
      "title": "when the sender is the admin",
      "tests": [
        {
          "fullTitle": "when the sender is the admin assigns new proxy admin",
          "title": "assigns new proxy admin",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender is the admin emits an event",
          "title": "emits an event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not the admin",
      "tests": [
        {
          "fullTitle": "when the sender is not the admin reverts",
          "title": "reverts",
          "duration": 308,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the new proposed admin is the zero address",
      "tests": [
        {
          "fullTitle": "when the new proposed admin is the zero address reverts",
          "title": "reverts",
          "duration": 307,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "storage",
      "tests": [
        {
          "fullTitle": "storage should store the implementation address in specified location",
          "title": "should store the implementation address in specified location",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "storage should store the admin proxy in specified location",
          "title": "should store the admin proxy in specified location",
          "duration": 5,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transparent proxy",
      "tests": [
        {
          "fullTitle": "transparent proxy proxy admin cannot call delegated functions",
          "title": "proxy admin cannot call delegated functions",
          "duration": 9,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "when function names clash",
      "tests": [
        {
          "fullTitle": "when function names clash when sender is proxy admin should run the proxy function",
          "title": "when sender is proxy admin should run the proxy function",
          "duration": 13,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when function names clash when sender is other should delegate to implementation",
          "title": "when sender is other should delegate to implementation",
          "duration": 10,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "regression",
      "tests": [
        {
          "fullTitle": "regression should add new function",
          "title": "should add new function",
          "duration": 908,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n    at Context.it (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:371:28)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199",
            "receipt": {
              "transactionHash": "0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199",
              "transactionIndex": 1,
              "blockHash": "0x297cf807b0b1e4cb5221ab0112630c9d65dd4bb477cca221fb4085b44ae1c7d4",
              "blockNumber": 5505,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0xb3bc21c1a79c2b8a41db8f9fd828258ce5e4125b",
              "cumulativeGasUsed": 22486,
              "gasUsed": 22486,
              "logs": [],
              "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              "status": false,
              "rawLogs": []
            },
            "reason": "TransparentUpgradeableProxy: admin cannot fallback to proxy target",
            "hijackedStack": "StatusError: Transaction: 0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "regression should remove function",
          "title": "should remove function",
          "duration": 880,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n    at Context.it (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:386:28)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5",
            "receipt": {
              "transactionHash": "0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5",
              "transactionIndex": 1,
              "blockHash": "0x58bab5a4648f8f19605b73a43f3e1f7b597d578ee118731fe9df1629b6fa274f",
              "blockNumber": 5509,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0xeaafb2f39eeab82dca5f56b8805e096af91cd9ea",
              "cumulativeGasUsed": 22486,
              "gasUsed": 22486,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TransparentUpgradeableProxy: admin cannot fallback to proxy target",
            "hijackedStack": "StatusError: Transaction: 0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "regression should change function signature",
          "title": "should change function signature",
          "duration": 958,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n    at Context.it (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:402:28)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872",
            "receipt": {
              "transactionHash": "0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872",
              "transactionIndex": 1,
              "blockHash": "0x2e6b6825f2f54df80c97b92bad0f85ff2a56f9da231aad6edb0e6faa1652ace8",
              "blockNumber": 5513,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0x9b0f7baa2e02738eeff19ed2e9fd9d4422c0e273",
              "cumulativeGasUsed": 22486,
              "gasUsed": 22486,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TransparentUpgradeableProxy: admin cannot fallback to proxy target",
            "hijackedStack": "StatusError: Transaction: 0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "regression should add fallback function",
          "title": "should add fallback function",
          "duration": 1706,
          "result": "failed",
          "err": {
            "stack": "ProviderError: \nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 23888\n    - network_id > 4132\nPlease check that your Ethereum client:\n    - is running\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\n    - is accessible over the network\n    - is properly configured in your Truffle configuration file (truffle-config.js)\n\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:73:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:102:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpRequestError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:349:1)\n    at ClientRequest.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:252:47)\n    at Socket.socketOnEnd (_http_client.js:435:9)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
            "message": "\nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 23888\n    - network_id > 4132\nPlease check that your Ethereum client:\n    - is running\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\n    - is accessible over the network\n    - is properly configured in your Truffle configuration file (truffle-config.js)\n",
            "name": "ProviderError"
          }
        },
        {
          "fullTitle": "regression should remove fallback function",
          "title": "should remove fallback function",
          "duration": 1669,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected '\\nCould not connect to your Ethereum client with the following parameters:\\n    - host       > 127.0.0.1\\n    - port       > 23888\\n    - network_id > 4132\\nPlease check that your Ethereum client:\\n    - is running\\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\\n    - is accessible over the network\\n    - is properly configured in your Truffle configuration file (truffle-config.js)\\n' to equal 'revert'",
            "showDiff": true,
            "actual": "\nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 23888\n    - network_id > 4132\nPlease check that your Ethereum client:\n    - is running\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\n    - is accessible over the network\n    - is properly configured in your Truffle configuration file (truffle-config.js)\n",
            "expected": "revert",
            "operator": "notStrictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected '\\nCould not connect to your Ethereum client with the following parameters:\\n    - host       > 127.0.0.1\\n    - port       > 23888\\n    - network_id > 4132\\nPlease check that your Ethereum client:\\n    - is running\\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\\n    - is accessible over the network\\n    - is properly configured in your Truffle configuration file (truffle-config.js)\\n' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "Contract: Pausable",
      "tests": []
    },
    {
      "title": "when unpaused",
      "tests": [
        {
          "fullTitle": "when unpaused can perform normal process in non-pause",
          "title": "can perform normal process in non-pause",
          "duration": 364,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when unpaused cannot take drastic measure in non-pause",
          "title": "cannot take drastic measure in non-pause",
          "duration": 420,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when paused",
      "tests": [
        {
          "fullTitle": "when paused emits a Paused event",
          "title": "emits a Paused event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when paused cannot perform normal process in pause",
          "title": "cannot perform normal process in pause",
          "duration": 419,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when paused can take a drastic measure in a pause",
          "title": "can take a drastic measure in a pause",
          "duration": 350,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when paused reverts when re-pausing",
          "title": "reverts when re-pausing",
          "duration": 366,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "unpausing",
      "tests": [
        {
          "fullTitle": "unpausing is unpausable by the pauser",
          "title": "is unpausable by the pauser",
          "duration": 423,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when unpaused",
      "tests": [
        {
          "fullTitle": "when unpaused emits an Unpaused event",
          "title": "emits an Unpaused event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when unpaused should resume allowing normal process",
          "title": "should resume allowing normal process",
          "duration": 746,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when unpaused should prevent drastic measure",
          "title": "should prevent drastic measure",
          "duration": 473,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when unpaused reverts when re-unpausing",
          "title": "reverts when re-unpausing",
          "duration": 430,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: PullPayment",
      "tests": []
    },
    {
      "title": "payments",
      "tests": [
        {
          "fullTitle": "payments can record an async payment correctly",
          "title": "can record an async payment correctly",
          "duration": 360,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3 exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:18:27)",
            "message": "Transaction: 0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3",
            "receipt": {
              "transactionHash": "0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3",
              "transactionIndex": 1,
              "blockHash": "0x47371fc242ded4d64cbacaa7eb2850342d5ca81ef677da95820c5abcb65d700b",
              "blockNumber": 5560,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0x9388eeb991aac0680b3b58ba31d033efe291d9fc",
              "cumulativeGasUsed": 30243,
              "gasUsed": 30243,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "hijackedStack": "StatusError: Transaction: 0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "payments can add multiple balances on one account",
          "title": "can add multiple balances on one account",
          "duration": 421,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173 exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:23:27)",
            "message": "Transaction: 0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173",
            "receipt": {
              "transactionHash": "0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173",
              "transactionIndex": 1,
              "blockHash": "0x1235c67ee7e61ba46a3a0fa350bf84c255af30f93507f65470263fb9bb7d2be1",
              "blockNumber": 5562,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0x1a3be813167c0a8d141db0ee0fb12939c2fe9b65",
              "cumulativeGasUsed": 30243,
              "gasUsed": 30243,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "hijackedStack": "StatusError: Transaction: 0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "payments can add balances on multiple accounts",
          "title": "can add balances on multiple accounts",
          "duration": 435,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64 exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:29:27)",
            "message": "Transaction: 0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64",
            "receipt": {
              "transactionHash": "0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64",
              "transactionIndex": 1,
              "blockHash": "0x098cebc5fd1148cfa7b822c68a4a23cb277a37bbbfd80b0eff3ddf7a3d6d769e",
              "blockNumber": 5564,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0xcae958b7c4d109022ba210fdeb266fc49ec9f0e1",
              "cumulativeGasUsed": 30243,
              "gasUsed": 30243,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "hijackedStack": "StatusError: Transaction: 0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "withdrawPayments",
      "tests": [
        {
          "fullTitle": "withdrawPayments can withdraw payment",
          "title": "can withdraw payment",
          "duration": 428,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:42:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac",
            "receipt": {
              "transactionHash": "0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac",
              "transactionIndex": 1,
              "blockHash": "0x63fee79e5135dee5c1ff0d68e9bfeae46f486a61044bf8a329c147a770e4a4d1",
              "blockNumber": 5566,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0xdb7eeec4d7e01a6da9ef1b969c5f3d7a2d837ec0",
              "cumulativeGasUsed": 30303,
              "gasUsed": 30303,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "hijackedStack": "StatusError: Transaction: 0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "Contract: ReentrancyGuard",
      "tests": [
        {
          "fullTitle": "Contract: ReentrancyGuard nonReentrant function can be called",
          "title": "nonReentrant function can be called",
          "duration": 405,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ReentrancyGuard does not allow remote callback",
          "title": "does not allow remote callback",
          "duration": 862,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ReentrancyGuard does not allow local recursion",
          "title": "does not allow local recursion",
          "duration": 401,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ReentrancyGuard does not allow indirect local recursion",
          "title": "does not allow indirect local recursion",
          "duration": 359,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC1155",
      "tests": []
    },
    {
      "title": "like an ERC1155",
      "tests": []
    },
    {
      "title": "balanceOf",
      "tests": [
        {
          "fullTitle": "balanceOf reverts when queried about the zero address",
          "title": "reverts when queried about the zero address",
          "duration": 14,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "when accounts don't own tokens",
      "tests": [
        {
          "fullTitle": "when accounts don't own tokens returns zero for given addresses",
          "title": "returns zero for given addresses",
          "duration": 40,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when accounts own some tokens",
      "tests": [
        {
          "fullTitle": "when accounts own some tokens returns the amount of tokens owned by the given addresses",
          "title": "returns the amount of tokens owned by the given addresses",
          "duration": 67,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOfBatch",
      "tests": [
        {
          "fullTitle": "balanceOfBatch reverts when input arrays don't match up",
          "title": "reverts when input arrays don't match up",
          "duration": 18,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: accounts and ids length mismatch'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "ERC1155: accounts and ids length mismatch",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: accounts and ids length mismatch'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "balanceOfBatch reverts when one of the addresses is the zero address",
          "title": "reverts when one of the addresses is the zero address",
          "duration": 21,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: balance query for the zero address'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "ERC1155: balance query for the zero address",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: balance query for the zero address'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "when accounts don't own tokens",
      "tests": [
        {
          "fullTitle": "when accounts don't own tokens returns zeros for each account",
          "title": "returns zeros for each account",
          "duration": 32,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when accounts own some tokens",
      "tests": [
        {
          "fullTitle": "when accounts own some tokens returns amounts owned by each account in order passed",
          "title": "returns amounts owned by each account in order passed",
          "duration": 39,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when accounts own some tokens returns multiple times the balance of the same address when asked",
          "title": "returns multiple times the balance of the same address when asked",
          "duration": 26,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll",
      "tests": []
    },
    {
      "title": "safeTransferFrom",
      "tests": []
    },
    {
      "title": "safeBatchTransferFrom",
      "tests": []
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC165",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 92,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "supportsInterface(bytes4) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC1155",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf(address,uint256)",
      "tests": [
        {
          "fullTitle": "balanceOf(address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOfBatch(address[],uint256[])",
      "tests": [
        {
          "fullTitle": "balanceOfBatch(address[],uint256[]) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll(address,bool)",
      "tests": [
        {
          "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "isApprovedForAll(address,address)",
      "tests": [
        {
          "fullTitle": "isApprovedForAll(address,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256,uint256,bytes)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256,uint256,bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
      "tests": [
        {
          "fullTitle": "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "internal functions",
      "tests": []
    },
    {
      "title": "_mint",
      "tests": [
        {
          "fullTitle": "_mint reverts with a zero destination address",
          "title": "reverts with a zero destination address",
          "duration": 405,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted tokens",
      "tests": [
        {
          "fullTitle": "with minted tokens emits a TransferSingle event",
          "title": "emits a TransferSingle event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted tokens credits the minted amount of tokens",
          "title": "credits the minted amount of tokens",
          "duration": 31,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_mintBatch",
      "tests": [
        {
          "fullTitle": "_mintBatch reverts with a zero destination address",
          "title": "reverts with a zero destination address",
          "duration": 410,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "_mintBatch reverts if length of inputs do not match",
          "title": "reverts if length of inputs do not match",
          "duration": 789,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted batch of tokens",
      "tests": [
        {
          "fullTitle": "with minted batch of tokens emits a TransferBatch event",
          "title": "emits a TransferBatch event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted batch of tokens credits the minted batch of tokens",
          "title": "credits the minted batch of tokens",
          "duration": 37,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_burn",
      "tests": [
        {
          "fullTitle": "_burn reverts when burning the zero account's tokens",
          "title": "reverts when burning the zero account's tokens",
          "duration": 425,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "_burn reverts when burning a non-existent token id",
          "title": "reverts when burning a non-existent token id",
          "duration": 436,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "_burn reverts when burning more than available tokens",
          "title": "reverts when burning more than available tokens",
          "duration": 836,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted-then-burnt tokens",
      "tests": [
        {
          "fullTitle": "with minted-then-burnt tokens emits a TransferSingle event",
          "title": "emits a TransferSingle event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted-then-burnt tokens accounts for both minting and burning",
          "title": "accounts for both minting and burning",
          "duration": 45,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_burnBatch",
      "tests": [
        {
          "fullTitle": "_burnBatch reverts when burning the zero account's tokens",
          "title": "reverts when burning the zero account's tokens",
          "duration": 423,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "_burnBatch reverts if length of inputs do not match",
          "title": "reverts if length of inputs do not match",
          "duration": 826,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "_burnBatch reverts when burning a non-existent token id",
          "title": "reverts when burning a non-existent token id",
          "duration": 410,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted-then-burnt tokens",
      "tests": [
        {
          "fullTitle": "with minted-then-burnt tokens emits a TransferBatch event",
          "title": "emits a TransferBatch event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted-then-burnt tokens accounts for both minting and burning",
          "title": "accounts for both minting and burning",
          "duration": 39,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC1155MetadataURI",
      "tests": [
        {
          "fullTitle": "ERC1155MetadataURI emits no URI event in constructor",
          "title": "emits no URI event in constructor",
          "duration": 38,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC1155MetadataURI sets the initial URI for all token types",
          "title": "sets the initial URI for all token types",
          "duration": 26,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_setURI",
      "tests": [
        {
          "fullTitle": "_setURI emits no URI event",
          "title": "emits no URI event",
          "duration": 374,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "_setURI sets the new URI for all token types",
          "title": "sets the new URI for all token types",
          "duration": 431,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC1155Burnable",
      "tests": []
    },
    {
      "title": "burn",
      "tests": [
        {
          "fullTitle": "burn holder can burn their tokens",
          "title": "holder can burn their tokens",
          "duration": 525,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "burn approved operators can burn the holder's tokens",
          "title": "approved operators can burn the holder's tokens",
          "duration": 1021,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "burn unapproved accounts cannot burn the holder's tokens",
          "title": "unapproved accounts cannot burn the holder's tokens",
          "duration": 581,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "burnBatch",
      "tests": [
        {
          "fullTitle": "burnBatch holder can burn their tokens",
          "title": "holder can burn their tokens",
          "duration": 520,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "burnBatch approved operators can burn the holder's tokens",
          "title": "approved operators can burn the holder's tokens",
          "duration": 880,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "burnBatch unapproved accounts cannot burn the holder's tokens",
          "title": "unapproved accounts cannot burn the holder's tokens",
          "duration": 641,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC1155Pausable",
      "tests": []
    },
    {
      "title": "when token is paused",
      "tests": [
        {
          "fullTitle": "when token is paused reverts when trying to safeTransferFrom from holder",
          "title": "reverts when trying to safeTransferFrom from holder",
          "duration": 421,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to safeTransferFrom from operator",
          "title": "reverts when trying to safeTransferFrom from operator",
          "duration": 470,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to safeBatchTransferFrom from holder",
          "title": "reverts when trying to safeBatchTransferFrom from holder",
          "duration": 425,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to safeBatchTransferFrom from operator",
          "title": "reverts when trying to safeBatchTransferFrom from operator",
          "duration": 466,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to mint",
          "title": "reverts when trying to mint",
          "duration": 389,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to mintBatch",
          "title": "reverts when trying to mintBatch",
          "duration": 434,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to burn",
          "title": "reverts when trying to burn",
          "duration": 420,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to burnBatch",
          "title": "reverts when trying to burnBatch",
          "duration": 406,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll",
      "tests": [
        {
          "fullTitle": "setApprovalForAll approves an operator",
          "title": "approves an operator",
          "duration": 436,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf",
      "tests": [
        {
          "fullTitle": "balanceOf returns the amount of tokens owned by the given address",
          "title": "returns the amount of tokens owned by the given address",
          "duration": 34,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "isApprovedForAll",
      "tests": [
        {
          "fullTitle": "isApprovedForAll returns the approval of the operator",
          "title": "returns the approval of the operator",
          "duration": 34,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC1155PresetMinterPauser",
      "tests": [
        {
          "fullTitle": "Contract: ERC1155PresetMinterPauser deployer has the default admin role",
          "title": "deployer has the default admin role",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC1155PresetMinterPauser deployer has the minter role",
          "title": "deployer has the minter role",
          "duration": 140,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC1155PresetMinterPauser deployer has the pauser role",
          "title": "deployer has the pauser role",
          "duration": 23,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC1155PresetMinterPauser minter and pauser role admin is the default admin",
          "title": "minter and pauser role admin is the default admin",
          "duration": 153,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC1155",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 104,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf(address,uint256)",
      "tests": [
        {
          "fullTitle": "balanceOf(address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOfBatch(address[],uint256[])",
      "tests": [
        {
          "fullTitle": "balanceOfBatch(address[],uint256[]) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll(address,bool)",
      "tests": [
        {
          "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "isApprovedForAll(address,address)",
      "tests": [
        {
          "fullTitle": "isApprovedForAll(address,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256,uint256,bytes)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256,uint256,bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
      "tests": [
        {
          "fullTitle": "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "AccessControl",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 13,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "hasRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "hasRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleAdmin(bytes32)",
      "tests": [
        {
          "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "grantRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "grantRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "revokeRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "revokeRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "renounceRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "renounceRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "AccessControlEnumerable",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 38,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleMember(bytes32,uint256)",
      "tests": [
        {
          "fullTitle": "getRoleMember(bytes32,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleMemberCount(bytes32)",
      "tests": [
        {
          "fullTitle": "getRoleMemberCount(bytes32) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "minting",
      "tests": [
        {
          "fullTitle": "minting deployer can mint tokens",
          "title": "deployer can mint tokens",
          "duration": 405,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "minting other accounts cannot mint tokens",
          "title": "other accounts cannot mint tokens",
          "duration": 431,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "batched minting",
      "tests": [
        {
          "fullTitle": "batched minting deployer can batch mint tokens",
          "title": "deployer can batch mint tokens",
          "duration": 436,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "batched minting other accounts cannot batch mint tokens",
          "title": "other accounts cannot batch mint tokens",
          "duration": 416,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "pausing",
      "tests": [
        {
          "fullTitle": "pausing deployer can pause",
          "title": "deployer can pause",
          "duration": 421,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing deployer can unpause",
          "title": "deployer can unpause",
          "duration": 833,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing cannot mint while paused",
          "title": "cannot mint while paused",
          "duration": 837,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing other accounts cannot pause",
          "title": "other accounts cannot pause",
          "duration": 442,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing other accounts cannot unpause",
          "title": "other accounts cannot unpause",
          "duration": 844,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "burning",
      "tests": [
        {
          "fullTitle": "burning holders can burn their tokens",
          "title": "holders can burn their tokens",
          "duration": 785,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC1155Holder",
      "tests": [
        {
          "fullTitle": "Contract: ERC1155Holder receives ERC1155 tokens from a single ID",
          "title": "receives ERC1155 tokens from a single ID",
          "duration": 410,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC1155Holder receives ERC1155 tokens from a multiple IDs",
          "title": "receives ERC1155 tokens from a multiple IDs",
          "duration": 470,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC165",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 21,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "supportsInterface(bytes4) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC1155Receiver",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 8,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 25,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "onERC1155Received(address,address,uint256,uint256,bytes)",
      "tests": [
        {
          "fullTitle": "onERC1155Received(address,address,uint256,uint256,bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
      "tests": [
        {
          "fullTitle": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20",
      "tests": [
        {
          "fullTitle": "Contract: ERC20 has a name",
          "title": "has a name",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC20 has a symbol",
          "title": "has a symbol",
          "duration": 9,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC20 has 18 decimals",
          "title": "has 18 decimals",
          "duration": 9,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_setupDecimals",
      "tests": [
        {
          "fullTitle": "_setupDecimals can set decimals during construction",
          "title": "can set decimals during construction",
          "duration": 356,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "total supply",
      "tests": [
        {
          "fullTitle": "total supply returns the total amount of tokens",
          "title": "returns the total amount of tokens",
          "duration": 10,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf",
      "tests": []
    },
    {
      "title": "when the requested account has no tokens",
      "tests": [
        {
          "fullTitle": "when the requested account has no tokens returns zero",
          "title": "returns zero",
          "duration": 34,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the requested account has some tokens",
      "tests": [
        {
          "fullTitle": "when the requested account has some tokens returns the total amount of tokens",
          "title": "returns the total amount of tokens",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transfer",
      "tests": []
    },
    {
      "title": "when the recipient is not the zero address",
      "tests": []
    },
    {
      "title": "when the sender does not have enough balance",
      "tests": [
        {
          "fullTitle": "when the sender does not have enough balance reverts",
          "title": "reverts",
          "duration": 292,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender transfers all balance",
      "tests": [
        {
          "fullTitle": "when the sender transfers all balance transfers the requested amount",
          "title": "transfers the requested amount",
          "duration": 314,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender transfers all balance emits a transfer event",
          "title": "emits a transfer event",
          "duration": 295,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender transfers zero tokens",
      "tests": [
        {
          "fullTitle": "when the sender transfers zero tokens transfers the requested amount",
          "title": "transfers the requested amount",
          "duration": 330,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender transfers zero tokens emits a transfer event",
          "title": "emits a transfer event",
          "duration": 295,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the recipient is the zero address",
      "tests": [
        {
          "fullTitle": "when the recipient is the zero address reverts",
          "title": "reverts",
          "duration": 307,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transfer from",
      "tests": []
    },
    {
      "title": "when the token owner is not the zero address",
      "tests": []
    },
    {
      "title": "when the recipient is not the zero address",
      "tests": []
    },
    {
      "title": "when the spender has enough approved balance",
      "tests": []
    },
    {
      "title": "when the token owner has enough balance",
      "tests": [
        {
          "fullTitle": "when the token owner has enough balance transfers the requested amount",
          "title": "transfers the requested amount",
          "duration": 342,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the token owner has enough balance decreases the spender allowance",
          "title": "decreases the spender allowance",
          "duration": 329,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the token owner has enough balance emits a transfer event",
          "title": "emits a transfer event",
          "duration": 286,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the token owner has enough balance emits an approval event",
          "title": "emits an approval event",
          "duration": 307,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the token owner does not have enough balance",
      "tests": [
        {
          "fullTitle": "when the token owner does not have enough balance reverts",
          "title": "reverts",
          "duration": 306,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender does not have enough approved balance",
      "tests": []
    },
    {
      "title": "when the token owner has enough balance",
      "tests": [
        {
          "fullTitle": "when the token owner has enough balance reverts",
          "title": "reverts",
          "duration": 298,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the token owner does not have enough balance",
      "tests": [
        {
          "fullTitle": "when the token owner does not have enough balance reverts",
          "title": "reverts",
          "duration": 291,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the recipient is the zero address",
      "tests": [
        {
          "fullTitle": "when the recipient is the zero address reverts",
          "title": "reverts",
          "duration": 409,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the token owner is the zero address",
      "tests": [
        {
          "fullTitle": "when the token owner is the zero address reverts",
          "title": "reverts",
          "duration": 434,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approve",
      "tests": []
    },
    {
      "title": "when the spender is not the zero address",
      "tests": []
    },
    {
      "title": "when the sender has enough balance",
      "tests": [
        {
          "fullTitle": "when the sender has enough balance emits an approval event",
          "title": "emits an approval event",
          "duration": 375,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before approves the requested amount",
          "title": "approves the requested amount",
          "duration": 422,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
          "title": "approves the requested amount and replaces the previous one",
          "duration": 418,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender does not have enough balance",
      "tests": [
        {
          "fullTitle": "when the sender does not have enough balance emits an approval event",
          "title": "emits an approval event",
          "duration": 374,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before approves the requested amount",
          "title": "approves the requested amount",
          "duration": 434,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
          "title": "approves the requested amount and replaces the previous one",
          "duration": 461,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender is the zero address",
      "tests": [
        {
          "fullTitle": "when the spender is the zero address reverts",
          "title": "reverts",
          "duration": 407,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "decrease allowance",
      "tests": []
    },
    {
      "title": "when the spender is not the zero address",
      "tests": []
    },
    {
      "title": "when the sender has enough balance",
      "tests": []
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before reverts",
          "title": "reverts",
          "duration": 407,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount emits an approval event",
          "title": "emits an approval event",
          "duration": 459,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the spender had an approved amount decreases the spender allowance subtracting the requested amount",
          "title": "decreases the spender allowance subtracting the requested amount",
          "duration": 448,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the spender had an approved amount sets the allowance to zero when all allowance is removed",
          "title": "sets the allowance to zero when all allowance is removed",
          "duration": 470,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the spender had an approved amount reverts when more than the full allowance is removed",
          "title": "reverts when more than the full allowance is removed",
          "duration": 435,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender does not have enough balance",
      "tests": []
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before reverts",
          "title": "reverts",
          "duration": 443,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount emits an approval event",
          "title": "emits an approval event",
          "duration": 413,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the spender had an approved amount decreases the spender allowance subtracting the requested amount",
          "title": "decreases the spender allowance subtracting the requested amount",
          "duration": 424,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the spender had an approved amount sets the allowance to zero when all allowance is removed",
          "title": "sets the allowance to zero when all allowance is removed",
          "duration": 451,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the spender had an approved amount reverts when more than the full allowance is removed",
          "title": "reverts when more than the full allowance is removed",
          "duration": 443,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender is the zero address",
      "tests": [
        {
          "fullTitle": "when the spender is the zero address reverts",
          "title": "reverts",
          "duration": 431,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "increase allowance",
      "tests": []
    },
    {
      "title": "when the spender is not the zero address",
      "tests": []
    },
    {
      "title": "when the sender has enough balance",
      "tests": [
        {
          "fullTitle": "when the sender has enough balance emits an approval event",
          "title": "emits an approval event",
          "duration": 396,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before approves the requested amount",
          "title": "approves the requested amount",
          "duration": 432,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount increases the spender allowance adding the requested amount",
          "title": "increases the spender allowance adding the requested amount",
          "duration": 435,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender does not have enough balance",
      "tests": [
        {
          "fullTitle": "when the sender does not have enough balance emits an approval event",
          "title": "emits an approval event",
          "duration": 423,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before approves the requested amount",
          "title": "approves the requested amount",
          "duration": 465,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount increases the spender allowance adding the requested amount",
          "title": "increases the spender allowance adding the requested amount",
          "duration": 445,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender is the zero address",
      "tests": [
        {
          "fullTitle": "when the spender is the zero address reverts",
          "title": "reverts",
          "duration": 411,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_mint",
      "tests": [
        {
          "fullTitle": "_mint rejects a null account",
          "title": "rejects a null account",
          "duration": 409,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "for a non zero account",
      "tests": [
        {
          "fullTitle": "for a non zero account increments totalSupply",
          "title": "increments totalSupply",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a non zero account increments recipient balance",
          "title": "increments recipient balance",
          "duration": 38,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a non zero account emits Transfer event",
          "title": "emits Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_burn",
      "tests": [
        {
          "fullTitle": "_burn rejects a null account",
          "title": "rejects a null account",
          "duration": 408,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "for a non zero account",
      "tests": [
        {
          "fullTitle": "for a non zero account rejects burning more than balance",
          "title": "rejects burning more than balance",
          "duration": 424,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "for entire balance",
      "tests": [
        {
          "fullTitle": "for entire balance decrements totalSupply",
          "title": "decrements totalSupply",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for entire balance decrements initialHolder balance",
          "title": "decrements initialHolder balance",
          "duration": 35,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for entire balance emits Transfer event",
          "title": "emits Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "for less amount than balance",
      "tests": [
        {
          "fullTitle": "for less amount than balance decrements totalSupply",
          "title": "decrements totalSupply",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for less amount than balance decrements initialHolder balance",
          "title": "decrements initialHolder balance",
          "duration": 33,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for less amount than balance emits Transfer event",
          "title": "emits Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_transfer",
      "tests": []
    },
    {
      "title": "when the recipient is not the zero address",
      "tests": []
    },
    {
      "title": "when the sender does not have enough balance",
      "tests": [
        {
          "fullTitle": "when the sender does not have enough balance reverts",
          "title": "reverts",
          "duration": 412,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender transfers all balance",
      "tests": [
        {
          "fullTitle": "when the sender transfers all balance transfers the requested amount",
          "title": "transfers the requested amount",
          "duration": 434,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender transfers all balance emits a transfer event",
          "title": "emits a transfer event",
          "duration": 414,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender transfers zero tokens",
      "tests": [
        {
          "fullTitle": "when the sender transfers zero tokens transfers the requested amount",
          "title": "transfers the requested amount",
          "duration": 446,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender transfers zero tokens emits a transfer event",
          "title": "emits a transfer event",
          "duration": 419,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the recipient is the zero address",
      "tests": [
        {
          "fullTitle": "when the recipient is the zero address reverts",
          "title": "reverts",
          "duration": 471,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is the zero address",
      "tests": [
        {
          "fullTitle": "when the sender is the zero address reverts",
          "title": "reverts",
          "duration": 435,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_approve",
      "tests": []
    },
    {
      "title": "when the spender is not the zero address",
      "tests": []
    },
    {
      "title": "when the sender has enough balance",
      "tests": [
        {
          "fullTitle": "when the sender has enough balance emits an approval event",
          "title": "emits an approval event",
          "duration": 389,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before approves the requested amount",
          "title": "approves the requested amount",
          "duration": 453,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
          "title": "approves the requested amount and replaces the previous one",
          "duration": 429,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender does not have enough balance",
      "tests": [
        {
          "fullTitle": "when the sender does not have enough balance emits an approval event",
          "title": "emits an approval event",
          "duration": 401,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was no approved amount before",
      "tests": [
        {
          "fullTitle": "when there was no approved amount before approves the requested amount",
          "title": "approves the requested amount",
          "duration": 442,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender had an approved amount",
      "tests": [
        {
          "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
          "title": "approves the requested amount and replaces the previous one",
          "duration": 452,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the spender is the zero address",
      "tests": [
        {
          "fullTitle": "when the spender is the zero address reverts",
          "title": "reverts",
          "duration": 428,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the owner is the zero address",
      "tests": [
        {
          "fullTitle": "when the owner is the zero address reverts",
          "title": "reverts",
          "duration": 414,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20Permit",
      "tests": [
        {
          "fullTitle": "Contract: ERC20Permit initial nonce is 0",
          "title": "initial nonce is 0",
          "duration": 12,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC20Permit domain separator",
          "title": "domain separator",
          "duration": 13,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "permit",
      "tests": [
        {
          "fullTitle": "permit accepts owner signature",
          "title": "accepts owner signature",
          "duration": 414,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "permit rejects reused signature",
          "title": "rejects reused signature",
          "duration": 785,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "permit rejects other signature",
          "title": "rejects other signature",
          "duration": 430,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "permit rejects expired permit",
          "title": "rejects expired permit",
          "duration": 458,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20Burnable",
      "tests": []
    },
    {
      "title": "burn",
      "tests": []
    },
    {
      "title": "when the given amount is not greater than balance of the sender",
      "tests": []
    },
    {
      "title": "for a zero amount",
      "tests": [
        {
          "fullTitle": "for a zero amount burns the requested amount",
          "title": "burns the requested amount",
          "duration": 14,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a zero amount emits a transfer event",
          "title": "emits a transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "for a non-zero amount",
      "tests": [
        {
          "fullTitle": "for a non-zero amount burns the requested amount",
          "title": "burns the requested amount",
          "duration": 35,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a non-zero amount emits a transfer event",
          "title": "emits a transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given amount is greater than the balance of the sender",
      "tests": [
        {
          "fullTitle": "when the given amount is greater than the balance of the sender reverts",
          "title": "reverts",
          "duration": 398,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "burnFrom",
      "tests": []
    },
    {
      "title": "on success",
      "tests": []
    },
    {
      "title": "for a zero amount",
      "tests": [
        {
          "fullTitle": "for a zero amount burns the requested amount",
          "title": "burns the requested amount",
          "duration": 61,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a zero amount decrements allowance",
          "title": "decrements allowance",
          "duration": 13,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a zero amount emits a transfer event",
          "title": "emits a transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "for a non-zero amount",
      "tests": [
        {
          "fullTitle": "for a non-zero amount burns the requested amount",
          "title": "burns the requested amount",
          "duration": 23,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a non-zero amount decrements allowance",
          "title": "decrements allowance",
          "duration": 52,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "for a non-zero amount emits a transfer event",
          "title": "emits a transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given amount is greater than the balance of the sender",
      "tests": [
        {
          "fullTitle": "when the given amount is greater than the balance of the sender reverts",
          "title": "reverts",
          "duration": 849,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given amount is greater than the allowance",
      "tests": [
        {
          "fullTitle": "when the given amount is greater than the allowance reverts",
          "title": "reverts",
          "duration": 852,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20Capped",
      "tests": [
        {
          "fullTitle": "Contract: ERC20Capped requires a non-zero cap",
          "title": "requires a non-zero cap",
          "duration": 467,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "once deployed",
      "tests": []
    },
    {
      "title": "capped token",
      "tests": [
        {
          "fullTitle": "capped token starts with the correct cap",
          "title": "starts with the correct cap",
          "duration": 13,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "capped token mints when amount is less than cap",
          "title": "mints when amount is less than cap",
          "duration": 417,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "capped token fails to mint if the amount exceeds the cap",
          "title": "fails to mint if the amount exceeds the cap",
          "duration": 774,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "capped token fails to mint after cap is reached",
          "title": "fails to mint after cap is reached",
          "duration": 837,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20Pausable",
      "tests": []
    },
    {
      "title": "pausable token",
      "tests": []
    },
    {
      "title": "transfer",
      "tests": [
        {
          "fullTitle": "transfer allows to transfer when unpaused",
          "title": "allows to transfer when unpaused",
          "duration": 394,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "transfer allows to transfer when paused and then unpaused",
          "title": "allows to transfer when paused and then unpaused",
          "duration": 1325,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "transfer reverts when trying to transfer when paused",
          "title": "reverts when trying to transfer when paused",
          "duration": 811,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transfer from",
      "tests": [
        {
          "fullTitle": "transfer from allows to transfer from when unpaused",
          "title": "allows to transfer from when unpaused",
          "duration": 619,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "transfer from allows to transfer when paused and then unpaused",
          "title": "allows to transfer when paused and then unpaused",
          "duration": 1479,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "transfer from reverts when trying to transfer from when paused",
          "title": "reverts when trying to transfer from when paused",
          "duration": 1019,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "mint",
      "tests": [
        {
          "fullTitle": "mint allows to mint when unpaused",
          "title": "allows to mint when unpaused",
          "duration": 459,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mint allows to mint when paused and then unpaused",
          "title": "allows to mint when paused and then unpaused",
          "duration": 1258,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mint reverts when trying to mint when paused",
          "title": "reverts when trying to mint when paused",
          "duration": 895,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "burn",
      "tests": [
        {
          "fullTitle": "burn allows to burn when unpaused",
          "title": "allows to burn when unpaused",
          "duration": 506,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "burn allows to burn when paused and then unpaused",
          "title": "allows to burn when paused and then unpaused",
          "duration": 1279,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "burn reverts when trying to burn when paused",
          "title": "reverts when trying to burn when paused",
          "duration": 851,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20Snapshot",
      "tests": []
    },
    {
      "title": "snapshot",
      "tests": [
        {
          "fullTitle": "snapshot emits a snapshot event",
          "title": "emits a snapshot event",
          "duration": 382,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "snapshot creates increasing snapshots ids, starting from 1",
          "title": "creates increasing snapshots ids, starting from 1",
          "duration": 2195,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "totalSupplyAt",
      "tests": [
        {
          "fullTitle": "totalSupplyAt reverts with a snapshot id of 0",
          "title": "reverts with a snapshot id of 0",
          "duration": 31,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "totalSupplyAt reverts with a not-yet-created snapshot id",
          "title": "reverts with a not-yet-created snapshot id",
          "duration": 13,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "with initial snapshot",
      "tests": []
    },
    {
      "title": "with no supply changes after the snapshot",
      "tests": [
        {
          "fullTitle": "with no supply changes after the snapshot returns the current total supply",
          "title": "returns the current total supply",
          "duration": 21,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with supply changes after the snapshot",
      "tests": [
        {
          "fullTitle": "with supply changes after the snapshot returns the total supply before the changes",
          "title": "returns the total supply before the changes",
          "duration": 21,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with a second snapshot after supply changes",
      "tests": [
        {
          "fullTitle": "with a second snapshot after supply changes snapshots return the supply before and after the changes",
          "title": "snapshots return the supply before and after the changes",
          "duration": 56,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with multiple snapshots after supply changes",
      "tests": [
        {
          "fullTitle": "with multiple snapshots after supply changes all posterior snapshots return the supply after the changes",
          "title": "all posterior snapshots return the supply after the changes",
          "duration": 102,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOfAt",
      "tests": [
        {
          "fullTitle": "balanceOfAt reverts with a snapshot id of 0",
          "title": "reverts with a snapshot id of 0",
          "duration": 19,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "balanceOfAt reverts with a not-yet-created snapshot id",
          "title": "reverts with a not-yet-created snapshot id",
          "duration": 15,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "with initial snapshot",
      "tests": []
    },
    {
      "title": "with no balance changes after the snapshot",
      "tests": [
        {
          "fullTitle": "with no balance changes after the snapshot returns the current balance for all accounts",
          "title": "returns the current balance for all accounts",
          "duration": 62,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with balance changes after the snapshot",
      "tests": [
        {
          "fullTitle": "with balance changes after the snapshot returns the balances before the changes",
          "title": "returns the balances before the changes",
          "duration": 55,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with a second snapshot after supply changes",
      "tests": [
        {
          "fullTitle": "with a second snapshot after supply changes snapshots return the balances before and after the changes",
          "title": "snapshots return the balances before and after the changes",
          "duration": 148,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with multiple snapshots after supply changes",
      "tests": [
        {
          "fullTitle": "with multiple snapshots after supply changes all posterior snapshots return the supply after the changes",
          "title": "all posterior snapshots return the supply after the changes",
          "duration": 312,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20PresetFixedSupply",
      "tests": [
        {
          "fullTitle": "Contract: ERC20PresetFixedSupply deployer has the balance equal to initial supply",
          "title": "deployer has the balance equal to initial supply",
          "duration": 11,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC20PresetFixedSupply total supply is equal to initial supply",
          "title": "total supply is equal to initial supply",
          "duration": 11,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "burning",
      "tests": [
        {
          "fullTitle": "burning holders can burn their tokens",
          "title": "holders can burn their tokens",
          "duration": 486,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "burning decrements totalSupply",
          "title": "decrements totalSupply",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC20PresetMinterPauser",
      "tests": [
        {
          "fullTitle": "Contract: ERC20PresetMinterPauser deployer has the default admin role",
          "title": "deployer has the default admin role",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC20PresetMinterPauser deployer has the minter role",
          "title": "deployer has the minter role",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC20PresetMinterPauser deployer has the pauser role",
          "title": "deployer has the pauser role",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC20PresetMinterPauser minter and pauser role admin is the default admin",
          "title": "minter and pauser role admin is the default admin",
          "duration": 28,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "minting",
      "tests": [
        {
          "fullTitle": "minting deployer can mint tokens",
          "title": "deployer can mint tokens",
          "duration": 486,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "minting other accounts cannot mint tokens",
          "title": "other accounts cannot mint tokens",
          "duration": 511,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "pausing",
      "tests": [
        {
          "fullTitle": "pausing deployer can pause",
          "title": "deployer can pause",
          "duration": 413,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing deployer can unpause",
          "title": "deployer can unpause",
          "duration": 923,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing cannot mint while paused",
          "title": "cannot mint while paused",
          "duration": 937,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing other accounts cannot pause",
          "title": "other accounts cannot pause",
          "duration": 869,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing other accounts cannot unpause",
          "title": "other accounts cannot unpause",
          "duration": 941,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "burning",
      "tests": [
        {
          "fullTitle": "burning holders can burn their tokens",
          "title": "holders can burn their tokens",
          "duration": 894,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: SafeERC20",
      "tests": []
    },
    {
      "title": "with address that has no contract code",
      "tests": [
        {
          "fullTitle": "with address that has no contract code reverts on transfer",
          "title": "reverts on transfer",
          "duration": 416,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with address that has no contract code reverts on transferFrom",
          "title": "reverts on transferFrom",
          "duration": 466,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with address that has no contract code reverts on approve",
          "title": "reverts on approve",
          "duration": 443,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with address that has no contract code reverts on increaseAllowance",
          "title": "reverts on increaseAllowance",
          "duration": 446,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with address that has no contract code reverts on decreaseAllowance",
          "title": "reverts on decreaseAllowance",
          "duration": 435,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with token that returns false on all calls",
      "tests": [
        {
          "fullTitle": "with token that returns false on all calls reverts on transfer",
          "title": "reverts on transfer",
          "duration": 451,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with token that returns false on all calls reverts on transferFrom",
          "title": "reverts on transferFrom",
          "duration": 423,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with token that returns false on all calls reverts on approve",
          "title": "reverts on approve",
          "duration": 416,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with token that returns false on all calls reverts on increaseAllowance",
          "title": "reverts on increaseAllowance",
          "duration": 510,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with token that returns false on all calls reverts on decreaseAllowance",
          "title": "reverts on decreaseAllowance",
          "duration": 486,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with token that returns true on all calls",
      "tests": [
        {
          "fullTitle": "with token that returns true on all calls doesn't revert on transfer",
          "title": "doesn't revert on transfer",
          "duration": 446,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with token that returns true on all calls doesn't revert on transferFrom",
          "title": "doesn't revert on transferFrom",
          "duration": 419,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approvals",
      "tests": []
    },
    {
      "title": "with zero allowance",
      "tests": [
        {
          "fullTitle": "with zero allowance doesn't revert when approving a non-zero allowance",
          "title": "doesn't revert when approving a non-zero allowance",
          "duration": 441,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with zero allowance doesn't revert when approving a zero allowance",
          "title": "doesn't revert when approving a zero allowance",
          "duration": 435,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with zero allowance doesn't revert when increasing the allowance",
          "title": "doesn't revert when increasing the allowance",
          "duration": 440,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with zero allowance reverts when decreasing the allowance",
          "title": "reverts when decreasing the allowance",
          "duration": 533,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with non-zero allowance",
      "tests": [
        {
          "fullTitle": "with non-zero allowance reverts when approving a non-zero allowance",
          "title": "reverts when approving a non-zero allowance",
          "duration": 453,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance doesn't revert when approving a zero allowance",
          "title": "doesn't revert when approving a zero allowance",
          "duration": 444,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance doesn't revert when increasing the allowance",
          "title": "doesn't revert when increasing the allowance",
          "duration": 449,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance doesn't revert when decreasing the allowance to a positive value",
          "title": "doesn't revert when decreasing the allowance to a positive value",
          "duration": 476,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance reverts when decreasing the allowance to a negative value",
          "title": "reverts when decreasing the allowance to a negative value",
          "duration": 513,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with token that returns no boolean values",
      "tests": [
        {
          "fullTitle": "with token that returns no boolean values doesn't revert on transfer",
          "title": "doesn't revert on transfer",
          "duration": 487,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with token that returns no boolean values doesn't revert on transferFrom",
          "title": "doesn't revert on transferFrom",
          "duration": 484,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approvals",
      "tests": []
    },
    {
      "title": "with zero allowance",
      "tests": [
        {
          "fullTitle": "with zero allowance doesn't revert when approving a non-zero allowance",
          "title": "doesn't revert when approving a non-zero allowance",
          "duration": 529,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with zero allowance doesn't revert when approving a zero allowance",
          "title": "doesn't revert when approving a zero allowance",
          "duration": 474,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with zero allowance doesn't revert when increasing the allowance",
          "title": "doesn't revert when increasing the allowance",
          "duration": 492,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with zero allowance reverts when decreasing the allowance",
          "title": "reverts when decreasing the allowance",
          "duration": 444,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with non-zero allowance",
      "tests": [
        {
          "fullTitle": "with non-zero allowance reverts when approving a non-zero allowance",
          "title": "reverts when approving a non-zero allowance",
          "duration": 458,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance doesn't revert when approving a zero allowance",
          "title": "doesn't revert when approving a zero allowance",
          "duration": 434,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance doesn't revert when increasing the allowance",
          "title": "doesn't revert when increasing the allowance",
          "duration": 412,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance doesn't revert when decreasing the allowance to a positive value",
          "title": "doesn't revert when decreasing the allowance to a positive value",
          "duration": 416,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero allowance reverts when decreasing the allowance to a negative value",
          "title": "reverts when decreasing the allowance to a negative value",
          "duration": 463,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: TokenTimelock",
      "tests": []
    },
    {
      "title": "with token",
      "tests": [
        {
          "fullTitle": "with token rejects a release time in the past",
          "title": "rejects a release time in the past",
          "duration": 418,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "once deployed",
      "tests": [
        {
          "fullTitle": "once deployed can get state",
          "title": "can get state",
          "duration": 42,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed cannot be released before time limit",
          "title": "cannot be released before time limit",
          "duration": 484,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed cannot be released just before time limit",
          "title": "cannot be released just before time limit",
          "duration": 465,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed can be released just after limit",
          "title": "can be released just after limit",
          "duration": 445,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231 exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n    at Context.<anonymous> (test/token/ERC20/utils/TokenTimelock.test.js:53:29)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231 exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231",
            "receipt": {
              "transactionHash": "0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231",
              "transactionIndex": 1,
              "blockHash": "0x7913876cd4e4a1f3a8598c0f37c6f3076c12cddf9751a3a4b2d414914afcff6f",
              "blockNumber": 6269,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0xac0f8277dbab26d7c23b675e37db254ed158444a",
              "cumulativeGasUsed": 21380,
              "gasUsed": 21380,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TokenTimelock: current time is before release time",
            "hijackedStack": "StatusError: Transaction: 0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231 exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "once deployed can be released after time limit",
          "title": "can be released after time limit",
          "duration": 435,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n    at Context.<anonymous> (test/token/ERC20/utils/TokenTimelock.test.js:59:29)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a",
            "receipt": {
              "transactionHash": "0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a",
              "transactionIndex": 1,
              "blockHash": "0x558b2aa6c56f8bec05f76d9eeb29e71146ef176523b2fb90f73153559eadb9da",
              "blockNumber": 6273,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0x40da5300feaf8dd8fdf75f31b5f020770535a5b0",
              "cumulativeGasUsed": 21380,
              "gasUsed": 21380,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TokenTimelock: current time is before release time",
            "hijackedStack": "StatusError: Transaction: 0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "once deployed cannot be released twice",
          "title": "cannot be released twice",
          "duration": 453,
          "result": "failed",
          "err": {
            "stack": "StatusError: Transaction: 0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n    at Context.<anonymous> (test/token/ERC20/utils/TokenTimelock.test.js:65:29)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Transaction: 0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
            "name": "StatusError",
            "tx": "0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa",
            "receipt": {
              "transactionHash": "0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa",
              "transactionIndex": 1,
              "blockHash": "0x298f6c08423044e8eb7d187bfcfeaa5bada3dce98c149c186d355275fbb89a8a",
              "blockNumber": 6277,
              "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
              "to": "0xa8b579dceedc515daffd66561fe97a0d15c92a54",
              "cumulativeGasUsed": 21380,
              "gasUsed": 21380,
              "logs": [],
              "logsBloom": "0x
              "status": false,
              "rawLogs": []
            },
            "reason": "TokenTimelock: current time is before release time",
            "hijackedStack": "StatusError: Transaction: 0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "Contract: ERC721",
      "tests": []
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC165",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 10,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 45,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "supportsInterface(bytes4) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC721",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 10,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 11,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf(address)",
      "tests": [
        {
          "fullTitle": "balanceOf(address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ownerOf(uint256)",
      "tests": [
        {
          "fullTitle": "ownerOf(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approve(address,uint256)",
      "tests": [
        {
          "fullTitle": "approve(address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getApproved(uint256)",
      "tests": [
        {
          "fullTitle": "getApproved(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll(address,bool)",
      "tests": [
        {
          "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "isApprovedForAll(address,address)",
      "tests": [
        {
          "fullTitle": "isApprovedForAll(address,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transferFrom(address,address,uint256)",
      "tests": [
        {
          "fullTitle": "transferFrom(address,address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256,bytes)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256,bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted tokens",
      "tests": []
    },
    {
      "title": "balanceOf",
      "tests": []
    },
    {
      "title": "when the given address owns some tokens",
      "tests": [
        {
          "fullTitle": "when the given address owns some tokens returns the amount of tokens owned by the given address",
          "title": "returns the amount of tokens owned by the given address",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given address does not own any tokens",
      "tests": [
        {
          "fullTitle": "when the given address does not own any tokens returns 0",
          "title": "returns 0",
          "duration": 21,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when querying the zero address",
      "tests": [
        {
          "fullTitle": "when querying the zero address throws",
          "title": "throws",
          "duration": 24,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "ownerOf",
      "tests": []
    },
    {
      "title": "when the given token ID was tracked by this token",
      "tests": [
        {
          "fullTitle": "when the given token ID was tracked by this token returns the owner of the given token ID",
          "title": "returns the owner of the given token ID",
          "duration": 20,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID was not tracked by this token",
      "tests": [
        {
          "fullTitle": "when the given token ID was not tracked by this token reverts",
          "title": "reverts",
          "duration": 31,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: owner query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "transfers",
      "tests": []
    },
    {
      "title": "via transferFrom",
      "tests": []
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 23,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 54,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 39,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 49,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 187,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 58,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 108,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 43,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 445,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 178,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 36,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 168,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 46,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 905,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1205,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 713,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 736,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "via safeTransferFrom",
      "tests": []
    },
    {
      "title": "with data",
      "tests": []
    },
    {
      "title": "to a user account",
      "tests": []
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 60,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 156,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 123,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 88,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 269,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 37,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 259,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 282,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 164,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 74,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 138,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 89,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 100,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 821,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1203,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 961,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 839,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a valid receiver contract",
      "tests": [
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received",
          "title": "calls onERC721Received",
          "duration": 919,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
          "title": "calls onERC721Received from approved",
          "duration": 1026,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 48,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 76,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 141,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 112,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 109,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 71,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 286,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 298,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 44,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 122,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 323,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 85,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 228,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 304,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 884,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1147,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 789,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 868,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with an invalid token id",
      "tests": [
        {
          "fullTitle": "with an invalid token id reverts",
          "title": "reverts",
          "duration": 897,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "without data",
      "tests": []
    },
    {
      "title": "to a user account",
      "tests": []
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 122,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 54,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 47,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 52,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 35,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 183,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 23,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 143,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 178,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 77,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 74,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 77,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 78,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 1017,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1171,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 790,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 738,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a valid receiver contract",
      "tests": [
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received",
          "title": "calls onERC721Received",
          "duration": 903,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
          "title": "calls onERC721Received from approved",
          "duration": 757,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 75,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 93,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 59,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 48,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 82,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 81,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 97,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 23,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 65,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 198,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 67,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 86,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 86,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 902,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1091,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 904,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 746,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with an invalid token id",
      "tests": [
        {
          "fullTitle": "with an invalid token id reverts",
          "title": "reverts",
          "duration": 780,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract returning unexpected value",
      "tests": [
        {
          "fullTitle": "to a receiver contract returning unexpected value reverts",
          "title": "reverts",
          "duration": 1676,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts with message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts with message reverts",
          "title": "reverts",
          "duration": 1647,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts without message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts without message reverts",
          "title": "reverts",
          "duration": 1718,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that panics",
      "tests": [
        {
          "fullTitle": "to a receiver contract that panics reverts",
          "title": "reverts",
          "duration": 1818,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a contract that does not implement the required function",
      "tests": [
        {
          "fullTitle": "to a contract that does not implement the required function reverts",
          "title": "reverts",
          "duration": 892,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safe mint",
      "tests": []
    },
    {
      "title": "via safeMint",
      "tests": [
        {
          "fullTitle": "via safeMint calls onERC721Received — with data",
          "title": "calls onERC721Received — with data",
          "duration": 1670,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "via safeMint calls onERC721Received — without data",
          "title": "calls onERC721Received — without data",
          "duration": 1551,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract returning unexpected value",
      "tests": [
        {
          "fullTitle": "to a receiver contract returning unexpected value reverts",
          "title": "reverts",
          "duration": 1753,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts with message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts with message reverts",
          "title": "reverts",
          "duration": 1552,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts without message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts without message reverts",
          "title": "reverts",
          "duration": 1766,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that panics",
      "tests": [
        {
          "fullTitle": "to a receiver contract that panics reverts",
          "title": "reverts",
          "duration": 1564,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a contract that does not implement the required function",
      "tests": [
        {
          "fullTitle": "to a contract that does not implement the required function reverts",
          "title": "reverts",
          "duration": 851,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approve",
      "tests": []
    },
    {
      "title": "when clearing approval",
      "tests": []
    },
    {
      "title": "when there was no prior approval",
      "tests": [
        {
          "fullTitle": "when there was no prior approval clears approval for the token",
          "title": "clears approval for the token",
          "duration": 76,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was no prior approval emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was a prior approval",
      "tests": [
        {
          "fullTitle": "when there was a prior approval clears approval for the token",
          "title": "clears approval for the token",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was a prior approval emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when approving a non-zero address",
      "tests": []
    },
    {
      "title": "when there was no prior approval",
      "tests": [
        {
          "fullTitle": "when there was no prior approval sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 98,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was no prior approval emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was a prior approval to the same address",
      "tests": [
        {
          "fullTitle": "when there was a prior approval to the same address sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 38,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was a prior approval to the same address emits an approval event",
          "title": "emits an approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was a prior approval to a different address",
      "tests": [
        {
          "fullTitle": "when there was a prior approval to a different address sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 37,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was a prior approval to a different address emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address that receives the approval is the owner",
      "tests": [
        {
          "fullTitle": "when the address that receives the approval is the owner reverts",
          "title": "reverts",
          "duration": 810,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender does not own the given token ID",
      "tests": [
        {
          "fullTitle": "when the sender does not own the given token ID reverts",
          "title": "reverts",
          "duration": 1359,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is approved for the given token ID",
      "tests": [
        {
          "fullTitle": "when the sender is approved for the given token ID reverts",
          "title": "reverts",
          "duration": 1571,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is an operator",
      "tests": [
        {
          "fullTitle": "when the sender is an operator sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 237,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender is an operator emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 1356,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll",
      "tests": []
    },
    {
      "title": "when the operator willing to approve is not the owner",
      "tests": []
    },
    {
      "title": "when there is no operator approval set by the sender",
      "tests": [
        {
          "fullTitle": "when there is no operator approval set by the sender approves the operator",
          "title": "approves the operator",
          "duration": 789,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there is no operator approval set by the sender emits an approval event",
          "title": "emits an approval event",
          "duration": 806,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the operator was set as not approved",
      "tests": [
        {
          "fullTitle": "when the operator was set as not approved approves the operator",
          "title": "approves the operator",
          "duration": 883,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the operator was set as not approved emits an approval event",
          "title": "emits an approval event",
          "duration": 721,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the operator was set as not approved can unset the operator approval",
          "title": "can unset the operator approval",
          "duration": 870,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the operator was already approved",
      "tests": [
        {
          "fullTitle": "when the operator was already approved keeps the approval to the given address",
          "title": "keeps the approval to the given address",
          "duration": 783,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the operator was already approved emits an approval event",
          "title": "emits an approval event",
          "duration": 753,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the operator is the owner",
      "tests": [
        {
          "fullTitle": "when the operator is the owner reverts",
          "title": "reverts",
          "duration": 897,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getApproved",
      "tests": []
    },
    {
      "title": "when token is not minted",
      "tests": [
        {
          "fullTitle": "when token is not minted reverts",
          "title": "reverts",
          "duration": 54,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: approved query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "when token has been minted ",
      "tests": [
        {
          "fullTitle": "when token has been minted  should return the zero address",
          "title": "should return the zero address",
          "duration": 44,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when account has been approved",
      "tests": [
        {
          "fullTitle": "when account has been approved returns approved account",
          "title": "returns approved account",
          "duration": 36,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_mint(address, uint256)",
      "tests": [
        {
          "fullTitle": "_mint(address, uint256) reverts with a null destination address",
          "title": "reverts with a null destination address",
          "duration": 765,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted token",
      "tests": [
        {
          "fullTitle": "with minted token emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted token creates the token",
          "title": "creates the token",
          "duration": 146,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted token reverts when adding a token id that already exists",
          "title": "reverts when adding a token id that already exists",
          "duration": 832,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_burn",
      "tests": [
        {
          "fullTitle": "_burn reverts when burning a non-existent token id",
          "title": "reverts when burning a non-existent token id",
          "duration": 941,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted tokens",
      "tests": []
    },
    {
      "title": "with burnt token",
      "tests": [
        {
          "fullTitle": "with burnt token emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with burnt token emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with burnt token deletes the token",
          "title": "deletes the token",
          "duration": 52,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: owner query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "with burnt token reverts when burning a token id that has been deleted",
          "title": "reverts when burning a token id that has been deleted",
          "duration": 869,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC721Metadata",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 15,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 73,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "name()",
      "tests": [
        {
          "fullTitle": "name() has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "symbol()",
      "tests": [
        {
          "fullTitle": "symbol() has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "tokenURI(uint256)",
      "tests": [
        {
          "fullTitle": "tokenURI(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "metadata",
      "tests": [
        {
          "fullTitle": "metadata has a name",
          "title": "has a name",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "metadata has a symbol",
          "title": "has a symbol",
          "duration": 33,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "token URI",
      "tests": [
        {
          "fullTitle": "token URI return empty string by default",
          "title": "return empty string by default",
          "duration": 65,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI reverts when queried for non existent token id",
          "title": "reverts when queried for non existent token id",
          "duration": 60,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "ERC721Metadata: URI query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "base URI",
      "tests": [
        {
          "fullTitle": "base URI base URI can be set",
          "title": "base URI can be set",
          "result": "pending",
          "err": {}
        },
        {
          "fullTitle": "base URI base URI is added as a prefix to the token URI",
          "title": "base URI is added as a prefix to the token URI",
          "result": "pending",
          "err": {}
        },
        {
          "fullTitle": "base URI token URI can be changed by changing the base URI",
          "title": "token URI can be changed by changing the base URI",
          "result": "pending",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC721Enumerable",
      "tests": []
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC165",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 14,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "supportsInterface(bytes4) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC721",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 15,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf(address)",
      "tests": [
        {
          "fullTitle": "balanceOf(address) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ownerOf(uint256)",
      "tests": [
        {
          "fullTitle": "ownerOf(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approve(address,uint256)",
      "tests": [
        {
          "fullTitle": "approve(address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getApproved(uint256)",
      "tests": [
        {
          "fullTitle": "getApproved(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll(address,bool)",
      "tests": [
        {
          "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "isApprovedForAll(address,address)",
      "tests": [
        {
          "fullTitle": "isApprovedForAll(address,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transferFrom(address,address,uint256)",
      "tests": [
        {
          "fullTitle": "transferFrom(address,address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256,bytes)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256,bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted tokens",
      "tests": []
    },
    {
      "title": "balanceOf",
      "tests": []
    },
    {
      "title": "when the given address owns some tokens",
      "tests": [
        {
          "fullTitle": "when the given address owns some tokens returns the amount of tokens owned by the given address",
          "title": "returns the amount of tokens owned by the given address",
          "duration": 77,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given address does not own any tokens",
      "tests": [
        {
          "fullTitle": "when the given address does not own any tokens returns 0",
          "title": "returns 0",
          "duration": 56,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when querying the zero address",
      "tests": [
        {
          "fullTitle": "when querying the zero address throws",
          "title": "throws",
          "duration": 49,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "ownerOf",
      "tests": []
    },
    {
      "title": "when the given token ID was tracked by this token",
      "tests": [
        {
          "fullTitle": "when the given token ID was tracked by this token returns the owner of the given token ID",
          "title": "returns the owner of the given token ID",
          "duration": 38,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID was not tracked by this token",
      "tests": [
        {
          "fullTitle": "when the given token ID was not tracked by this token reverts",
          "title": "reverts",
          "duration": 63,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: owner query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "transfers",
      "tests": []
    },
    {
      "title": "via transferFrom",
      "tests": []
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 88,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 133,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 183,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 34,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 106,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 108,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 61,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 40,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 46,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 75,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 71,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 33,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 99,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 91,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 60,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 63,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 171,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 150,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 808,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1268,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 910,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 908,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "via safeTransferFrom",
      "tests": []
    },
    {
      "title": "with data",
      "tests": []
    },
    {
      "title": "to a user account",
      "tests": []
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 73,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 164,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 98,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 81,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 133,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 104,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 87,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 97,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 108,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 116,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 101,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 41,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 60,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 70,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 69,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 82,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 29,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 29,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 909,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1475,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 792,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 885,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a valid receiver contract",
      "tests": [
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received",
          "title": "calls onERC721Received",
          "duration": 727,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
          "title": "calls onERC721Received from approved",
          "duration": 1207,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 40,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 36,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 41,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 74,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 45,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 130,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 56,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 85,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 91,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 2,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 45,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 120,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 36,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 47,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 39,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 165,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 155,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 67,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 71,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 57,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 896,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1298,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 770,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 913,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with an invalid token id",
      "tests": [
        {
          "fullTitle": "with an invalid token id reverts",
          "title": "reverts",
          "duration": 806,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "without data",
      "tests": []
    },
    {
      "title": "to a user account",
      "tests": []
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 42,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 42,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 38,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 178,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 247,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 94,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 164,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 43,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 72,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 167,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 187,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 122,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 123,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 97,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 216,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 138,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 59,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 121,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 776,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1249,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 819,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 926,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a valid receiver contract",
      "tests": [
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received",
          "title": "calls onERC721Received",
          "duration": 794,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
          "title": "calls onERC721Received from approved",
          "duration": 1228,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner",
      "tests": [
        {
          "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 60,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 52,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 144,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the approved individual",
      "tests": [
        {
          "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 102,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 311,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 127,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the approved individual adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 61,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the operator",
      "tests": [
        {
          "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 40,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 191,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 68,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the operator adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 91,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when called by the owner without an approved user",
      "tests": [
        {
          "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
          "title": "transfers the ownership of the given token ID to the given address",
          "duration": 54,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 102,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user emits an Approval event",
          "title": "emits an Approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners balances",
          "title": "adjusts owners balances",
          "duration": 81,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
          "title": "adjusts owners tokens by index",
          "duration": 110,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sent to the owner",
      "tests": [
        {
          "fullTitle": "when sent to the owner keeps ownership of the token",
          "title": "keeps ownership of the token",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner clears the approval for the token ID",
          "title": "clears the approval for the token ID",
          "duration": 110,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner emits only a transfer event",
          "title": "emits only a transfer event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps the owner balance",
          "title": "keeps the owner balance",
          "duration": 84,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sent to the owner keeps same tokens by index",
          "title": "keeps same tokens by index",
          "duration": 122,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address of the previous owner is incorrect",
      "tests": [
        {
          "fullTitle": "when the address of the previous owner is incorrect reverts",
          "title": "reverts",
          "duration": 901,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is not authorized for the token id",
      "tests": [
        {
          "fullTitle": "when the sender is not authorized for the token id reverts",
          "title": "reverts",
          "duration": 1329,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 917,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address to transfer the token to is the zero address",
      "tests": [
        {
          "fullTitle": "when the address to transfer the token to is the zero address reverts",
          "title": "reverts",
          "duration": 786,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with an invalid token id",
      "tests": [
        {
          "fullTitle": "with an invalid token id reverts",
          "title": "reverts",
          "duration": 769,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract returning unexpected value",
      "tests": [
        {
          "fullTitle": "to a receiver contract returning unexpected value reverts",
          "title": "reverts",
          "duration": 1882,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts with message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts with message reverts",
          "title": "reverts",
          "duration": 1764,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts without message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts without message reverts",
          "title": "reverts",
          "duration": 1680,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that panics",
      "tests": [
        {
          "fullTitle": "to a receiver contract that panics reverts",
          "title": "reverts",
          "duration": 1826,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a contract that does not implement the required function",
      "tests": [
        {
          "fullTitle": "to a contract that does not implement the required function reverts",
          "title": "reverts",
          "duration": 915,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safe mint",
      "tests": []
    },
    {
      "title": "via safeMint",
      "tests": [
        {
          "fullTitle": "via safeMint calls onERC721Received — with data",
          "title": "calls onERC721Received — with data",
          "duration": 1804,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "via safeMint calls onERC721Received — without data",
          "title": "calls onERC721Received — without data",
          "duration": 1799,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract returning unexpected value",
      "tests": [
        {
          "fullTitle": "to a receiver contract returning unexpected value reverts",
          "title": "reverts",
          "duration": 1744,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts with message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts with message reverts",
          "title": "reverts",
          "duration": 1686,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that reverts without message",
      "tests": [
        {
          "fullTitle": "to a receiver contract that reverts without message reverts",
          "title": "reverts",
          "duration": 1794,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a receiver contract that panics",
      "tests": [
        {
          "fullTitle": "to a receiver contract that panics reverts",
          "title": "reverts",
          "duration": 1667,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "to a contract that does not implement the required function",
      "tests": [
        {
          "fullTitle": "to a contract that does not implement the required function reverts",
          "title": "reverts",
          "duration": 893,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approve",
      "tests": []
    },
    {
      "title": "when clearing approval",
      "tests": []
    },
    {
      "title": "when there was no prior approval",
      "tests": [
        {
          "fullTitle": "when there was no prior approval clears approval for the token",
          "title": "clears approval for the token",
          "duration": 54,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was no prior approval emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was a prior approval",
      "tests": [
        {
          "fullTitle": "when there was a prior approval clears approval for the token",
          "title": "clears approval for the token",
          "duration": 89,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was a prior approval emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when approving a non-zero address",
      "tests": []
    },
    {
      "title": "when there was no prior approval",
      "tests": [
        {
          "fullTitle": "when there was no prior approval sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 28,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was no prior approval emits an approval event",
          "title": "emits an approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was a prior approval to the same address",
      "tests": [
        {
          "fullTitle": "when there was a prior approval to the same address sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 69,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was a prior approval to the same address emits an approval event",
          "title": "emits an approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there was a prior approval to a different address",
      "tests": [
        {
          "fullTitle": "when there was a prior approval to a different address sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 89,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there was a prior approval to a different address emits an approval event",
          "title": "emits an approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the address that receives the approval is the owner",
      "tests": [
        {
          "fullTitle": "when the address that receives the approval is the owner reverts",
          "title": "reverts",
          "duration": 834,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender does not own the given token ID",
      "tests": [
        {
          "fullTitle": "when the sender does not own the given token ID reverts",
          "title": "reverts",
          "duration": 1195,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is approved for the given token ID",
      "tests": [
        {
          "fullTitle": "when the sender is approved for the given token ID reverts",
          "title": "reverts",
          "duration": 2020,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the sender is an operator",
      "tests": [
        {
          "fullTitle": "when the sender is an operator sets the approval for the target address",
          "title": "sets the approval for the target address",
          "duration": 44,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the sender is an operator emits an approval event",
          "title": "emits an approval event",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the given token ID does not exist",
      "tests": [
        {
          "fullTitle": "when the given token ID does not exist reverts",
          "title": "reverts",
          "duration": 1229,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll",
      "tests": []
    },
    {
      "title": "when the operator willing to approve is not the owner",
      "tests": []
    },
    {
      "title": "when there is no operator approval set by the sender",
      "tests": [
        {
          "fullTitle": "when there is no operator approval set by the sender approves the operator",
          "title": "approves the operator",
          "duration": 948,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when there is no operator approval set by the sender emits an approval event",
          "title": "emits an approval event",
          "duration": 867,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the operator was set as not approved",
      "tests": [
        {
          "fullTitle": "when the operator was set as not approved approves the operator",
          "title": "approves the operator",
          "duration": 991,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the operator was set as not approved emits an approval event",
          "title": "emits an approval event",
          "duration": 877,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the operator was set as not approved can unset the operator approval",
          "title": "can unset the operator approval",
          "duration": 1029,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the operator was already approved",
      "tests": [
        {
          "fullTitle": "when the operator was already approved keeps the approval to the given address",
          "title": "keeps the approval to the given address",
          "duration": 1243,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when the operator was already approved emits an approval event",
          "title": "emits an approval event",
          "duration": 971,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the operator is the owner",
      "tests": [
        {
          "fullTitle": "when the operator is the owner reverts",
          "title": "reverts",
          "duration": 1001,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getApproved",
      "tests": []
    },
    {
      "title": "when token is not minted",
      "tests": [
        {
          "fullTitle": "when token is not minted reverts",
          "title": "reverts",
          "duration": 89,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: approved query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "when token has been minted ",
      "tests": [
        {
          "fullTitle": "when token has been minted  should return the zero address",
          "title": "should return the zero address",
          "duration": 125,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when account has been approved",
      "tests": [
        {
          "fullTitle": "when account has been approved returns approved account",
          "title": "returns approved account",
          "duration": 51,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_mint(address, uint256)",
      "tests": [
        {
          "fullTitle": "_mint(address, uint256) reverts with a null destination address",
          "title": "reverts with a null destination address",
          "duration": 809,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted token",
      "tests": [
        {
          "fullTitle": "with minted token emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted token creates the token",
          "title": "creates the token",
          "duration": 50,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted token reverts when adding a token id that already exists",
          "title": "reverts when adding a token id that already exists",
          "duration": 969,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_burn",
      "tests": [
        {
          "fullTitle": "_burn reverts when burning a non-existent token id",
          "title": "reverts when burning a non-existent token id",
          "duration": 947,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted tokens",
      "tests": []
    },
    {
      "title": "with burnt token",
      "tests": [
        {
          "fullTitle": "with burnt token emits a Transfer event",
          "title": "emits a Transfer event",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with burnt token emits an Approval event",
          "title": "emits an Approval event",
          "duration": 0,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with burnt token deletes the token",
          "title": "deletes the token",
          "duration": 37,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: owner query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "with burnt token reverts when burning a token id that has been deleted",
          "title": "reverts when burning a token id that has been deleted",
          "duration": 870,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC721Metadata",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 15,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 21,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "name()",
      "tests": [
        {
          "fullTitle": "name() has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "symbol()",
      "tests": [
        {
          "fullTitle": "symbol() has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "tokenURI(uint256)",
      "tests": [
        {
          "fullTitle": "tokenURI(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "metadata",
      "tests": [
        {
          "fullTitle": "metadata has a name",
          "title": "has a name",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "metadata has a symbol",
          "title": "has a symbol",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "token URI",
      "tests": [
        {
          "fullTitle": "token URI return empty string by default",
          "title": "return empty string by default",
          "duration": 46,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI reverts when queried for non existent token id",
          "title": "reverts when queried for non existent token id",
          "duration": 81,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "ERC721Metadata: URI query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "base URI",
      "tests": [
        {
          "fullTitle": "base URI base URI can be set",
          "title": "base URI can be set",
          "duration": 1036,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "base URI base URI is added as a prefix to the token URI",
          "title": "base URI is added as a prefix to the token URI",
          "duration": 914,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "base URI token URI can be changed by changing the base URI",
          "title": "token URI can be changed by changing the base URI",
          "duration": 1739,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC721Enumerable",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 24,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "totalSupply()",
      "tests": [
        {
          "fullTitle": "totalSupply() has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "tokenOfOwnerByIndex(address,uint256)",
      "tests": [
        {
          "fullTitle": "tokenOfOwnerByIndex(address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "tokenByIndex(uint256)",
      "tests": [
        {
          "fullTitle": "tokenByIndex(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted tokens",
      "tests": []
    },
    {
      "title": "totalSupply",
      "tests": [
        {
          "fullTitle": "totalSupply returns total token supply",
          "title": "returns total token supply",
          "duration": 130,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "tokenOfOwnerByIndex",
      "tests": []
    },
    {
      "title": "when the given index is lower than the amount of tokens owned by the given address",
      "tests": [
        {
          "fullTitle": "when the given index is lower than the amount of tokens owned by the given address returns the token ID placed at the given index",
          "title": "returns the token ID placed at the given index",
          "duration": 133,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when the index is greater than or equal to the total tokens owned by the given address",
      "tests": [
        {
          "fullTitle": "when the index is greater than or equal to the total tokens owned by the given address reverts",
          "title": "reverts",
          "duration": 26,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "when the given address does not own any token",
      "tests": [
        {
          "fullTitle": "when the given address does not own any token reverts",
          "title": "reverts",
          "duration": 91,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "after transferring all tokens to another user",
      "tests": [
        {
          "fullTitle": "after transferring all tokens to another user returns correct token IDs for target",
          "title": "returns correct token IDs for target",
          "duration": 110,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "after transferring all tokens to another user returns empty collection for original owner",
          "title": "returns empty collection for original owner",
          "duration": 75,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "tokenByIndex",
      "tests": [
        {
          "fullTitle": "tokenByIndex returns all tokens",
          "title": "returns all tokens",
          "duration": 82,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "tokenByIndex reverts if index is greater than supply",
          "title": "reverts if index is greater than supply",
          "duration": 33,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "tokenByIndex returns all tokens after burning token 5042 and minting new tokens",
          "title": "returns all tokens after burning token 5042 and minting new tokens",
          "duration": 2666,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "tokenByIndex returns all tokens after burning token 79217 and minting new tokens",
          "title": "returns all tokens after burning token 79217 and minting new tokens",
          "duration": 2727,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_mint(address, uint256)",
      "tests": [
        {
          "fullTitle": "_mint(address, uint256) reverts with a null destination address",
          "title": "reverts with a null destination address",
          "duration": 811,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted token",
      "tests": [
        {
          "fullTitle": "with minted token adjusts owner tokens by index",
          "title": "adjusts owner tokens by index",
          "duration": 40,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with minted token adjusts all tokens list",
          "title": "adjusts all tokens list",
          "duration": 106,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "_burn",
      "tests": [
        {
          "fullTitle": "_burn reverts when burning a non-existent token id",
          "title": "reverts when burning a non-existent token id",
          "duration": 828,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with minted tokens",
      "tests": []
    },
    {
      "title": "with burnt token",
      "tests": [
        {
          "fullTitle": "with burnt token removes that token from the token list of the owner",
          "title": "removes that token from the token list of the owner",
          "duration": 66,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with burnt token adjusts all tokens list",
          "title": "adjusts all tokens list",
          "duration": 38,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with burnt token burns all tokens",
          "title": "burns all tokens",
          "duration": 807,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "Contract: ERC721Burnable",
      "tests": []
    },
    {
      "title": "like a burnable ERC721",
      "tests": []
    },
    {
      "title": "burn",
      "tests": []
    },
    {
      "title": "when successful",
      "tests": [
        {
          "fullTitle": "when successful burns the given token ID and adjusts the balance of the owner",
          "title": "burns the given token ID and adjusts the balance of the owner",
          "duration": 74,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: owner query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "when successful emits a burn event",
          "title": "emits a burn event",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when there is a previous approval burned",
      "tests": []
    },
    {
      "title": "getApproved",
      "tests": [
        {
          "fullTitle": "getApproved reverts",
          "title": "reverts",
          "duration": 73,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ERC721: approved query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "when the given token ID was not tracked by this contract",
      "tests": [
        {
          "fullTitle": "when the given token ID was not tracked by this contract reverts",
          "title": "reverts",
          "duration": 918,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC721Pausable",
      "tests": []
    },
    {
      "title": "when token is paused",
      "tests": [
        {
          "fullTitle": "when token is paused reverts when trying to transferFrom",
          "title": "reverts when trying to transferFrom",
          "duration": 795,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to safeTransferFrom",
          "title": "reverts when trying to safeTransferFrom",
          "duration": 927,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to safeTransferFrom with data",
          "title": "reverts when trying to safeTransferFrom with data",
          "duration": 815,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to mint",
          "title": "reverts when trying to mint",
          "duration": 858,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when token is paused reverts when trying to burn",
          "title": "reverts when trying to burn",
          "duration": 864,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getApproved",
      "tests": [
        {
          "fullTitle": "getApproved returns approved address",
          "title": "returns approved address",
          "duration": 29,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf",
      "tests": [
        {
          "fullTitle": "balanceOf returns the amount of tokens owned by the given address",
          "title": "returns the amount of tokens owned by the given address",
          "duration": 24,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ownerOf",
      "tests": [
        {
          "fullTitle": "ownerOf returns the amount of tokens owned by the given address",
          "title": "returns the amount of tokens owned by the given address",
          "duration": 40,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "exists",
      "tests": [
        {
          "fullTitle": "exists returns token existence",
          "title": "returns token existence",
          "duration": 43,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "isApprovedForAll",
      "tests": [
        {
          "fullTitle": "isApprovedForAll returns the approval of the operator",
          "title": "returns the approval of the operator",
          "duration": 25,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC721URIStorage",
      "tests": []
    },
    {
      "title": "token URI",
      "tests": [
        {
          "fullTitle": "token URI it is empty by default",
          "title": "it is empty by default",
          "duration": 74,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI reverts when queried for non existent token id",
          "title": "reverts when queried for non existent token id",
          "duration": 125,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "ERC721URIStorage: URI query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "token URI can be set for a token id",
          "title": "can be set for a token id",
          "duration": 1162,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI reverts when setting for non existent token id",
          "title": "reverts when setting for non existent token id",
          "duration": 1046,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI base URI can be set",
          "title": "base URI can be set",
          "duration": 959,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI base URI is added as a prefix to the token URI",
          "title": "base URI is added as a prefix to the token URI",
          "duration": 1900,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI token URI can be changed by changing the base URI",
          "title": "token URI can be changed by changing the base URI",
          "duration": 2863,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI tokenId is appended to base URI for tokens with no URI",
          "title": "tokenId is appended to base URI for tokens with no URI",
          "duration": 1054,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "token URI tokens without URI can be burnt ",
          "title": "tokens without URI can be burnt ",
          "duration": 1008,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "ERC721URIStorage: URI query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "token URI tokens with URI can be burnt ",
          "title": "tokens with URI can be burnt ",
          "duration": 2153,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "ERC721URIStorage: URI query for nonexistent token",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "Contract: ERC721PresetMinterPauserAutoId",
      "tests": [
        {
          "fullTitle": "Contract: ERC721PresetMinterPauserAutoId token has correct name",
          "title": "token has correct name",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC721PresetMinterPauserAutoId token has correct symbol",
          "title": "token has correct symbol",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC721PresetMinterPauserAutoId deployer has the default admin role",
          "title": "deployer has the default admin role",
          "duration": 39,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC721PresetMinterPauserAutoId deployer has the minter role",
          "title": "deployer has the minter role",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC721PresetMinterPauserAutoId minter role admin is the default admin",
          "title": "minter role admin is the default admin",
          "duration": 21,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC721",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 15,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "balanceOf(address)",
      "tests": [
        {
          "fullTitle": "balanceOf(address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ownerOf(uint256)",
      "tests": [
        {
          "fullTitle": "ownerOf(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "approve(address,uint256)",
      "tests": [
        {
          "fullTitle": "approve(address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getApproved(uint256)",
      "tests": [
        {
          "fullTitle": "getApproved(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "setApprovalForAll(address,bool)",
      "tests": [
        {
          "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "isApprovedForAll(address,address)",
      "tests": [
        {
          "fullTitle": "isApprovedForAll(address,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "transferFrom(address,address,uint256)",
      "tests": [
        {
          "fullTitle": "transferFrom(address,address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "safeTransferFrom(address,address,uint256,bytes)",
      "tests": [
        {
          "fullTitle": "safeTransferFrom(address,address,uint256,bytes) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC721Enumerable",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 32,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "totalSupply()",
      "tests": [
        {
          "fullTitle": "totalSupply() has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "tokenOfOwnerByIndex(address,uint256)",
      "tests": [
        {
          "fullTitle": "tokenOfOwnerByIndex(address,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "tokenByIndex(uint256)",
      "tests": [
        {
          "fullTitle": "tokenByIndex(uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "AccessControl",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 29,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 28,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "hasRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "hasRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleAdmin(bytes32)",
      "tests": [
        {
          "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "grantRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "grantRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "revokeRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "revokeRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "renounceRole(bytes32,address)",
      "tests": [
        {
          "fullTitle": "renounceRole(bytes32,address) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "AccessControlEnumerable",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 17,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleMember(bytes32,uint256)",
      "tests": [
        {
          "fullTitle": "getRoleMember(bytes32,uint256) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "getRoleMemberCount(bytes32)",
      "tests": [
        {
          "fullTitle": "getRoleMemberCount(bytes32) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "minting",
      "tests": [
        {
          "fullTitle": "minting deployer can mint tokens",
          "title": "deployer can mint tokens",
          "duration": 981,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "minting other accounts cannot mint tokens",
          "title": "other accounts cannot mint tokens",
          "duration": 856,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "pausing",
      "tests": [
        {
          "fullTitle": "pausing deployer can pause",
          "title": "deployer can pause",
          "duration": 816,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing deployer can unpause",
          "title": "deployer can unpause",
          "duration": 1847,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing cannot mint while paused",
          "title": "cannot mint while paused",
          "duration": 1766,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing other accounts cannot pause",
          "title": "other accounts cannot pause",
          "duration": 853,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "pausing other accounts cannot unpause",
          "title": "other accounts cannot unpause",
          "duration": 1755,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "burning",
      "tests": [
        {
          "fullTitle": "burning holders can burn their tokens",
          "title": "holders can burn their tokens",
          "duration": 1693,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC721Holder",
      "tests": [
        {
          "fullTitle": "Contract: ERC721Holder receives an ERC721 token",
          "title": "receives an ERC721 token",
          "duration": 3685,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC777",
      "tests": []
    },
    {
      "title": "with default operators",
      "tests": []
    },
    {
      "title": "Contract: ERC777PresetFixedSupply",
      "tests": []
    },
    {
      "title": "Contract: Address",
      "tests": []
    },
    {
      "title": "isContract",
      "tests": [
        {
          "fullTitle": "isContract returns false for account address",
          "title": "returns false for account address",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "isContract returns true for contract address",
          "title": "returns true for contract address",
          "duration": 934,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "sendValue",
      "tests": []
    },
    {
      "title": "when sender contract has no funds",
      "tests": [
        {
          "fullTitle": "when sender contract has no funds sends 0 wei",
          "title": "sends 0 wei",
          "duration": 789,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "when sender contract has no funds reverts when sending non-zero amounts",
          "title": "reverts when sending non-zero amounts",
          "duration": 846,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "when sender contract has funds",
      "tests": []
    },
    {
      "title": "functionCall",
      "tests": []
    },
    {
      "title": "with valid contract receiver",
      "tests": [
        {
          "fullTitle": "with valid contract receiver calls the requested function",
          "title": "calls the requested function",
          "duration": 775,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with valid contract receiver reverts when the called function reverts with no reason",
          "title": "reverts when the called function reverts with no reason",
          "duration": 785,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with valid contract receiver reverts when the called function reverts, bubbling up the revert reason",
          "title": "reverts when the called function reverts, bubbling up the revert reason",
          "duration": 922,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with valid contract receiver reverts when the called function runs out of gas",
          "title": "reverts when the called function runs out of gas",
          "duration": 752,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with valid contract receiver reverts when the called function throws",
          "title": "reverts when the called function throws",
          "duration": 951,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with valid contract receiver reverts when function does not exist",
          "title": "reverts when function does not exist",
          "duration": 1059,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with non-contract receiver",
      "tests": [
        {
          "fullTitle": "with non-contract receiver reverts when address is not a contract",
          "title": "reverts when address is not a contract",
          "duration": 879,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "functionCallWithValue",
      "tests": []
    },
    {
      "title": "with zero value",
      "tests": [
        {
          "fullTitle": "with zero value calls the requested function",
          "title": "calls the requested function",
          "duration": 861,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with non-zero value",
      "tests": [
        {
          "fullTitle": "with non-zero value reverts if insufficient sender balance",
          "title": "reverts if insufficient sender balance",
          "duration": 941,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "with non-zero value calls the requested function with existing value",
          "title": "calls the requested function with existing value",
          "duration": 88,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
            "message": "Returned error: type error",
            "data": null
          }
        },
        {
          "fullTitle": "with non-zero value calls the requested function with transaction funds",
          "title": "calls the requested function with transaction funds",
          "duration": 166,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error -- Reason given: Address: insufficient balance for call.\n    at Context.<anonymous> (test/utils/Address.test.js:254:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Returned error: type error -- Reason given: Address: insufficient balance for call.",
            "reason": "Address: insufficient balance for call",
            "hijackedStack": "Error: Returned error: type error -- Reason given: Address: insufficient balance for call.\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "with non-zero value reverts when calling non-payable functions",
          "title": "reverts when calling non-payable functions",
          "duration": 36,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
            "message": "Returned error: type error",
            "data": null
          }
        }
      ]
    },
    {
      "title": "functionStaticCall",
      "tests": [
        {
          "fullTitle": "functionStaticCall calls the requested function",
          "title": "calls the requested function",
          "duration": 815,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "functionStaticCall reverts on a non-static function",
          "title": "reverts on a non-static function",
          "duration": 900,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "functionStaticCall bubbles up revert reason",
          "title": "bubbles up revert reason",
          "duration": 878,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "functionStaticCall reverts when address is not a contract",
          "title": "reverts when address is not a contract",
          "duration": 842,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "functionDelegateCall",
      "tests": [
        {
          "fullTitle": "functionDelegateCall delegate calls the requested function",
          "title": "delegate calls the requested function",
          "duration": 932,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "functionDelegateCall bubbles up revert reason",
          "title": "bubbles up revert reason",
          "duration": 929,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "functionDelegateCall reverts when address is not a contract",
          "title": "reverts when address is not a contract",
          "duration": 875,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: Arrays",
      "tests": []
    },
    {
      "title": "findUpperBound",
      "tests": []
    },
    {
      "title": "Even number of elements",
      "tests": [
        {
          "fullTitle": "Even number of elements returns correct index for the basic case",
          "title": "returns correct index for the basic case",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Even number of elements returns 0 for the first element",
          "title": "returns 0 for the first element",
          "duration": 191,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Even number of elements returns index of the last element",
          "title": "returns index of the last element",
          "duration": 20,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Even number of elements returns first index after last element if searched value is over the upper boundary",
          "title": "returns first index after last element if searched value is over the upper boundary",
          "duration": 244,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Even number of elements returns 0 for the element under the lower boundary",
          "title": "returns 0 for the element under the lower boundary",
          "duration": 92,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Odd number of elements",
      "tests": [
        {
          "fullTitle": "Odd number of elements returns correct index for the basic case",
          "title": "returns correct index for the basic case",
          "duration": 128,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Odd number of elements returns 0 for the first element",
          "title": "returns 0 for the first element",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Odd number of elements returns index of the last element",
          "title": "returns index of the last element",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Odd number of elements returns first index after last element if searched value is over the upper boundary",
          "title": "returns first index after last element if searched value is over the upper boundary",
          "duration": 91,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Odd number of elements returns 0 for the element under the lower boundary",
          "title": "returns 0 for the element under the lower boundary",
          "duration": 22,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Array with gap",
      "tests": [
        {
          "fullTitle": "Array with gap returns index of first element in next filled range",
          "title": "returns index of first element in next filled range",
          "duration": 24,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Empty array",
      "tests": [
        {
          "fullTitle": "Empty array always returns 0 for empty array",
          "title": "always returns 0 for empty array",
          "duration": 31,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: Context",
      "tests": []
    },
    {
      "title": "msgSender",
      "tests": [
        {
          "fullTitle": "msgSender returns the transaction sender when called from an EOA",
          "title": "returns the transaction sender when called from an EOA",
          "duration": 768,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "msgSender returns the transaction sender when from another contract",
          "title": "returns the transaction sender when from another contract",
          "duration": 986,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "msgData",
      "tests": [
        {
          "fullTitle": "msgData returns the transaction data when called from an EOA",
          "title": "returns the transaction data when called from an EOA",
          "duration": 811,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "msgData returns the transaction sender when from another contract",
          "title": "returns the transaction sender when from another contract",
          "duration": 1098,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: Counters",
      "tests": [
        {
          "fullTitle": "Contract: Counters starts at zero",
          "title": "starts at zero",
          "duration": 34,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "increment",
      "tests": []
    },
    {
      "title": "starting from 0",
      "tests": [
        {
          "fullTitle": "starting from 0 increments the current value by one",
          "title": "increments the current value by one",
          "duration": 1086,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "starting from 0 can be called multiple times",
          "title": "can be called multiple times",
          "duration": 2594,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "decrement",
      "tests": []
    },
    {
      "title": "starting from 1",
      "tests": [
        {
          "fullTitle": "starting from 1 decrements the current value by one",
          "title": "decrements the current value by one",
          "duration": 1106,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "starting from 1 reverts if the current value is 0",
          "title": "reverts if the current value is 0",
          "duration": 1860,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "after incremented to 3",
      "tests": [
        {
          "fullTitle": "after incremented to 3 can be called multiple times",
          "title": "can be called multiple times",
          "duration": 4505,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: Create2",
      "tests": []
    },
    {
      "title": "computeAddress",
      "tests": [
        {
          "fullTitle": "computeAddress computes the correct contract address",
          "title": "computes the correct contract address",
          "duration": 168,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "computeAddress computes the correct contract address with deployer",
          "title": "computes the correct contract address with deployer",
          "duration": 145,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "deploy",
      "tests": [
        {
          "fullTitle": "deploy deploys a ERC1820Implementer from inline assembly code",
          "title": "deploys a ERC1820Implementer from inline assembly code",
          "duration": 794,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deploy deploys a ERC20Mock with correct balances",
          "title": "deploys a ERC20Mock with correct balances",
          "duration": 975,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deploy deploys a contract with funds deposited in the factory",
          "title": "deploys a contract with funds deposited in the factory",
          "duration": 114,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
            "message": "Returned error: type error",
            "data": null
          }
        },
        {
          "fullTitle": "deploy fails deploying a contract in an existent address",
          "title": "fails deploying a contract in an existent address",
          "duration": 1900,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deploy fails deploying a contract if the bytecode length is zero",
          "title": "fails deploying a contract if the bytecode length is zero",
          "duration": 828,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deploy fails deploying a contract if factory contract does not have sufficient balance",
          "title": "fails deploying a contract if factory contract does not have sufficient balance",
          "duration": 846,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: EIP712",
      "tests": [
        {
          "fullTitle": "Contract: EIP712 domain separator",
          "title": "domain separator",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: EIP712 digest",
          "title": "digest",
          "duration": 20,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: Revert: executionResult output is empty\n    at Context.<anonymous> (test/utils/cryptography/draft-EIP712.test.js:55:23)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Returned error: Revert: executionResult output is empty",
            "hijackedStack": "Error: Returned error: Revert: executionResult output is empty\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "Contract: ECDSA",
      "tests": []
    },
    {
      "title": "recover with invalid signature",
      "tests": [
        {
          "fullTitle": "recover with invalid signature with short signature",
          "title": "with short signature",
          "duration": 19,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature length",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "recover with invalid signature with long signature",
          "title": "with long signature",
          "duration": 18,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature length",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "recover with valid signature",
      "tests": []
    },
    {
      "title": "with v0 signature",
      "tests": []
    },
    {
      "title": "with 00 as version value",
      "tests": [
        {
          "fullTitle": "with 00 as version value reverts",
          "title": "reverts",
          "duration": 34,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature 'v' value",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "with 27 as version value",
      "tests": [
        {
          "fullTitle": "with 27 as version value works",
          "title": "works",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with wrong version",
      "tests": [
        {
          "fullTitle": "with wrong version reverts",
          "title": "reverts",
          "duration": 20,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature 'v' value",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "with v1 signature",
      "tests": []
    },
    {
      "title": "with 01 as version value",
      "tests": [
        {
          "fullTitle": "with 01 as version value reverts",
          "title": "reverts",
          "duration": 30,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature 'v' value",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "with 28 as version value",
      "tests": [
        {
          "fullTitle": "with 28 as version value works",
          "title": "works",
          "duration": 123,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with wrong version",
      "tests": [
        {
          "fullTitle": "with wrong version reverts",
          "title": "reverts",
          "duration": 33,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature 'v' value",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "with high-s value signature",
      "tests": [
        {
          "fullTitle": "with high-s value signature reverts",
          "title": "reverts",
          "duration": 23,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'s\\' value'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature 's' value",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'s\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "using web3.eth.sign",
      "tests": []
    },
    {
      "title": "with correct signature",
      "tests": [
        {
          "fullTitle": "with correct signature returns signer address",
          "title": "returns signer address",
          "duration": 28,
          "result": "failed",
          "err": {
            "stack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Context.<anonymous> (test/utils/cryptography/ECDSA.test.js:115:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "reason": "value out of range",
            "code": "INVALID_ARGUMENT",
            "argument": "value",
            "value": 20,
            "baseType": "address",
            "name": null,
            "type": "address",
            "hijackedStack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:166:1)\n    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:175:1)\n    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:178:1)\n    at hexZeroPad (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/bytes/lib.esm/index.js:249:1)\n    at AddressCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/address.js:19:37)\n    at coders.forEach (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:78:1)\n    at Array.forEach (<anonymous>)\n    at unpack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:56:1)\n    at TupleCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:22:41)\n    at AbiCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:88:1)\n    at ABICoder.decodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/src/index.js:341:1)\n    at Contract._decodeMethodReturn (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:572:1)\n    at Method.outputFormatter (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:932:1)\n    at Method.formatOutput (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:169:1)\n    at sendTxCallback (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:640:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:177:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "with wrong message",
      "tests": [
        {
          "fullTitle": "with wrong message returns a different address",
          "title": "returns a different address",
          "duration": 22,
          "result": "failed",
          "err": {
            "stack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Context.<anonymous> (test/utils/cryptography/ECDSA.test.js:125:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "reason": "value out of range",
            "code": "INVALID_ARGUMENT",
            "argument": "value",
            "value": 20,
            "baseType": "address",
            "name": null,
            "type": "address",
            "hijackedStack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:166:1)\n    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:175:1)\n    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:178:1)\n    at hexZeroPad (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/bytes/lib.esm/index.js:249:1)\n    at AddressCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/address.js:19:37)\n    at coders.forEach (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:78:1)\n    at Array.forEach (<anonymous>)\n    at unpack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:56:1)\n    at TupleCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:22:41)\n    at AbiCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:88:1)\n    at ABICoder.decodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/src/index.js:341:1)\n    at Contract._decodeMethodReturn (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:572:1)\n    at Method.outputFormatter (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:932:1)\n    at Method.formatOutput (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:169:1)\n    at sendTxCallback (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:640:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:177:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "with invalid signature",
      "tests": [
        {
          "fullTitle": "with invalid signature reverts",
          "title": "reverts",
          "duration": 78,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "ECDSA: invalid signature",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "toEthSignedMessage",
      "tests": [
        {
          "fullTitle": "toEthSignedMessage should prefix hashes correctly",
          "title": "should prefix hashes correctly",
          "duration": 17,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: MerkleProof",
      "tests": []
    },
    {
      "title": "verify",
      "tests": [
        {
          "fullTitle": "verify returns true for a valid Merkle proof",
          "title": "returns true for a valid Merkle proof",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "verify returns false for an invalid Merkle proof",
          "title": "returns false for an invalid Merkle proof",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "verify returns false for a Merkle proof of invalid length",
          "title": "returns false for a Merkle proof of invalid length",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ConditionalEscrow",
      "tests": []
    },
    {
      "title": "when withdrawal is allowed",
      "tests": []
    },
    {
      "title": "as an escrow",
      "tests": []
    },
    {
      "title": "deposits",
      "tests": [
        {
          "fullTitle": "deposits can accept a single deposit",
          "title": "can accept a single deposit",
          "duration": 58,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:11:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "deposits can accept an empty deposit",
          "title": "can accept an empty deposit",
          "duration": 927,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deposits only the owner can deposit",
          "title": "only the owner can deposit",
          "duration": 1444,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deposits emits a deposited event",
          "title": "emits a deposited event",
          "duration": 452,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:29:44)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "deposits can add multiple deposits on a single account",
          "title": "can add multiple deposits on a single account",
          "duration": 300,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:37:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "deposits can track deposits to multiple accounts",
          "title": "can track deposits to multiple accounts",
          "duration": 162,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:46:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "withdrawals",
      "tests": [
        {
          "fullTitle": "withdrawals can withdraw payments",
          "title": "can withdraw payments",
          "duration": 2134,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:61:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "withdrawals can do an empty withdrawal",
          "title": "can do an empty withdrawal",
          "duration": 968,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "withdrawals only the owner can withdraw",
          "title": "only the owner can withdraw",
          "duration": 1082,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "withdrawals emits a withdrawn event",
          "title": "emits a withdrawn event",
          "duration": 420,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:81:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "when withdrawal is disallowed",
      "tests": [
        {
          "fullTitle": "when withdrawal is disallowed reverts on withdrawals",
          "title": "reverts on withdrawals",
          "duration": 122,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/ConditionalEscrow.test.js:29:25)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "Contract: Escrow",
      "tests": []
    },
    {
      "title": "as an escrow",
      "tests": []
    },
    {
      "title": "deposits",
      "tests": [
        {
          "fullTitle": "deposits can accept a single deposit",
          "title": "can accept a single deposit",
          "duration": 245,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:11:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "deposits can accept an empty deposit",
          "title": "can accept an empty deposit",
          "duration": 975,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deposits only the owner can deposit",
          "title": "only the owner can deposit",
          "duration": 1303,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "deposits emits a deposited event",
          "title": "emits a deposited event",
          "duration": 72,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:29:44)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "deposits can add multiple deposits on a single account",
          "title": "can add multiple deposits on a single account",
          "duration": 92,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:37:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "deposits can track deposits to multiple accounts",
          "title": "can track deposits to multiple accounts",
          "duration": 59,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:46:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "withdrawals",
      "tests": [
        {
          "fullTitle": "withdrawals can withdraw payments",
          "title": "can withdraw payments",
          "duration": 71,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:61:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "withdrawals can do an empty withdrawal",
          "title": "can do an empty withdrawal",
          "duration": 918,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "withdrawals only the owner can withdraw",
          "title": "only the owner can withdraw",
          "duration": 898,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "withdrawals emits a withdrawn event",
          "title": "emits a withdrawn event",
          "duration": 56,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:81:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "Contract: RefundEscrow",
      "tests": [
        {
          "fullTitle": "Contract: RefundEscrow requires a non-null beneficiary",
          "title": "requires a non-null beneficiary",
          "duration": 1090,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "once deployed",
      "tests": [
        {
          "fullTitle": "once deployed only the owner can enter closed state",
          "title": "only the owner can enter closed state",
          "duration": 1670,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed only the owner can enter refund state",
          "title": "only the owner can enter refund state",
          "duration": 1735,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "active state",
      "tests": [
        {
          "fullTitle": "active state has beneficiary and state",
          "title": "has beneficiary and state",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "active state accepts deposits",
          "title": "accepts deposits",
          "duration": 53,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:32:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "active state does not refund refundees",
          "title": "does not refund refundees",
          "duration": 78,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:38:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        },
        {
          "fullTitle": "active state does not allow beneficiary withdrawal",
          "title": "does not allow beneficiary withdrawal",
          "duration": 50,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:45:27)",
            "message": "Returned error: type error",
            "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
          }
        }
      ]
    },
    {
      "title": "closed state",
      "tests": []
    },
    {
      "title": "refund state",
      "tests": []
    },
    {
      "title": "Contract: Initializable",
      "tests": []
    },
    {
      "title": "basic testing without inheritance",
      "tests": []
    },
    {
      "title": "before initialize",
      "tests": [
        {
          "fullTitle": "before initialize initializer has not run",
          "title": "initializer has not run",
          "duration": 62,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "after initialize",
      "tests": [
        {
          "fullTitle": "after initialize initializer has run",
          "title": "initializer has run",
          "duration": 46,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "after initialize initializer does not run again",
          "title": "initializer does not run again",
          "duration": 908,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "after nested initialize",
      "tests": [
        {
          "fullTitle": "after nested initialize initializer has run",
          "title": "initializer has run",
          "duration": 85,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "complex testing with inheritance",
      "tests": [
        {
          "fullTitle": "complex testing with inheritance initializes human",
          "title": "initializes human",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "complex testing with inheritance initializes mother",
          "title": "initializes mother",
          "duration": 81,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "complex testing with inheritance initializes gramps",
          "title": "initializes gramps",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "complex testing with inheritance initializes father",
          "title": "initializes father",
          "duration": 90,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "complex testing with inheritance initializes child",
          "title": "initializes child",
          "duration": 79,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC165",
      "tests": []
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC165",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 22,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "supportsInterface(bytes4) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC165Checker",
      "tests": []
    },
    {
      "title": "ERC165 missing return data",
      "tests": [
        {
          "fullTitle": "ERC165 missing return data does not support ERC165",
          "title": "does not support ERC165",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 missing return data does not support mock interface via supportsInterface",
          "title": "does not support mock interface via supportsInterface",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 missing return data does not support mock interface via supportsAllInterfaces",
          "title": "does not support mock interface via supportsAllInterfaces",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 missing return data does not support mock interface via getSupportedInterfaces",
          "title": "does not support mock interface via getSupportedInterfaces",
          "duration": 142,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC165 not supported",
      "tests": [
        {
          "fullTitle": "ERC165 not supported does not support ERC165",
          "title": "does not support ERC165",
          "duration": 15,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 not supported does not support mock interface via supportsInterface",
          "title": "does not support mock interface via supportsInterface",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 not supported does not support mock interface via supportsAllInterfaces",
          "title": "does not support mock interface via supportsAllInterfaces",
          "duration": 44,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 not supported does not support mock interface via getSupportedInterfaces",
          "title": "does not support mock interface via getSupportedInterfaces",
          "duration": 52,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC165 supported",
      "tests": [
        {
          "fullTitle": "ERC165 supported supports ERC165",
          "title": "supports ERC165",
          "duration": 33,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 supported does not support mock interface via supportsInterface",
          "title": "does not support mock interface via supportsInterface",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 supported does not support mock interface via supportsAllInterfaces",
          "title": "does not support mock interface via supportsAllInterfaces",
          "duration": 41,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 supported does not support mock interface via getSupportedInterfaces",
          "title": "does not support mock interface via getSupportedInterfaces",
          "duration": 30,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC165 and single interface supported",
      "tests": [
        {
          "fullTitle": "ERC165 and single interface supported supports ERC165",
          "title": "supports ERC165",
          "duration": 36,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and single interface supported supports mock interface via supportsInterface",
          "title": "supports mock interface via supportsInterface",
          "duration": 68,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and single interface supported supports mock interface via supportsAllInterfaces",
          "title": "supports mock interface via supportsAllInterfaces",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and single interface supported supports mock interface via getSupportedInterfaces",
          "title": "supports mock interface via getSupportedInterfaces",
          "duration": 31,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "ERC165 and many interfaces supported",
      "tests": [
        {
          "fullTitle": "ERC165 and many interfaces supported supports ERC165",
          "title": "supports ERC165",
          "duration": 38,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and many interfaces supported supports each interfaceId via supportsInterface",
          "title": "supports each interfaceId via supportsInterface",
          "duration": 151,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and many interfaces supported supports all interfaceIds via supportsAllInterfaces",
          "title": "supports all interfaceIds via supportsAllInterfaces",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and many interfaces supported supports none of the interfaces queried via supportsAllInterfaces",
          "title": "supports none of the interfaces queried via supportsAllInterfaces",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and many interfaces supported supports not all of the interfaces queried via supportsAllInterfaces",
          "title": "supports not all of the interfaces queried via supportsAllInterfaces",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and many interfaces supported supports all interfaceIds via getSupportedInterfaces",
          "title": "supports all interfaceIds via getSupportedInterfaces",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and many interfaces supported supports none of the interfaces queried via getSupportedInterfaces",
          "title": "supports none of the interfaces queried via getSupportedInterfaces",
          "duration": 33,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165 and many interfaces supported supports not all of the interfaces queried via getSupportedInterfaces",
          "title": "supports not all of the interfaces queried via getSupportedInterfaces",
          "duration": 79,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "account address does not support ERC165",
      "tests": [
        {
          "fullTitle": "account address does not support ERC165 does not support ERC165",
          "title": "does not support ERC165",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "account address does not support ERC165 does not support mock interface via supportsInterface",
          "title": "does not support mock interface via supportsInterface",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "account address does not support ERC165 does not support mock interface via supportsAllInterfaces",
          "title": "does not support mock interface via supportsAllInterfaces",
          "duration": 28,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "account address does not support ERC165 does not support mock interface via getSupportedInterfaces",
          "title": "does not support mock interface via getSupportedInterfaces",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC165Storage",
      "tests": [
        {
          "fullTitle": "Contract: ERC165Storage register interface",
          "title": "register interface",
          "duration": 854,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: ERC165Storage does not allow 0xffffffff",
          "title": "does not allow 0xffffffff",
          "duration": 792,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract interface",
      "tests": []
    },
    {
      "title": "ERC165",
      "tests": []
    },
    {
      "title": "ERC165's supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
          "title": "uses less than 30k gas [skip-on-coverage]",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
          "title": "claims support",
          "duration": 63,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "supportsInterface(bytes4)",
      "tests": [
        {
          "fullTitle": "supportsInterface(bytes4) has to be implemented",
          "title": "has to be implemented",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: ERC1820Implementer",
      "tests": []
    },
    {
      "title": "with no registered interfaces",
      "tests": []
    },
    {
      "title": "Contract: Math",
      "tests": []
    },
    {
      "title": "max",
      "tests": [
        {
          "fullTitle": "max is correctly detected in first argument position",
          "title": "is correctly detected in first argument position",
          "duration": 106,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "max is correctly detected in second argument position",
          "title": "is correctly detected in second argument position",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "min",
      "tests": [
        {
          "fullTitle": "min is correctly detected in first argument position",
          "title": "is correctly detected in first argument position",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "min is correctly detected in second argument position",
          "title": "is correctly detected in second argument position",
          "duration": 61,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "average",
      "tests": [
        {
          "fullTitle": "average is correctly calculated with two odd numbers",
          "title": "is correctly calculated with two odd numbers",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "average is correctly calculated with two even numbers",
          "title": "is correctly calculated with two even numbers",
          "duration": 38,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "average is correctly calculated with one even and one odd number",
          "title": "is correctly calculated with one even and one odd number",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: SafeCast",
      "tests": []
    },
    {
      "title": "toUint8",
      "tests": [
        {
          "fullTitle": "toUint8 downcasts 0",
          "title": "downcasts 0",
          "duration": 81,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint8 downcasts 1",
          "title": "downcasts 1",
          "duration": 210,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint8 downcasts 2^8 - 1 (255)",
          "title": "downcasts 2^8 - 1 (255)",
          "duration": 220,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint8 reverts when downcasting 2^8 (256)",
          "title": "reverts when downcasting 2^8 (256)",
          "duration": 159,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toUint8 reverts when downcasting 2^8 + 1 (257)",
          "title": "reverts when downcasting 2^8 + 1 (257)",
          "duration": 194,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toUint16",
      "tests": [
        {
          "fullTitle": "toUint16 downcasts 0",
          "title": "downcasts 0",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint16 downcasts 1",
          "title": "downcasts 1",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint16 downcasts 2^16 - 1 (65535)",
          "title": "downcasts 2^16 - 1 (65535)",
          "duration": 59,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint16 reverts when downcasting 2^16 (65536)",
          "title": "reverts when downcasting 2^16 (65536)",
          "duration": 17,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toUint16 reverts when downcasting 2^16 + 1 (65537)",
          "title": "reverts when downcasting 2^16 + 1 (65537)",
          "duration": 34,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toUint32",
      "tests": [
        {
          "fullTitle": "toUint32 downcasts 0",
          "title": "downcasts 0",
          "duration": 30,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint32 downcasts 1",
          "title": "downcasts 1",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint32 downcasts 2^32 - 1 (4294967295)",
          "title": "downcasts 2^32 - 1 (4294967295)",
          "duration": 75,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint32 reverts when downcasting 2^32 (4294967296)",
          "title": "reverts when downcasting 2^32 (4294967296)",
          "duration": 20,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toUint32 reverts when downcasting 2^32 + 1 (4294967297)",
          "title": "reverts when downcasting 2^32 + 1 (4294967297)",
          "duration": 23,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toUint64",
      "tests": [
        {
          "fullTitle": "toUint64 downcasts 0",
          "title": "downcasts 0",
          "duration": 20,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint64 downcasts 1",
          "title": "downcasts 1",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint64 downcasts 2^64 - 1 (18446744073709551615)",
          "title": "downcasts 2^64 - 1 (18446744073709551615)",
          "duration": 23,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint64 reverts when downcasting 2^64 (18446744073709551616)",
          "title": "reverts when downcasting 2^64 (18446744073709551616)",
          "duration": 17,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toUint64 reverts when downcasting 2^64 + 1 (18446744073709551617)",
          "title": "reverts when downcasting 2^64 + 1 (18446744073709551617)",
          "duration": 18,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toUint128",
      "tests": [
        {
          "fullTitle": "toUint128 downcasts 0",
          "title": "downcasts 0",
          "duration": 247,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint128 downcasts 1",
          "title": "downcasts 1",
          "duration": 35,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint128 downcasts 2^128 - 1 (340282366920938463463374607431768211455)",
          "title": "downcasts 2^128 - 1 (340282366920938463463374607431768211455)",
          "duration": 55,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint128 reverts when downcasting 2^128 (340282366920938463463374607431768211456)",
          "title": "reverts when downcasting 2^128 (340282366920938463463374607431768211456)",
          "duration": 30,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toUint128 reverts when downcasting 2^128 + 1 (340282366920938463463374607431768211457)",
          "title": "reverts when downcasting 2^128 + 1 (340282366920938463463374607431768211457)",
          "duration": 42,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toUint256",
      "tests": [
        {
          "fullTitle": "toUint256 casts 0",
          "title": "casts 0",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint256 casts 1",
          "title": "casts 1",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint256 casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
          "title": "casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
          "duration": 47,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toUint256 reverts when casting -1",
          "title": "reverts when casting -1",
          "duration": 75,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toUint256 reverts when casting INT256_MIN (-57896044618658097711785492504343953926634992332820282019728792003956564819968)",
          "title": "reverts when casting INT256_MIN (-57896044618658097711785492504343953926634992332820282019728792003956564819968)",
          "duration": 36,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toInt8",
      "tests": [
        {
          "fullTitle": "toInt8 downcasts 0",
          "title": "downcasts 0",
          "duration": 61,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt8 downcasts 1",
          "title": "downcasts 1",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt8 downcasts -1",
          "title": "downcasts -1",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt8 downcasts -2^7 (-128)",
          "title": "downcasts -2^7 (-128)",
          "duration": 20,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt8 downcasts 2^7 - 1 (127)",
          "title": "downcasts 2^7 - 1 (127)",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt8 reverts when downcasting -2^7 - 1 (-129)",
          "title": "reverts when downcasting -2^7 - 1 (-129)",
          "duration": 17,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt8 reverts when downcasting -2^7 - 2 (-130)",
          "title": "reverts when downcasting -2^7 - 2 (-130)",
          "duration": 76,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt8 reverts when downcasting 2^7 (128)",
          "title": "reverts when downcasting 2^7 (128)",
          "duration": 26,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt8 reverts when downcasting 2^7 + 1 (129)",
          "title": "reverts when downcasting 2^7 + 1 (129)",
          "duration": 47,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toInt16",
      "tests": [
        {
          "fullTitle": "toInt16 downcasts 0",
          "title": "downcasts 0",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt16 downcasts 1",
          "title": "downcasts 1",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt16 downcasts -1",
          "title": "downcasts -1",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt16 downcasts -2^15 (-32768)",
          "title": "downcasts -2^15 (-32768)",
          "duration": 35,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt16 downcasts 2^15 - 1 (32767)",
          "title": "downcasts 2^15 - 1 (32767)",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt16 reverts when downcasting -2^15 - 1 (-32769)",
          "title": "reverts when downcasting -2^15 - 1 (-32769)",
          "duration": 18,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt16 reverts when downcasting -2^15 - 2 (-32770)",
          "title": "reverts when downcasting -2^15 - 2 (-32770)",
          "duration": 35,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt16 reverts when downcasting 2^15 (32768)",
          "title": "reverts when downcasting 2^15 (32768)",
          "duration": 48,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt16 reverts when downcasting 2^15 + 1 (32769)",
          "title": "reverts when downcasting 2^15 + 1 (32769)",
          "duration": 24,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toInt32",
      "tests": [
        {
          "fullTitle": "toInt32 downcasts 0",
          "title": "downcasts 0",
          "duration": 49,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt32 downcasts 1",
          "title": "downcasts 1",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt32 downcasts -1",
          "title": "downcasts -1",
          "duration": 50,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt32 downcasts -2^31 (-2147483648)",
          "title": "downcasts -2^31 (-2147483648)",
          "duration": 57,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt32 downcasts 2^31 - 1 (2147483647)",
          "title": "downcasts 2^31 - 1 (2147483647)",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt32 reverts when downcasting -2^31 - 1 (-2147483649)",
          "title": "reverts when downcasting -2^31 - 1 (-2147483649)",
          "duration": 19,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt32 reverts when downcasting -2^31 - 2 (-2147483650)",
          "title": "reverts when downcasting -2^31 - 2 (-2147483650)",
          "duration": 29,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt32 reverts when downcasting 2^31 (2147483648)",
          "title": "reverts when downcasting 2^31 (2147483648)",
          "duration": 17,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt32 reverts when downcasting 2^31 + 1 (2147483649)",
          "title": "reverts when downcasting 2^31 + 1 (2147483649)",
          "duration": 121,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toInt64",
      "tests": [
        {
          "fullTitle": "toInt64 downcasts 0",
          "title": "downcasts 0",
          "duration": 43,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt64 downcasts 1",
          "title": "downcasts 1",
          "duration": 21,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt64 downcasts -1",
          "title": "downcasts -1",
          "duration": 116,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt64 downcasts -2^63 (-9223372036854775808)",
          "title": "downcasts -2^63 (-9223372036854775808)",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt64 downcasts 2^63 - 1 (9223372036854775807)",
          "title": "downcasts 2^63 - 1 (9223372036854775807)",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt64 reverts when downcasting -2^63 - 1 (-9223372036854775809)",
          "title": "reverts when downcasting -2^63 - 1 (-9223372036854775809)",
          "duration": 174,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt64 reverts when downcasting -2^63 - 2 (-9223372036854775810)",
          "title": "reverts when downcasting -2^63 - 2 (-9223372036854775810)",
          "duration": 36,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt64 reverts when downcasting 2^63 (9223372036854775808)",
          "title": "reverts when downcasting 2^63 (9223372036854775808)",
          "duration": 60,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt64 reverts when downcasting 2^63 + 1 (9223372036854775809)",
          "title": "reverts when downcasting 2^63 + 1 (9223372036854775809)",
          "duration": 24,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toInt128",
      "tests": [
        {
          "fullTitle": "toInt128 downcasts 0",
          "title": "downcasts 0",
          "duration": 33,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt128 downcasts 1",
          "title": "downcasts 1",
          "duration": 37,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt128 downcasts -1",
          "title": "downcasts -1",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt128 downcasts -2^127 (-170141183460469231731687303715884105728)",
          "title": "downcasts -2^127 (-170141183460469231731687303715884105728)",
          "duration": 60,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt128 downcasts 2^127 - 1 (170141183460469231731687303715884105727)",
          "title": "downcasts 2^127 - 1 (170141183460469231731687303715884105727)",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt128 reverts when downcasting -2^127 - 1 (-170141183460469231731687303715884105729)",
          "title": "reverts when downcasting -2^127 - 1 (-170141183460469231731687303715884105729)",
          "duration": 59,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt128 reverts when downcasting -2^127 - 2 (-170141183460469231731687303715884105730)",
          "title": "reverts when downcasting -2^127 - 2 (-170141183460469231731687303715884105730)",
          "duration": 19,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt128 reverts when downcasting 2^127 (170141183460469231731687303715884105728)",
          "title": "reverts when downcasting 2^127 (170141183460469231731687303715884105728)",
          "duration": 31,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt128 reverts when downcasting 2^127 + 1 (170141183460469231731687303715884105729)",
          "title": "reverts when downcasting 2^127 + 1 (170141183460469231731687303715884105729)",
          "duration": 16,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "toInt256",
      "tests": [
        {
          "fullTitle": "toInt256 casts 0",
          "title": "casts 0",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt256 casts 1",
          "title": "casts 1",
          "duration": 27,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt256 casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
          "title": "casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
          "duration": 51,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "toInt256 reverts when casting INT256_MAX + 1 (57896044618658097711785492504343953926634992332820282019728792003956564819968)",
          "title": "reverts when casting INT256_MAX + 1 (57896044618658097711785492504343953926634992332820282019728792003956564819968)",
          "duration": 27,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "toInt256 reverts when casting UINT256_MAX (115792089237316195423570985008687907853269984665640564039457584007913129639935)",
          "title": "reverts when casting UINT256_MAX (115792089237316195423570985008687907853269984665640564039457584007913129639935)",
          "duration": 50,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "Contract: SafeMath",
      "tests": []
    },
    {
      "title": "with flag",
      "tests": []
    },
    {
      "title": "add",
      "tests": [
        {
          "fullTitle": "add adds correctly",
          "title": "adds correctly",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add reverts on addition overflow",
          "title": "reverts on addition overflow",
          "duration": 1,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "sub",
      "tests": [
        {
          "fullTitle": "sub subtracts correctly",
          "title": "subtracts correctly",
          "duration": 16,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "sub reverts if subtraction result would be negative",
          "title": "reverts if subtraction result would be negative",
          "duration": 20,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "mul",
      "tests": [
        {
          "fullTitle": "mul multiplies correctly",
          "title": "multiplies correctly",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mul multiplies by zero correctly",
          "title": "multiplies by zero correctly",
          "duration": 1,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mul reverts on multiplication overflow",
          "title": "reverts on multiplication overflow",
          "duration": 0,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "div",
      "tests": [
        {
          "fullTitle": "div divides correctly",
          "title": "divides correctly",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div divides zero correctly",
          "title": "divides zero correctly",
          "duration": 106,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div returns complete number result on non-even division",
          "title": "returns complete number result on non-even division",
          "duration": 26,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div reverts on division by zero",
          "title": "reverts on division by zero",
          "duration": 15,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "mod",
      "tests": [
        {
          "fullTitle": "mod reverts with a 0 divisor",
          "title": "reverts with a 0 divisor",
          "duration": 27,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "modulos correctly",
      "tests": [
        {
          "fullTitle": "modulos correctly when the dividend is smaller than the divisor",
          "title": "when the dividend is smaller than the divisor",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is equal to the divisor",
          "title": "when the dividend is equal to the divisor",
          "duration": 22,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is larger than the divisor",
          "title": "when the dividend is larger than the divisor",
          "duration": 104,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is a multiple of the divisor",
          "title": "when the dividend is a multiple of the divisor",
          "duration": 28,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with default revert message",
      "tests": []
    },
    {
      "title": "add",
      "tests": [
        {
          "fullTitle": "add adds correctly",
          "title": "adds correctly",
          "duration": 76,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add reverts on addition overflow",
          "title": "reverts on addition overflow",
          "duration": 24,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "sub",
      "tests": [
        {
          "fullTitle": "sub subtracts correctly",
          "title": "subtracts correctly",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "sub reverts if subtraction result would be negative",
          "title": "reverts if subtraction result would be negative",
          "duration": 15,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "mul",
      "tests": [
        {
          "fullTitle": "mul multiplies correctly",
          "title": "multiplies correctly",
          "duration": 74,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mul multiplies by zero correctly",
          "title": "multiplies by zero correctly",
          "duration": 66,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mul reverts on multiplication overflow",
          "title": "reverts on multiplication overflow",
          "duration": 69,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "div",
      "tests": [
        {
          "fullTitle": "div divides correctly",
          "title": "divides correctly",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div divides zero correctly",
          "title": "divides zero correctly",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div returns complete number result on non-even division",
          "title": "returns complete number result on non-even division",
          "duration": 65,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div reverts on division by zero",
          "title": "reverts on division by zero",
          "duration": 31,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "mod",
      "tests": [
        {
          "fullTitle": "mod reverts with a 0 divisor",
          "title": "reverts with a 0 divisor",
          "duration": 37,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "modulos correctly",
      "tests": [
        {
          "fullTitle": "modulos correctly when the dividend is smaller than the divisor",
          "title": "when the dividend is smaller than the divisor",
          "duration": 48,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is equal to the divisor",
          "title": "when the dividend is equal to the divisor",
          "duration": 75,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is larger than the divisor",
          "title": "when the dividend is larger than the divisor",
          "duration": 64,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is a multiple of the divisor",
          "title": "when the dividend is a multiple of the divisor",
          "duration": 34,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "with custom revert message",
      "tests": []
    },
    {
      "title": "sub",
      "tests": [
        {
          "fullTitle": "sub subtracts correctly",
          "title": "subtracts correctly",
          "duration": 60,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "sub reverts if subtraction result would be negative",
          "title": "reverts if subtraction result would be negative",
          "duration": 33,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "div",
      "tests": [
        {
          "fullTitle": "div divides correctly",
          "title": "divides correctly",
          "duration": 23,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div divides zero correctly",
          "title": "divides zero correctly",
          "duration": 59,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div returns complete number result on non-even division",
          "title": "returns complete number result on non-even division",
          "duration": 18,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div reverts on division by zero",
          "title": "reverts on division by zero",
          "duration": 22,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "mod",
      "tests": [
        {
          "fullTitle": "mod reverts with a 0 divisor",
          "title": "reverts with a 0 divisor",
          "duration": 58,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "modulos correctly",
      "tests": [
        {
          "fullTitle": "modulos correctly when the dividend is smaller than the divisor",
          "title": "when the dividend is smaller than the divisor",
          "duration": 46,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is equal to the divisor",
          "title": "when the dividend is equal to the divisor",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is larger than the divisor",
          "title": "when the dividend is larger than the divisor",
          "duration": 31,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "modulos correctly when the dividend is a multiple of the divisor",
          "title": "when the dividend is a multiple of the divisor",
          "duration": 28,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "memory leakage",
      "tests": [
        {
          "fullTitle": "memory leakage add",
          "title": "add",
          "duration": 80,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "memory leakage sub",
          "title": "sub",
          "duration": 72,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "memory leakage mul",
          "title": "mul",
          "duration": 25,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "memory leakage div",
          "title": "div",
          "duration": 29,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "memory leakage mod",
          "title": "mod",
          "duration": 194,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: SignedSafeMath",
      "tests": []
    },
    {
      "title": "add",
      "tests": [
        {
          "fullTitle": "add adds correctly if it does not overflow and the result is positive",
          "title": "adds correctly if it does not overflow and the result is positive",
          "duration": 77,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add adds correctly if it does not overflow and the result is negative",
          "title": "adds correctly if it does not overflow and the result is negative",
          "duration": 46,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add reverts on positive addition overflow",
          "title": "reverts on positive addition overflow",
          "duration": 283,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "add reverts on negative addition overflow",
          "title": "reverts on negative addition overflow",
          "duration": 60,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "sub",
      "tests": [
        {
          "fullTitle": "sub subtracts correctly if it does not overflow and the result is positive",
          "title": "subtracts correctly if it does not overflow and the result is positive",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "sub subtracts correctly if it does not overflow and the result is negative",
          "title": "subtracts correctly if it does not overflow and the result is negative",
          "duration": 17,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "sub reverts on positive subtraction overflow",
          "title": "reverts on positive subtraction overflow",
          "duration": 24,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "sub reverts on negative subtraction overflow",
          "title": "reverts on negative subtraction overflow",
          "duration": 31,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "mul",
      "tests": [
        {
          "fullTitle": "mul multiplies correctly",
          "title": "multiplies correctly",
          "duration": 68,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mul multiplies by zero correctly",
          "title": "multiplies by zero correctly",
          "duration": 47,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "mul reverts on multiplication overflow, positive operands",
          "title": "reverts on multiplication overflow, positive operands",
          "duration": 49,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "mul reverts when minimum integer is multiplied by -1",
          "title": "reverts when minimum integer is multiplied by -1",
          "duration": 26,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "div",
      "tests": [
        {
          "fullTitle": "div divides correctly",
          "title": "divides correctly",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div divides zero correctly",
          "title": "divides zero correctly",
          "duration": 82,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div returns complete number result on non-even division",
          "title": "returns complete number result on non-even division",
          "duration": 28,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "div reverts on division by zero",
          "title": "reverts on division by zero",
          "duration": 27,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        },
        {
          "fullTitle": "div reverts on overflow, negative second",
          "title": "reverts on overflow, negative second",
          "duration": 16,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "Contract: PaymentSplitter",
      "tests": [
        {
          "fullTitle": "Contract: PaymentSplitter rejects an empty set of payees",
          "title": "rejects an empty set of payees",
          "duration": 1609,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: PaymentSplitter rejects more payees than shares",
          "title": "rejects more payees than shares",
          "duration": 857,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: PaymentSplitter rejects more shares than payees",
          "title": "rejects more shares than payees",
          "duration": 806,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: PaymentSplitter rejects null payees",
          "title": "rejects null payees",
          "duration": 909,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: PaymentSplitter rejects zero-valued shares",
          "title": "rejects zero-valued shares",
          "duration": 706,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "Contract: PaymentSplitter rejects repeated payees",
          "title": "rejects repeated payees",
          "duration": 857,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "once deployed",
      "tests": [
        {
          "fullTitle": "once deployed has total shares",
          "title": "has total shares",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed has payees",
          "title": "has payees",
          "duration": 44,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "once deployed accepts payments",
          "title": "accepts payments",
          "duration": 48,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
            "message": "Returned error: type error",
            "data": null
          }
        },
        {
          "fullTitle": "once deployed distributes funds to payees",
          "title": "distributes funds to payees",
          "duration": 42,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
            "message": "Returned error: type error",
            "data": null
          }
        }
      ]
    },
    {
      "title": "shares",
      "tests": [
        {
          "fullTitle": "shares stores shares if address is payee",
          "title": "stores shares if address is payee",
          "duration": 80,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "shares does not store shares if address is not payee",
          "title": "does not store shares if address is not payee",
          "duration": 17,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "release",
      "tests": [
        {
          "fullTitle": "release reverts if no funds to claim",
          "title": "reverts if no funds to claim",
          "duration": 981,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "release reverts if non-payee want to claim",
          "title": "reverts if non-payee want to claim",
          "duration": 41,
          "result": "failed",
          "err": {
            "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
            "message": "Returned error: type error",
            "data": null
          }
        }
      ]
    },
    {
      "title": "Contract: Strings",
      "tests": []
    },
    {
      "title": "from uint256 - decimal format",
      "tests": [
        {
          "fullTitle": "from uint256 - decimal format converts 0",
          "title": "converts 0",
          "duration": 48,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "from uint256 - decimal format converts a positive number",
          "title": "converts a positive number",
          "duration": 89,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "from uint256 - decimal format converts MAX_UINT256",
          "title": "converts MAX_UINT256",
          "duration": 16,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "from uint256 - hex format",
      "tests": [
        {
          "fullTitle": "from uint256 - hex format converts 0",
          "title": "converts 0",
          "duration": 59,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "from uint256 - hex format converts a positive number",
          "title": "converts a positive number",
          "duration": 19,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "from uint256 - hex format converts MAX_UINT256",
          "title": "converts MAX_UINT256",
          "duration": 53,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "from uint256 - fixed hex format",
      "tests": [
        {
          "fullTitle": "from uint256 - fixed hex format converts a positive number (long)",
          "title": "converts a positive number (long)",
          "duration": 32,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "from uint256 - fixed hex format converts a positive number (short)",
          "title": "converts a positive number (short)",
          "duration": 19,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'Strings: hex length insufficient'",
            "showDiff": true,
            "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
            "expected": "Strings: hex length insufficient",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'Strings: hex length insufficient'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        },
        {
          "fullTitle": "from uint256 - fixed hex format converts MAX_UINT256",
          "title": "converts MAX_UINT256",
          "duration": 18,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: EnumerableMap",
      "tests": [
        {
          "fullTitle": "Contract: EnumerableMap starts empty",
          "title": "starts empty",
          "duration": 113,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "set",
      "tests": [
        {
          "fullTitle": "set adds a key",
          "title": "adds a key",
          "duration": 844,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "set adds several keys",
          "title": "adds several keys",
          "duration": 1710,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "set returns false when adding keys already in the set",
          "title": "returns false when adding keys already in the set",
          "duration": 1679,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "set updates values for keys already in the set",
          "title": "updates values for keys already in the set",
          "duration": 1827,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "remove",
      "tests": [
        {
          "fullTitle": "remove removes added keys",
          "title": "removes added keys",
          "duration": 1910,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove returns false when removing keys not in the set",
          "title": "returns false when removing keys not in the set",
          "duration": 972,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove adds and removes multiple keys",
          "title": "adds and removes multiple keys",
          "duration": 11659,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "read",
      "tests": []
    },
    {
      "title": "get",
      "tests": [
        {
          "fullTitle": "get existing value",
          "title": "existing value",
          "duration": 113,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "get missing value",
          "title": "missing value",
          "duration": 78,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableMap: nonexistent key'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "EnumerableMap: nonexistent key",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableMap: nonexistent key'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "get with message",
      "tests": [
        {
          "fullTitle": "get with message existing value",
          "title": "existing value",
          "duration": 83,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "get with message missing value",
          "title": "missing value",
          "duration": 43,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'custom error string'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "custom error string",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'custom error string'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "tryGet",
      "tests": [
        {
          "fullTitle": "tryGet existing value",
          "title": "existing value",
          "duration": 176,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "tryGet missing value",
          "title": "missing value",
          "duration": 253,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "Contract: EnumerableSet",
      "tests": []
    },
    {
      "title": "EnumerableBytes32Set",
      "tests": [
        {
          "fullTitle": "EnumerableBytes32Set starts empty",
          "title": "starts empty",
          "duration": 294,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "add",
      "tests": [
        {
          "fullTitle": "add adds a value",
          "title": "adds a value",
          "duration": 817,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add adds several values",
          "title": "adds several values",
          "duration": 1941,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add returns false when adding values already in the set",
          "title": "returns false when adding values already in the set",
          "duration": 2054,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "at",
      "tests": [
        {
          "fullTitle": "at reverts when retrieving non-existent elements",
          "title": "reverts when retrieving non-existent elements",
          "duration": 26,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "remove",
      "tests": [
        {
          "fullTitle": "remove removes added values",
          "title": "removes added values",
          "duration": 1770,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove returns false when removing values not in the set",
          "title": "returns false when removing values not in the set",
          "duration": 933,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove adds and removes multiple values",
          "title": "adds and removes multiple values",
          "duration": 11734,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "EnumerableAddressSet",
      "tests": [
        {
          "fullTitle": "EnumerableAddressSet starts empty",
          "title": "starts empty",
          "duration": 63,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "add",
      "tests": [
        {
          "fullTitle": "add adds a value",
          "title": "adds a value",
          "duration": 967,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add adds several values",
          "title": "adds several values",
          "duration": 1750,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add returns false when adding values already in the set",
          "title": "returns false when adding values already in the set",
          "duration": 1906,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "at",
      "tests": [
        {
          "fullTitle": "at reverts when retrieving non-existent elements",
          "title": "reverts when retrieving non-existent elements",
          "duration": 71,
          "result": "failed",
          "err": {
            "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableSet: index out of bounds'",
            "showDiff": true,
            "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
            "expected": "EnumerableSet: index out of bounds",
            "operator": "strictEqual",
            "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableSet: index out of bounds'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
          }
        }
      ]
    },
    {
      "title": "remove",
      "tests": [
        {
          "fullTitle": "remove removes added values",
          "title": "removes added values",
          "duration": 2270,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove returns false when removing values not in the set",
          "title": "returns false when removing values not in the set",
          "duration": 1178,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove adds and removes multiple values",
          "title": "adds and removes multiple values",
          "duration": 11437,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "EnumerableUintSet",
      "tests": [
        {
          "fullTitle": "EnumerableUintSet starts empty",
          "title": "starts empty",
          "duration": 71,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "add",
      "tests": [
        {
          "fullTitle": "add adds a value",
          "title": "adds a value",
          "duration": 1001,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add adds several values",
          "title": "adds several values",
          "duration": 2125,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "add returns false when adding values already in the set",
          "title": "returns false when adding values already in the set",
          "duration": 1733,
          "result": "passed",
          "err": {}
        }
      ]
    },
    {
      "title": "at",
      "tests": [
        {
          "fullTitle": "at reverts when retrieving non-existent elements",
          "title": "reverts when retrieving non-existent elements",
          "duration": 65,
          "result": "failed",
          "err": {
            "message": "Expected an exception but none was received",
            "showDiff": false,
            "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
          }
        }
      ]
    },
    {
      "title": "remove",
      "tests": [
        {
          "fullTitle": "remove removes added values",
          "title": "removes added values",
          "duration": 2163,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove returns false when removing values not in the set",
          "title": "returns false when removing values not in the set",
          "duration": 872,
          "result": "passed",
          "err": {}
        },
        {
          "fullTitle": "remove adds and removes multiple values",
          "title": "adds and removes multiple values",
          "duration": 11435,
          "result": "passed",
          "err": {}
        }
      ]
    }
  ],
  "pending": [
    {
      "fullTitle": "when the sender is the admin uses the storage of the proxy",
      "title": "uses the storage of the proxy",
      "result": "pending",
      "err": {}
    },
    {
      "fullTitle": "base URI base URI can be set",
      "title": "base URI can be set",
      "result": "pending",
      "err": {}
    },
    {
      "fullTitle": "base URI base URI is added as a prefix to the token URI",
      "title": "base URI is added as a prefix to the token URI",
      "result": "pending",
      "err": {}
    },
    {
      "fullTitle": "base URI token URI can be changed by changing the base URI",
      "title": "token URI can be changed by changing the base URI",
      "result": "pending",
      "err": {}
    }
  ],
  "failures": [
    {
      "fullTitle": "on time executor can reveal",
      "title": "executor can reveal",
      "duration": 520,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:271:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23",
        "receipt": {
          "transactionHash": "0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23",
          "transactionIndex": 1,
          "blockHash": "0x019205eadfef82f3831fbd1d48c162fc706a7e3311985c1f2235f58ad6935be2",
          "blockNumber": 5011,
          "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
          "to": "0x4860643faf6a8dd20ed787e9665fc56c2874af07",
          "cumulativeGasUsed": 30218,
          "gasUsed": 30218,
          "logs": [],
          "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "status": false,
          "rawLogs": []
        },
        "reason": "TimelockController: operation is not ready",
        "hijackedStack": "StatusError: Transaction: 0x6478b74630a884ef2f18d669b36060ef41b6c28036047c625990358ba1f7dc23 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "on time executor can reveal",
      "title": "executor can reveal",
      "duration": 552,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:508:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869",
        "receipt": {
          "transactionHash": "0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869",
          "transactionIndex": 1,
          "blockHash": "0x503ab070f5365a9ea72b6a0e4808ccb539fa337b2a26db5693f9062ebc546bde",
          "blockNumber": 5065,
          "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
          "to": "0x7bbc3c35ddd718f02c23ee0edf96970586e92f55",
          "cumulativeGasUsed": 76839,
          "gasUsed": 76839,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TimelockController: operation is not ready",
        "hijackedStack": "StatusError: Transaction: 0x6d311c3aea94e5b57e2b2d11be152cb63b944c5b7fd09ffceec1e7fd3b70b869 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "maintenance timelock scheduled maintenance",
      "title": "timelock scheduled maintenance",
      "duration": 883,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:700:43)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26",
        "receipt": {
          "transactionHash": "0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26",
          "transactionIndex": 1,
          "blockHash": "0x1c49f92c2814fbb0260abf3956e6bc99ed816eadb38a8862904e5aee20c25586",
          "blockNumber": 5109,
          "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
          "to": "0xf76040c4ba63e00042dc107e4774d329006ee2e2",
          "cumulativeGasUsed": 38247,
          "gasUsed": 38247,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TimelockController: operation is not ready",
        "hijackedStack": "StatusError: Transaction: 0x2a6e8313d21f0c87305ddcd7a021de8284c0fdf447aa715a9b244307b9710d26 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "dependency can execute after dependency",
      "title": "can execute after dependency",
      "duration": 539,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:766:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961",
        "receipt": {
          "transactionHash": "0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961",
          "transactionIndex": 1,
          "blockHash": "0x1bbfd999972ae2a1a1e91557e6089a853c05bfc22cc672ed966132d8d74f4e81",
          "blockNumber": 5121,
          "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
          "to": "0x484a4efdaf24bef77053d0658dc9c0e0f785a47e",
          "cumulativeGasUsed": 30206,
          "gasUsed": 30206,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TimelockController: operation is not ready",
        "hijackedStack": "StatusError: Transaction: 0x124cfdbaab8e37569ec63ac38baf1c739c4037bdaf9e4c365b6fae572c7aa961 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "usage scenario call",
      "title": "call",
      "duration": 917,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:807:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6",
        "receipt": {
          "transactionHash": "0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6",
          "transactionIndex": 1,
          "blockHash": "0x7cf0fcd001d989ac25c70793b273f90363fc01b08f7c80c1e322d80215c58e57",
          "blockNumber": 5126,
          "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
          "to": "0x2cbbb2123f937f23513fb5857bcb671c0cc8befc",
          "cumulativeGasUsed": 50847,
          "gasUsed": 50847,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TimelockController: operation is not ready",
        "hijackedStack": "StatusError: Transaction: 0x9cc02826f90a12585c847b64499dd45bfb52fbf084fabbf95209c55a3e7154c6 exited with an error (status 0). Reason given: TimelockController: operation is not ready.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "usage scenario call payable with eth",
      "title": "call payable with eth",
      "duration": 932,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8 exited with an error (status 0). Reason given: TimelockController: underlying transaction reverted.\n    at Context.<anonymous> (test/governance/TimelockController.test.js:938:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8 exited with an error (status 0). Reason given: TimelockController: underlying transaction reverted.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8",
        "receipt": {
          "transactionHash": "0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8",
          "transactionIndex": 1,
          "blockHash": "0x4ab6a9eadcce05005a743fd7c70f4d43bf7d24ba7cf6c311fbaf42930900a7bb",
          "blockNumber": 5146,
          "from": "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",
          "to": "0x7cac358dc4cf973468074554d555eb0d3ab1db60",
          "cumulativeGasUsed": 38354,
          "gasUsed": 38354,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TimelockController: underlying transaction reverted",
        "hijackedStack": "StatusError: Transaction: 0xb084bb9eeed2e7a6f5f9b5160d633ddf1faf7480c1c16d3b9874bce1dc1ac2d8 exited with an error (status 0). Reason given: TimelockController: underlying transaction reverted.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "bad beacon is not accepted non-compliant beacon",
      "title": "non-compliant beacon",
      "duration": 772,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit.' to equal 'revert'",
        "showDiff": true,
        "actual": "The contract code couldn't be stored, please check your gas limit.",
        "expected": "revert",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit.' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "initialization no initialization",
      "title": "no initialization",
      "duration": 447,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '10'",
        "showDiff": true,
        "actual": "0",
        "expected": "10",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '10'\n    at Context.assertInitialized (test/proxy/beacon/BeaconProxy.test.js:62:76)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "initialization payable initialization",
      "title": "payable initialization",
      "duration": 390,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '100'",
        "showDiff": true,
        "actual": "0",
        "expected": "100",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '100'\n    at Context.assertInitialized (test/proxy/beacon/BeaconProxy.test.js:62:76)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "Contract: ERC1967Proxy cannot be initialized with a non-contract address",
      "title": "cannot be initialized with a non-contract address",
      "duration": 389,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'",
        "showDiff": true,
        "actual": "The contract code couldn't be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.",
        "expected": "revert",
        "operator": "notStrictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 25,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '1000000'",
        "showDiff": true,
        "actual": "0",
        "expected": "1000000",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 428,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 13,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '1000000'",
        "showDiff": true,
        "actual": "0",
        "expected": "1000000",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 410,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 18,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '1000000'",
        "showDiff": true,
        "actual": "0",
        "expected": "1000000",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "#getProxyAdmin call to invalid proxy",
      "title": "call to invalid proxy",
      "duration": 221,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'",
        "showDiff": true,
        "actual": "Returned error: Revert: executionResult output is empty",
        "expected": "revert",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "#getProxyImplementation call to invalid proxy",
      "title": "call to invalid proxy",
      "duration": 18,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'",
        "showDiff": true,
        "actual": "Returned error: Revert: executionResult output is empty",
        "expected": "revert",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'Returned error: Revert: executionResult output is empty' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "Contract: TransparentUpgradeableProxy cannot be initialized with a non-contract address",
      "title": "cannot be initialized with a non-contract address",
      "duration": 424,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'",
        "showDiff": true,
        "actual": "The contract code couldn't be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.",
        "expected": "revert",
        "operator": "notStrictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'The contract code couldn\\'t be stored, please check your gas limit. -- Reason given: ERC1967Proxy: new implementation is not a contract.' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 20,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "0",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 20,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "0",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '0'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 30,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '1000000'",
        "showDiff": true,
        "actual": "0",
        "expected": "1000000",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 14,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "10",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 401,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 16,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "100",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 13,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "100",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '100'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 19,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '1000000'",
        "showDiff": true,
        "actual": "0",
        "expected": "1000000",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 20,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "10",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 311,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 12,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "42",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 12,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "42",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:38:51)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 13,
      "result": "failed",
      "err": {
        "message": "expected '0' to equal '1000000'",
        "showDiff": true,
        "actual": "0",
        "expected": "1000000",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '0' to equal '1000000'\n    at Context.<anonymous> (test/proxy/Proxy.behaviour.js:42:69)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when the sender is the admin calls the initializer function",
      "title": "calls the initializer function",
      "duration": 39,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "42",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:136:39)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when upgrading to V1 calls the 'initialize' function and sends given value to the proxy",
      "title": "calls the 'initialize' function and sends given value to the proxy",
      "duration": 55,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "42",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:199:39)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when upgrading to V2 calls the 'migrate' function and sends given value to the proxy",
      "title": "calls the 'migrate' function and sends given value to the proxy",
      "duration": 29,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "10",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '10'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:225:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when upgrading to V3 calls the 'migrate' function and sends given value to the proxy",
      "title": "calls the 'migrate' function and sends given value to the proxy",
      "duration": 38,
      "result": "failed",
      "err": {
        "message": "expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'",
        "showDiff": true,
        "actual": "3963877391197344453575983046348115674221700746820753546331534351508065746944",
        "expected": "42",
        "operator": "strictEqual",
        "stack": "AssertionError: expected '3963877391197344453575983046348115674221700746820753546331534351508065746944' to equal '42'\n    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:254:43)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "transparent proxy proxy admin cannot call delegated functions",
      "title": "proxy admin cannot call delegated functions",
      "duration": 9,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "regression should add new function",
      "title": "should add new function",
      "duration": 908,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n    at Context.it (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:371:28)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199",
        "receipt": {
          "transactionHash": "0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199",
          "transactionIndex": 1,
          "blockHash": "0x297cf807b0b1e4cb5221ab0112630c9d65dd4bb477cca221fb4085b44ae1c7d4",
          "blockNumber": 5505,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0xb3bc21c1a79c2b8a41db8f9fd828258ce5e4125b",
          "cumulativeGasUsed": 22486,
          "gasUsed": 22486,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TransparentUpgradeableProxy: admin cannot fallback to proxy target",
        "hijackedStack": "StatusError: Transaction: 0xd55bb9d3e701b89e5e938eb34acc5a08d9d217688c6cae6fc54c7d6a9a816199 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "regression should remove function",
      "title": "should remove function",
      "duration": 880,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n    at Context.it (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:386:28)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5",
        "receipt": {
          "transactionHash": "0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5",
          "transactionIndex": 1,
          "blockHash": "0x58bab5a4648f8f19605b73a43f3e1f7b597d578ee118731fe9df1629b6fa274f",
          "blockNumber": 5509,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0xeaafb2f39eeab82dca5f56b8805e096af91cd9ea",
          "cumulativeGasUsed": 22486,
          "gasUsed": 22486,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TransparentUpgradeableProxy: admin cannot fallback to proxy target",
        "hijackedStack": "StatusError: Transaction: 0x72a3a2fdecac9a35dfdfa3750814742881ed9b38a1c534232a3803223cd625a5 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "regression should change function signature",
      "title": "should change function signature",
      "duration": 958,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n    at Context.it (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:402:28)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872",
        "receipt": {
          "transactionHash": "0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872",
          "transactionIndex": 1,
          "blockHash": "0x2e6b6825f2f54df80c97b92bad0f85ff2a56f9da231aad6edb0e6faa1652ace8",
          "blockNumber": 5513,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0x9b0f7baa2e02738eeff19ed2e9fd9d4422c0e273",
          "cumulativeGasUsed": 22486,
          "gasUsed": 22486,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TransparentUpgradeableProxy: admin cannot fallback to proxy target",
        "hijackedStack": "StatusError: Transaction: 0xab18b8ba0fe7026f28248475afbb7a64cf3538ecb40af73af5e0a18b43599872 exited with an error (status 0). Reason given: TransparentUpgradeableProxy: admin cannot fallback to proxy target.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "regression should add fallback function",
      "title": "should add fallback function",
      "duration": 1706,
      "result": "failed",
      "err": {
        "stack": "ProviderError: \nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 23888\n    - network_id > 4132\nPlease check that your Ethereum client:\n    - is running\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\n    - is accessible over the network\n    - is properly configured in your Truffle configuration file (truffle-config.js)\n\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:73:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:102:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpRequestError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:349:1)\n    at ClientRequest.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:252:47)\n    at Socket.socketOnEnd (_http_client.js:435:9)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "\nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 23888\n    - network_id > 4132\nPlease check that your Ethereum client:\n    - is running\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\n    - is accessible over the network\n    - is properly configured in your Truffle configuration file (truffle-config.js)\n",
        "name": "ProviderError"
      }
    },
    {
      "fullTitle": "regression should remove fallback function",
      "title": "should remove fallback function",
      "duration": 1669,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected '\\nCould not connect to your Ethereum client with the following parameters:\\n    - host       > 127.0.0.1\\n    - port       > 23888\\n    - network_id > 4132\\nPlease check that your Ethereum client:\\n    - is running\\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\\n    - is accessible over the network\\n    - is properly configured in your Truffle configuration file (truffle-config.js)\\n' to equal 'revert'",
        "showDiff": true,
        "actual": "\nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 23888\n    - network_id > 4132\nPlease check that your Ethereum client:\n    - is running\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\n    - is accessible over the network\n    - is properly configured in your Truffle configuration file (truffle-config.js)\n",
        "expected": "revert",
        "operator": "notStrictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected '\\nCould not connect to your Ethereum client with the following parameters:\\n    - host       > 127.0.0.1\\n    - port       > 23888\\n    - network_id > 4132\\nPlease check that your Ethereum client:\\n    - is running\\n    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\\n    - is accessible over the network\\n    - is properly configured in your Truffle configuration file (truffle-config.js)\\n' to equal 'revert'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "payments can record an async payment correctly",
      "title": "can record an async payment correctly",
      "duration": 360,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3 exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:18:27)",
        "message": "Transaction: 0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3",
        "receipt": {
          "transactionHash": "0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3",
          "transactionIndex": 1,
          "blockHash": "0x47371fc242ded4d64cbacaa7eb2850342d5ca81ef677da95820c5abcb65d700b",
          "blockNumber": 5560,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0x9388eeb991aac0680b3b58ba31d033efe291d9fc",
          "cumulativeGasUsed": 30243,
          "gasUsed": 30243,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "hijackedStack": "StatusError: Transaction: 0x3301507b91f2d8167bf98ad3e00a9376873226971bd0a170735af33b156a21c3 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "payments can add multiple balances on one account",
      "title": "can add multiple balances on one account",
      "duration": 421,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173 exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:23:27)",
        "message": "Transaction: 0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173",
        "receipt": {
          "transactionHash": "0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173",
          "transactionIndex": 1,
          "blockHash": "0x1235c67ee7e61ba46a3a0fa350bf84c255af30f93507f65470263fb9bb7d2be1",
          "blockNumber": 5562,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0x1a3be813167c0a8d141db0ee0fb12939c2fe9b65",
          "cumulativeGasUsed": 30243,
          "gasUsed": 30243,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "hijackedStack": "StatusError: Transaction: 0x153710d523dcefa7f143e35132a3caf9569d9bf83d9cca3a0c8b73fa8c23b173 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "payments can add balances on multiple accounts",
      "title": "can add balances on multiple accounts",
      "duration": 435,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64 exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:29:27)",
        "message": "Transaction: 0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64",
        "receipt": {
          "transactionHash": "0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64",
          "transactionIndex": 1,
          "blockHash": "0x098cebc5fd1148cfa7b822c68a4a23cb277a37bbbfd80b0eff3ddf7a3d6d769e",
          "blockNumber": 5564,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0xcae958b7c4d109022ba210fdeb266fc49ec9f0e1",
          "cumulativeGasUsed": 30243,
          "gasUsed": 30243,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "hijackedStack": "StatusError: Transaction: 0x686c5bb0577adb18e77b7d9a4ed7b3b6940986c75cc70ace993cda56ac8c4e64 exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "withdrawPayments can withdraw payment",
      "title": "can withdraw payment",
      "duration": 428,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac exited with an error (status 0). \n    at Context.<anonymous> (test/security/PullPayment.test.js:42:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac",
        "receipt": {
          "transactionHash": "0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac",
          "transactionIndex": 1,
          "blockHash": "0x63fee79e5135dee5c1ff0d68e9bfeae46f486a61044bf8a329c147a770e4a4d1",
          "blockNumber": 5566,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0xdb7eeec4d7e01a6da9ef1b969c5f3d7a2d837ec0",
          "cumulativeGasUsed": 30303,
          "gasUsed": 30303,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "hijackedStack": "StatusError: Transaction: 0x23b3ba3cdc3512bd2c1004cc5be2f8c31f827d4f2b9b610d03964fa1df4c6eac exited with an error (status 0). \n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "balanceOf reverts when queried about the zero address",
      "title": "reverts when queried about the zero address",
      "duration": 14,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "balanceOfBatch reverts when input arrays don't match up",
      "title": "reverts when input arrays don't match up",
      "duration": 18,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: accounts and ids length mismatch'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "ERC1155: accounts and ids length mismatch",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: accounts and ids length mismatch'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "balanceOfBatch reverts when one of the addresses is the zero address",
      "title": "reverts when one of the addresses is the zero address",
      "duration": 21,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: balance query for the zero address'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "ERC1155: balance query for the zero address",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC1155: balance query for the zero address'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "setApprovalForAll \"before each\" hook for \"sets approval status which can be queried via isApprovedForAll\"",
      "title": "\"before each\" hook for \"sets approval status which can be queried via isApprovedForAll\"",
      "duration": 12,
      "result": "failed",
      "err": {
        "stack": "Error: invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"operator\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)\n    at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:170:38)",
        "message": "invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"operator\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)",
        "reason": "invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5)",
        "code": "INVALID_ARGUMENT",
        "argument": "operator",
        "hijackedStack": "Error: invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"operator\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)\n    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:166:1)\n    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:175:1)\n    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:178:1)\n    at AddressCoder._throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js:38:15)\n    at AddressCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/address.js:14:1)\n    at coders.forEach (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:41:1)\n    at Array.forEach (<anonymous>)\n    at pack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:27:1)\n    at TupleCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:19:16)\n    at AbiCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:82:1)\n    at ABICoder.encodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/src/index.js:145:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:531:1\n    at Array.map (<anonymous>)\n    at Object._encodeMethodABI (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:530:10)\n    at execute.prepareCall.then (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:186:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "safeTransferFrom \"before each\" hook for \"reverts when transferring more than balance\"",
      "title": "\"before each\" hook for \"reverts when transferring more than balance\"",
      "duration": 9,
      "result": "failed",
      "err": {
        "stack": "Error: invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"to\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)\n    at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:196:26)",
        "message": "invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"to\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)",
        "reason": "invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5)",
        "code": "INVALID_ARGUMENT",
        "argument": "to",
        "hijackedStack": "Error: invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"to\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)\n    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:166:1)\n    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:175:1)\n    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:178:1)\n    at AddressCoder._throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js:38:15)\n    at AddressCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/address.js:14:1)\n    at coders.forEach (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:41:1)\n    at Array.forEach (<anonymous>)\n    at pack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:27:1)\n    at TupleCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:19:16)\n    at AbiCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:82:1)\n    at ABICoder.encodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/src/index.js:145:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:531:1\n    at Array.map (<anonymous>)\n    at Object._encodeMethodABI (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:530:10)\n    at execute.prepareCall.then (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:186:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "safeBatchTransferFrom \"before each\" hook for \"reverts when transferring amount more than any of balances\"",
      "title": "\"before each\" hook for \"reverts when transferring amount more than any of balances\"",
      "duration": 13,
      "result": "failed",
      "err": {
        "stack": "Error: invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"to\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)\n    at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:452:26)",
        "message": "invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"to\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)",
        "reason": "invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5)",
        "code": "INVALID_ARGUMENT",
        "argument": "to",
        "hijackedStack": "Error: invalid address (argument=\"address\", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument=\"to\", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)\n    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:166:1)\n    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:175:1)\n    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:178:1)\n    at AddressCoder._throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js:38:15)\n    at AddressCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/address.js:14:1)\n    at coders.forEach (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:41:1)\n    at Array.forEach (<anonymous>)\n    at pack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:27:1)\n    at TupleCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:19:16)\n    at AbiCoder.encode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:82:1)\n    at ABICoder.encodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/src/index.js:145:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:531:1\n    at Array.map (<anonymous>)\n    at Object._encodeMethodABI (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:530:10)\n    at execute.prepareCall.then (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/execute.js:186:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "totalSupplyAt reverts with a snapshot id of 0",
      "title": "reverts with a snapshot id of 0",
      "duration": 31,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "totalSupplyAt reverts with a not-yet-created snapshot id",
      "title": "reverts with a not-yet-created snapshot id",
      "duration": 13,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "balanceOfAt reverts with a snapshot id of 0",
      "title": "reverts with a snapshot id of 0",
      "duration": 19,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "balanceOfAt reverts with a not-yet-created snapshot id",
      "title": "reverts with a not-yet-created snapshot id",
      "duration": 15,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "once deployed can be released just after limit",
      "title": "can be released just after limit",
      "duration": 445,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231 exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n    at Context.<anonymous> (test/token/ERC20/utils/TokenTimelock.test.js:53:29)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231 exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231",
        "receipt": {
          "transactionHash": "0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231",
          "transactionIndex": 1,
          "blockHash": "0x7913876cd4e4a1f3a8598c0f37c6f3076c12cddf9751a3a4b2d414914afcff6f",
          "blockNumber": 6269,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0xac0f8277dbab26d7c23b675e37db254ed158444a",
          "cumulativeGasUsed": 21380,
          "gasUsed": 21380,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TokenTimelock: current time is before release time",
        "hijackedStack": "StatusError: Transaction: 0x4d15ed53d74575383c8988ff7bd6a34c73e69410030967d27f198fa0855b7231 exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "once deployed can be released after time limit",
      "title": "can be released after time limit",
      "duration": 435,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n    at Context.<anonymous> (test/token/ERC20/utils/TokenTimelock.test.js:59:29)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a",
        "receipt": {
          "transactionHash": "0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a",
          "transactionIndex": 1,
          "blockHash": "0x558b2aa6c56f8bec05f76d9eeb29e71146ef176523b2fb90f73153559eadb9da",
          "blockNumber": 6273,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0x40da5300feaf8dd8fdf75f31b5f020770535a5b0",
          "cumulativeGasUsed": 21380,
          "gasUsed": 21380,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TokenTimelock: current time is before release time",
        "hijackedStack": "StatusError: Transaction: 0x340665d41df60b43dede6b43228f8ecd7694296a4951ff7f1ec841f17d22774a exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "once deployed cannot be released twice",
      "title": "cannot be released twice",
      "duration": 453,
      "result": "failed",
      "err": {
        "stack": "StatusError: Transaction: 0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n    at Context.<anonymous> (test/token/ERC20/utils/TokenTimelock.test.js:65:29)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Transaction: 0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n",
        "name": "StatusError",
        "tx": "0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa",
        "receipt": {
          "transactionHash": "0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa",
          "transactionIndex": 1,
          "blockHash": "0x298f6c08423044e8eb7d187bfcfeaa5bada3dce98c149c186d355275fbb89a8a",
          "blockNumber": 6277,
          "from": "0x7926223070547d2d15b2ef5e7383e541c338ffe9",
          "to": "0xa8b579dceedc515daffd66561fe97a0d15c92a54",
          "cumulativeGasUsed": 21380,
          "gasUsed": 21380,
          "logs": [],
          "logsBloom": "0x
          "status": false,
          "rawLogs": []
        },
        "reason": "TokenTimelock: current time is before release time",
        "hijackedStack": "StatusError: Transaction: 0x1f8568ccc027a457180b99fb04d79e2798e1f719d74f3cd728db48d8ba29e4aa exited with an error (status 0). Reason given: TokenTimelock: current time is before release time.\n     Please check that the transaction:\n     - satisfies all conditions set by Solidity `require` statements.\n     - does not trigger a Solidity `revert` statement.\n\n    at Object.receipt (/usr/local/lib/node_modules/truffle/build/webpack:/packages/contract/lib/handlers.js:133:1)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when querying the zero address throws",
      "title": "throws",
      "duration": 24,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when the given token ID was not tracked by this token reverts",
      "title": "reverts",
      "duration": 31,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: owner query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "when token is not minted reverts",
      "title": "reverts",
      "duration": 54,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: approved query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with burnt token deletes the token",
      "title": "deletes the token",
      "duration": 52,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: owner query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "token URI reverts when queried for non existent token id",
      "title": "reverts when queried for non existent token id",
      "duration": 60,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "ERC721Metadata: URI query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "when querying the zero address throws",
      "title": "throws",
      "duration": 49,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when the given token ID was not tracked by this token reverts",
      "title": "reverts",
      "duration": 63,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: owner query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "when token is not minted reverts",
      "title": "reverts",
      "duration": 89,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: approved query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with burnt token deletes the token",
      "title": "deletes the token",
      "duration": 37,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: owner query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "token URI reverts when queried for non existent token id",
      "title": "reverts when queried for non existent token id",
      "duration": 81,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "ERC721Metadata: URI query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721Metadata: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "when the index is greater than or equal to the total tokens owned by the given address reverts",
      "title": "reverts",
      "duration": 26,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when the given address does not own any token reverts",
      "title": "reverts",
      "duration": 91,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "after transferring all tokens to another user returns empty collection for original owner",
      "title": "returns empty collection for original owner",
      "duration": 75,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "tokenByIndex reverts if index is greater than supply",
      "title": "reverts if index is greater than supply",
      "duration": 33,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "with burnt token burns all tokens",
      "title": "burns all tokens",
      "duration": 807,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "when successful burns the given token ID and adjusts the balance of the owner",
      "title": "burns the given token ID and adjusts the balance of the owner",
      "duration": 74,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: owner query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: owner query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "getApproved reverts",
      "title": "reverts",
      "duration": 73,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ERC721: approved query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ERC721: approved query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "token URI reverts when queried for non existent token id",
      "title": "reverts when queried for non existent token id",
      "duration": 125,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "ERC721URIStorage: URI query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "token URI tokens without URI can be burnt ",
      "title": "tokens without URI can be burnt ",
      "duration": 1008,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "ERC721URIStorage: URI query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "token URI tokens with URI can be burnt ",
      "title": "tokens with URI can be burnt ",
      "duration": 2153,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "ERC721URIStorage: URI query for nonexistent token",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'ERC721URIStorage: URI query for nonexistent token'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with default operators \"before each\" hook for \"does not emit AuthorizedOperator events for default operators\"",
      "title": "\"before each\" hook for \"does not emit AuthorizedOperator events for default operators\"",
      "duration": 126,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "Contract: ERC777PresetFixedSupply \"before all\" hook for \"returns the name\"",
      "title": "\"before all\" hook for \"returns the name\"",
      "duration": 507,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "when sender contract has funds \"before each\" hook for \"sends 0 wei\"",
      "title": "\"before each\" hook for \"sends 0 wei\"",
      "duration": 35,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "with non-zero value calls the requested function with existing value",
      "title": "calls the requested function with existing value",
      "duration": 88,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "with non-zero value calls the requested function with transaction funds",
      "title": "calls the requested function with transaction funds",
      "duration": 166,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error -- Reason given: Address: insufficient balance for call.\n    at Context.<anonymous> (test/utils/Address.test.js:254:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Returned error: type error -- Reason given: Address: insufficient balance for call.",
        "reason": "Address: insufficient balance for call",
        "hijackedStack": "Error: Returned error: type error -- Reason given: Address: insufficient balance for call.\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "with non-zero value reverts when calling non-payable functions",
      "title": "reverts when calling non-payable functions",
      "duration": 36,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "deploy deploys a contract with funds deposited in the factory",
      "title": "deploys a contract with funds deposited in the factory",
      "duration": 114,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "Contract: EIP712 digest",
      "title": "digest",
      "duration": 20,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: Revert: executionResult output is empty\n    at Context.<anonymous> (test/utils/cryptography/draft-EIP712.test.js:55:23)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Returned error: Revert: executionResult output is empty",
        "hijackedStack": "Error: Returned error: Revert: executionResult output is empty\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "recover with invalid signature with short signature",
      "title": "with short signature",
      "duration": 19,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature length",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "recover with invalid signature with long signature",
      "title": "with long signature",
      "duration": 18,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature length",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature length'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with 00 as version value reverts",
      "title": "reverts",
      "duration": 34,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature 'v' value",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with wrong version reverts",
      "title": "reverts",
      "duration": 20,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature 'v' value",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with 01 as version value reverts",
      "title": "reverts",
      "duration": 30,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature 'v' value",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with wrong version reverts",
      "title": "reverts",
      "duration": 33,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature 'v' value",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'v\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with high-s value signature reverts",
      "title": "reverts",
      "duration": 23,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'s\\' value'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature 's' value",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature \\'s\\' value'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "with correct signature returns signer address",
      "title": "returns signer address",
      "duration": 28,
      "result": "failed",
      "err": {
        "stack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Context.<anonymous> (test/utils/cryptography/ECDSA.test.js:115:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "reason": "value out of range",
        "code": "INVALID_ARGUMENT",
        "argument": "value",
        "value": 20,
        "baseType": "address",
        "name": null,
        "type": "address",
        "hijackedStack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:166:1)\n    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:175:1)\n    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:178:1)\n    at hexZeroPad (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/bytes/lib.esm/index.js:249:1)\n    at AddressCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/address.js:19:37)\n    at coders.forEach (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:78:1)\n    at Array.forEach (<anonymous>)\n    at unpack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:56:1)\n    at TupleCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:22:41)\n    at AbiCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:88:1)\n    at ABICoder.decodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/src/index.js:341:1)\n    at Contract._decodeMethodReturn (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:572:1)\n    at Method.outputFormatter (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:932:1)\n    at Method.formatOutput (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:169:1)\n    at sendTxCallback (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:640:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:177:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "with wrong message returns a different address",
      "title": "returns a different address",
      "duration": 22,
      "result": "failed",
      "err": {
        "stack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Context.<anonymous> (test/utils/cryptography/ECDSA.test.js:125:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "reason": "value out of range",
        "code": "INVALID_ARGUMENT",
        "argument": "value",
        "value": 20,
        "baseType": "address",
        "name": null,
        "type": "address",
        "hijackedStack": "Error: value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)\n    at Logger.makeError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:166:1)\n    at Logger.throwError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:175:1)\n    at Logger.throwArgumentError (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/logger/lib.esm/index.js:178:1)\n    at hexZeroPad (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/bytes/lib.esm/index.js:249:1)\n    at AddressCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/address.js:19:37)\n    at coders.forEach (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:78:1)\n    at Array.forEach (<anonymous>)\n    at unpack (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/array.js:56:1)\n    at TupleCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js:22:41)\n    at AbiCoder.decode (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/@ethersproject/abi/lib.esm/abi-coder.js:88:1)\n    at ABICoder.decodeParameters (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth-abi/src/index.js:341:1)\n    at Contract._decodeMethodReturn (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:572:1)\n    at Method.outputFormatter (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-eth-contract/src/index.js:932:1)\n    at Method.formatOutput (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:169:1)\n    at sendTxCallback (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-eth/node_modules/web3-core-method/src/index.js:640:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:177:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "with invalid signature reverts",
      "title": "reverts",
      "duration": 78,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "ECDSA: invalid signature",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'ECDSA: invalid signature'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "deposits can accept a single deposit",
      "title": "can accept a single deposit",
      "duration": 58,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:11:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "deposits emits a deposited event",
      "title": "emits a deposited event",
      "duration": 452,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:29:44)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "deposits can add multiple deposits on a single account",
      "title": "can add multiple deposits on a single account",
      "duration": 300,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:37:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "deposits can track deposits to multiple accounts",
      "title": "can track deposits to multiple accounts",
      "duration": 162,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:46:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "withdrawals can withdraw payments",
      "title": "can withdraw payments",
      "duration": 2134,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:61:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "withdrawals emits a withdrawn event",
      "title": "emits a withdrawn event",
      "duration": 420,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:81:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "when withdrawal is disallowed reverts on withdrawals",
      "title": "reverts on withdrawals",
      "duration": 122,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/ConditionalEscrow.test.js:29:25)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "deposits can accept a single deposit",
      "title": "can accept a single deposit",
      "duration": 245,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:11:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "deposits emits a deposited event",
      "title": "emits a deposited event",
      "duration": 72,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:29:44)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "deposits can add multiple deposits on a single account",
      "title": "can add multiple deposits on a single account",
      "duration": 92,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:37:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "deposits can track deposits to multiple accounts",
      "title": "can track deposits to multiple accounts",
      "duration": 59,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:46:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "withdrawals can withdraw payments",
      "title": "can withdraw payments",
      "duration": 71,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:61:27)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "withdrawals emits a withdrawn event",
      "title": "emits a withdrawn event",
      "duration": 56,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/Escrow.behavior.js:81:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "active state accepts deposits",
      "title": "accepts deposits",
      "duration": 53,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:32:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "active state does not refund refundees",
      "title": "does not refund refundees",
      "duration": 78,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:38:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "active state does not allow beneficiary withdrawal",
      "title": "does not allow beneficiary withdrawal",
      "duration": 50,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:45:27)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "closed state \"before each\" hook for \"rejects deposits\"",
      "title": "\"before each\" hook for \"rejects deposits\"",
      "duration": 78,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Promise.all.refundees.map.refundee (test/utils/escrow/RefundEscrow.test.js:63:65)\n    at Array.map (<anonymous>)\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:63:37)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "refund state \"before each\" hook for \"rejects deposits\"",
      "title": "\"before each\" hook for \"rejects deposits\"",
      "duration": 118,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Promise.all.refundees.map.refundee (test/utils/escrow/RefundEscrow.test.js:110:65)\n    at Array.map (<anonymous>)\n    at Context.<anonymous> (test/utils/escrow/RefundEscrow.test.js:110:37)",
        "message": "Returned error: type error",
        "hijackedStack": "Error: Returned error: type error\n    at Object.ErrorResponse (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)\n    at /usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at IncomingMessage.emit (events.js:203:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
      }
    },
    {
      "fullTitle": "with no registered interfaces \"before each\" hook for \"returns false when interface implementation is queried\"",
      "title": "\"before each\" hook for \"returns false when interface implementation is queried\"",
      "duration": 1143,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "toUint8 reverts when downcasting 2^8 (256)",
      "title": "reverts when downcasting 2^8 (256)",
      "duration": 159,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint8 reverts when downcasting 2^8 + 1 (257)",
      "title": "reverts when downcasting 2^8 + 1 (257)",
      "duration": 194,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint16 reverts when downcasting 2^16 (65536)",
      "title": "reverts when downcasting 2^16 (65536)",
      "duration": 17,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint16 reverts when downcasting 2^16 + 1 (65537)",
      "title": "reverts when downcasting 2^16 + 1 (65537)",
      "duration": 34,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint32 reverts when downcasting 2^32 (4294967296)",
      "title": "reverts when downcasting 2^32 (4294967296)",
      "duration": 20,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint32 reverts when downcasting 2^32 + 1 (4294967297)",
      "title": "reverts when downcasting 2^32 + 1 (4294967297)",
      "duration": 23,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint64 reverts when downcasting 2^64 (18446744073709551616)",
      "title": "reverts when downcasting 2^64 (18446744073709551616)",
      "duration": 17,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint64 reverts when downcasting 2^64 + 1 (18446744073709551617)",
      "title": "reverts when downcasting 2^64 + 1 (18446744073709551617)",
      "duration": 18,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint128 reverts when downcasting 2^128 (340282366920938463463374607431768211456)",
      "title": "reverts when downcasting 2^128 (340282366920938463463374607431768211456)",
      "duration": 30,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint128 reverts when downcasting 2^128 + 1 (340282366920938463463374607431768211457)",
      "title": "reverts when downcasting 2^128 + 1 (340282366920938463463374607431768211457)",
      "duration": 42,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint256 reverts when casting -1",
      "title": "reverts when casting -1",
      "duration": 75,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toUint256 reverts when casting INT256_MIN (-57896044618658097711785492504343953926634992332820282019728792003956564819968)",
      "title": "reverts when casting INT256_MIN (-57896044618658097711785492504343953926634992332820282019728792003956564819968)",
      "duration": 36,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt8 reverts when downcasting -2^7 - 1 (-129)",
      "title": "reverts when downcasting -2^7 - 1 (-129)",
      "duration": 17,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt8 reverts when downcasting -2^7 - 2 (-130)",
      "title": "reverts when downcasting -2^7 - 2 (-130)",
      "duration": 76,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt8 reverts when downcasting 2^7 (128)",
      "title": "reverts when downcasting 2^7 (128)",
      "duration": 26,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt8 reverts when downcasting 2^7 + 1 (129)",
      "title": "reverts when downcasting 2^7 + 1 (129)",
      "duration": 47,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt16 reverts when downcasting -2^15 - 1 (-32769)",
      "title": "reverts when downcasting -2^15 - 1 (-32769)",
      "duration": 18,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt16 reverts when downcasting -2^15 - 2 (-32770)",
      "title": "reverts when downcasting -2^15 - 2 (-32770)",
      "duration": 35,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt16 reverts when downcasting 2^15 (32768)",
      "title": "reverts when downcasting 2^15 (32768)",
      "duration": 48,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt16 reverts when downcasting 2^15 + 1 (32769)",
      "title": "reverts when downcasting 2^15 + 1 (32769)",
      "duration": 24,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt32 reverts when downcasting -2^31 - 1 (-2147483649)",
      "title": "reverts when downcasting -2^31 - 1 (-2147483649)",
      "duration": 19,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt32 reverts when downcasting -2^31 - 2 (-2147483650)",
      "title": "reverts when downcasting -2^31 - 2 (-2147483650)",
      "duration": 29,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt32 reverts when downcasting 2^31 (2147483648)",
      "title": "reverts when downcasting 2^31 (2147483648)",
      "duration": 17,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt32 reverts when downcasting 2^31 + 1 (2147483649)",
      "title": "reverts when downcasting 2^31 + 1 (2147483649)",
      "duration": 121,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt64 reverts when downcasting -2^63 - 1 (-9223372036854775809)",
      "title": "reverts when downcasting -2^63 - 1 (-9223372036854775809)",
      "duration": 174,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt64 reverts when downcasting -2^63 - 2 (-9223372036854775810)",
      "title": "reverts when downcasting -2^63 - 2 (-9223372036854775810)",
      "duration": 36,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt64 reverts when downcasting 2^63 (9223372036854775808)",
      "title": "reverts when downcasting 2^63 (9223372036854775808)",
      "duration": 60,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt64 reverts when downcasting 2^63 + 1 (9223372036854775809)",
      "title": "reverts when downcasting 2^63 + 1 (9223372036854775809)",
      "duration": 24,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt128 reverts when downcasting -2^127 - 1 (-170141183460469231731687303715884105729)",
      "title": "reverts when downcasting -2^127 - 1 (-170141183460469231731687303715884105729)",
      "duration": 59,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt128 reverts when downcasting -2^127 - 2 (-170141183460469231731687303715884105730)",
      "title": "reverts when downcasting -2^127 - 2 (-170141183460469231731687303715884105730)",
      "duration": 19,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt128 reverts when downcasting 2^127 (170141183460469231731687303715884105728)",
      "title": "reverts when downcasting 2^127 (170141183460469231731687303715884105728)",
      "duration": 31,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt128 reverts when downcasting 2^127 + 1 (170141183460469231731687303715884105729)",
      "title": "reverts when downcasting 2^127 + 1 (170141183460469231731687303715884105729)",
      "duration": 16,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt256 reverts when casting INT256_MAX + 1 (57896044618658097711785492504343953926634992332820282019728792003956564819968)",
      "title": "reverts when casting INT256_MAX + 1 (57896044618658097711785492504343953926634992332820282019728792003956564819968)",
      "duration": 27,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "toInt256 reverts when casting UINT256_MAX (115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "title": "reverts when casting UINT256_MAX (115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "duration": 50,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "add reverts on addition overflow",
      "title": "reverts on addition overflow",
      "duration": 24,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "sub reverts if subtraction result would be negative",
      "title": "reverts if subtraction result would be negative",
      "duration": 15,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "mul reverts on multiplication overflow",
      "title": "reverts on multiplication overflow",
      "duration": 69,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "div reverts on division by zero",
      "title": "reverts on division by zero",
      "duration": 31,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "mod reverts with a 0 divisor",
      "title": "reverts with a 0 divisor",
      "duration": 37,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "sub reverts if subtraction result would be negative",
      "title": "reverts if subtraction result would be negative",
      "duration": 33,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "div reverts on division by zero",
      "title": "reverts on division by zero",
      "duration": 22,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "mod reverts with a 0 divisor",
      "title": "reverts with a 0 divisor",
      "duration": 58,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "add reverts on positive addition overflow",
      "title": "reverts on positive addition overflow",
      "duration": 283,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "add reverts on negative addition overflow",
      "title": "reverts on negative addition overflow",
      "duration": 60,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "sub reverts on positive subtraction overflow",
      "title": "reverts on positive subtraction overflow",
      "duration": 24,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "sub reverts on negative subtraction overflow",
      "title": "reverts on negative subtraction overflow",
      "duration": 31,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "mul reverts on multiplication overflow, positive operands",
      "title": "reverts on multiplication overflow, positive operands",
      "duration": 49,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "mul reverts when minimum integer is multiplied by -1",
      "title": "reverts when minimum integer is multiplied by -1",
      "duration": 26,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "div reverts on division by zero",
      "title": "reverts on division by zero",
      "duration": 27,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "div reverts on overflow, negative second",
      "title": "reverts on overflow, negative second",
      "duration": 16,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "once deployed accepts payments",
      "title": "accepts payments",
      "duration": 48,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "once deployed distributes funds to payees",
      "title": "distributes funds to payees",
      "duration": 42,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "release reverts if non-payee want to claim",
      "title": "reverts if non-payee want to claim",
      "duration": 41,
      "result": "failed",
      "err": {
        "stack": "Error: Returned error: type error\n    at Object.ErrorResponse (node_modules/web3-core-helpers/lib/errors.js:28:19)\n    at /home/ripply/git/janus/testing/openzeppelin/openzeppelin-contracts/node_modules/web3-core-requestmanager/lib/index.js:303:36\n    at /usr/local/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1\n    at XMLHttpRequest.request.onreadystatechange (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)\n    at XMLHttpRequestEventTarget.dispatchEvent (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)\n    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)\n    at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
        "message": "Returned error: type error",
        "data": null
      }
    },
    {
      "fullTitle": "from uint256 - fixed hex format converts a positive number (short)",
      "title": "converts a positive number (short)",
      "duration": 19,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'Strings: hex length insufficient'",
        "showDiff": true,
        "actual": "overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)",
        "expected": "Strings: hex length insufficient",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'overflow (fault=\"overflow\", operation=\"toNumber\", value=\"3963877391197344453575983046348115674221700746820753546331534351508065746944\", code=NUMERIC_FAULT, version=bignumber/5.0.8)' to equal 'Strings: hex length insufficient'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "get missing value",
      "title": "missing value",
      "duration": 78,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableMap: nonexistent key'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "EnumerableMap: nonexistent key",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableMap: nonexistent key'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "get with message missing value",
      "title": "missing value",
      "duration": 43,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'custom error string'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "custom error string",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'custom error string'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "at reverts when retrieving non-existent elements",
      "title": "reverts when retrieving non-existent elements",
      "duration": 26,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    },
    {
      "fullTitle": "at reverts when retrieving non-existent elements",
      "title": "reverts when retrieving non-existent elements",
      "duration": 71,
      "result": "failed",
      "err": {
        "message": "Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableSet: index out of bounds'",
        "showDiff": true,
        "actual": "value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)",
        "expected": "EnumerableSet: index out of bounds",
        "operator": "strictEqual",
        "stack": "AssertionError: Wrong kind of exception received: expected 'value out of range (argument=\"value\", value=20, code=INVALID_ARGUMENT, version=bytes/5.0.5)' to equal 'EnumerableSet: index out of bounds'\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)"
      }
    },
    {
      "fullTitle": "at reverts when retrieving non-existent elements",
      "title": "reverts when retrieving non-existent elements",
      "duration": 65,
      "result": "failed",
      "err": {
        "message": "Expected an exception but none was received",
        "showDiff": false,
        "stack": "AssertionError: Expected an exception but none was received\n    at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
      }
    }
  ],
  "passes": [
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 14,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "hasRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "grantRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "revokeRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renounceRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "default admin deployer has default admin role",
      "title": "deployer has default admin role",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "default admin other roles's admin is the default admin role",
      "title": "other roles's admin is the default admin role",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "default admin default admin role's admin is itself",
      "title": "default admin role's admin is itself",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "granting admin can grant role to other accounts",
      "title": "admin can grant role to other accounts",
      "duration": 371,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "granting non-admin cannot grant role to other accounts",
      "title": "non-admin cannot grant role to other accounts",
      "duration": 526,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "granting accounts can be granted a role multiple times",
      "title": "accounts can be granted a role multiple times",
      "duration": 683,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "revoking roles that are not had can be revoked",
      "title": "roles that are not had can be revoked",
      "duration": 358,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role admin can revoke role",
      "title": "admin can revoke role",
      "duration": 352,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role non-admin cannot revoke role",
      "title": "non-admin cannot revoke role",
      "duration": 512,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role a role can be revoked multiple times",
      "title": "a role can be revoked multiple times",
      "duration": 661,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renouncing roles that are not had can be renounced",
      "title": "roles that are not had can be renounced",
      "duration": 352,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role bearer can renounce role",
      "title": "bearer can renounce role",
      "duration": 372,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role only the sender can renounce their roles",
      "title": "only the sender can renounce their roles",
      "duration": 367,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role a role can be renounced multiple times",
      "title": "a role can be renounced multiple times",
      "duration": 702,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin a role's admin role can be changed",
      "title": "a role's admin role can be changed",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin the new admin can grant roles",
      "title": "the new admin can grant roles",
      "duration": 530,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin the new admin can revoke roles",
      "title": "the new admin can revoke roles",
      "duration": 1018,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin a role's previous admins no longer grant roles",
      "title": "a role's previous admins no longer grant roles",
      "duration": 398,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin a role's previous admins no longer revoke roles",
      "title": "a role's previous admins no longer revoke roles",
      "duration": 383,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "hasRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "grantRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "revokeRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renounceRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "default admin deployer has default admin role",
      "title": "deployer has default admin role",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "default admin other roles's admin is the default admin role",
      "title": "other roles's admin is the default admin role",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "default admin default admin role's admin is itself",
      "title": "default admin role's admin is itself",
      "duration": 122,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "granting admin can grant role to other accounts",
      "title": "admin can grant role to other accounts",
      "duration": 346,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "granting non-admin cannot grant role to other accounts",
      "title": "non-admin cannot grant role to other accounts",
      "duration": 503,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "granting accounts can be granted a role multiple times",
      "title": "accounts can be granted a role multiple times",
      "duration": 745,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "revoking roles that are not had can be revoked",
      "title": "roles that are not had can be revoked",
      "duration": 355,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role admin can revoke role",
      "title": "admin can revoke role",
      "duration": 392,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role non-admin cannot revoke role",
      "title": "non-admin cannot revoke role",
      "duration": 591,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role a role can be revoked multiple times",
      "title": "a role can be revoked multiple times",
      "duration": 738,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renouncing roles that are not had can be renounced",
      "title": "roles that are not had can be renounced",
      "duration": 346,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role bearer can renounce role",
      "title": "bearer can renounce role",
      "duration": 407,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role only the sender can renounce their roles",
      "title": "only the sender can renounce their roles",
      "duration": 360,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with granted role a role can be renounced multiple times",
      "title": "a role can be renounced multiple times",
      "duration": 745,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin a role's admin role can be changed",
      "title": "a role's admin role can be changed",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin the new admin can grant roles",
      "title": "the new admin can grant roles",
      "duration": 535,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin the new admin can revoke roles",
      "title": "the new admin can revoke roles",
      "duration": 1109,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin a role's previous admins no longer grant roles",
      "title": "a role's previous admins no longer grant roles",
      "duration": 398,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setting role admin a role's previous admins no longer revoke roles",
      "title": "a role's previous admins no longer revoke roles",
      "duration": 384,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleMember(bytes32,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleMemberCount(bytes32) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "enumerating role bearers can be enumerated",
      "title": "role bearers can be enumerated",
      "duration": 1487,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "enumerating role enumeration should be in sync after renounceRole call",
      "title": "role enumeration should be in sync after renounceRole call",
      "duration": 811,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: Ownable has an owner",
      "title": "has an owner",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer ownership changes owner after transfer",
      "title": "changes owner after transfer",
      "duration": 374,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer ownership prevents non-owners from transferring",
      "title": "prevents non-owners from transferring",
      "duration": 343,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer ownership guards ownership against stuck state",
      "title": "guards ownership against stuck state",
      "duration": 374,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renounce ownership loses owner after renouncement",
      "title": "loses owner after renouncement",
      "duration": 394,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renounce ownership prevents non-owners from renouncement",
      "title": "prevents non-owners from renouncement",
      "duration": 367,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: TimelockController initial state",
      "title": "initial state",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "operation hashing hashOperation",
      "title": "hashOperation",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "operation hashing hashOperationBatch",
      "title": "hashOperationBatch",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule proposer can schedule",
      "title": "proposer can schedule",
      "duration": 400,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule prevent overwritting active operation",
      "title": "prevent overwritting active operation",
      "duration": 709,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule prevent non-proposer from commiting",
      "title": "prevent non-proposer from commiting",
      "duration": 564,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule enforce minimum delay",
      "title": "enforce minimum delay",
      "duration": 384,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "execute revert if operation is not scheduled",
      "title": "revert if operation is not scheduled",
      "duration": 562,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with scheduled operation revert if execution comes too early 1/2",
      "title": "revert if execution comes too early 1/2",
      "duration": 513,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with scheduled operation revert if execution comes too early 2/2",
      "title": "revert if execution comes too early 2/2",
      "duration": 598,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "on time prevent non-executor from revealing",
      "title": "prevent non-executor from revealing",
      "duration": 528,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule proposer can schedule",
      "title": "proposer can schedule",
      "duration": 385,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule prevent overwritting active operation",
      "title": "prevent overwritting active operation",
      "duration": 741,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule length of batch parameter must match #1",
      "title": "length of batch parameter must match #1",
      "duration": 377,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule length of batch parameter must match #1",
      "title": "length of batch parameter must match #1",
      "duration": 379,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule prevent non-proposer from commiting",
      "title": "prevent non-proposer from commiting",
      "duration": 547,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "schedule enforce minimum delay",
      "title": "enforce minimum delay",
      "duration": 358,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "execute revert if operation is not scheduled",
      "title": "revert if operation is not scheduled",
      "duration": 593,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "execute partial execution",
      "title": "partial execution",
      "duration": 910,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with scheduled operation revert if execution comes too early 1/2",
      "title": "revert if execution comes too early 1/2",
      "duration": 522,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with scheduled operation revert if execution comes too early 2/2",
      "title": "revert if execution comes too early 2/2",
      "duration": 602,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "on time prevent non-executor from revealing",
      "title": "prevent non-executor from revealing",
      "duration": 529,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "on time length mismatch #1",
      "title": "length mismatch #1",
      "duration": 549,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "on time length mismatch #2",
      "title": "length mismatch #2",
      "duration": 529,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "on time length mismatch #3",
      "title": "length mismatch #3",
      "duration": 564,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "cancel proposer can cancel",
      "title": "proposer can cancel",
      "duration": 363,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "cancel cannot cancel invalid operation",
      "title": "cannot cancel invalid operation",
      "duration": 392,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "cancel prevent non-proposer from canceling",
      "title": "prevent non-proposer from canceling",
      "duration": 548,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "maintenance prevent unauthorized maintenance",
      "title": "prevent unauthorized maintenance",
      "duration": 505,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "dependency cannot execute before dependency",
      "title": "cannot execute before dependency",
      "duration": 536,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "usage scenario call reverting",
      "title": "call reverting",
      "duration": 915,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "usage scenario call throw",
      "title": "call throw",
      "duration": 965,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "usage scenario call out of gas",
      "title": "call out of gas",
      "duration": 896,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "usage scenario call nonpayable with eth",
      "title": "call nonpayable with eth",
      "duration": 810,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "usage scenario call reverting with eth",
      "title": "call reverting with eth",
      "duration": 797,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC2771Context recognize trusted forwarder",
      "title": "recognize trusted forwarder",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgSender returns the transaction sender when called from an EOA",
      "title": "returns the transaction sender when called from an EOA",
      "duration": 370,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgSender returns the transaction sender when from another contract",
      "title": "returns the transaction sender when from another contract",
      "duration": 362,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgData returns the transaction data when called from an EOA",
      "title": "returns the transaction data when called from an EOA",
      "duration": 420,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgData returns the transaction sender when from another contract",
      "title": "returns the transaction sender when from another contract",
      "duration": 407,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgSender returns the relayed transaction original sender",
      "title": "returns the relayed transaction original sender",
      "duration": 393,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgData returns the relayed transaction original data",
      "title": "returns the relayed transaction original data",
      "duration": 397,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "valid signature success",
      "title": "success",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered from",
      "title": "tampered from",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered to",
      "title": "tampered to",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered value",
      "title": "tampered value",
      "duration": 10,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered nonce",
      "title": "tampered nonce",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered data",
      "title": "tampered data",
      "duration": 14,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered signature",
      "title": "tampered signature",
      "duration": 34,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "valid signature success",
      "title": "success",
      "duration": 344,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered from",
      "title": "tampered from",
      "duration": 377,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered to",
      "title": "tampered to",
      "duration": 357,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered value",
      "title": "tampered value",
      "duration": 387,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered nonce",
      "title": "tampered nonce",
      "duration": 384,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered data",
      "title": "tampered data",
      "duration": 320,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "invalid signature tampered signature",
      "title": "tampered signature",
      "duration": 355,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "migrate-imports.js every new path exists",
      "title": "every new path exists",
      "duration": 4,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "migrate-imports.js replaces import paths in a file",
      "title": "replaces import paths in a file",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: BeaconProxy upgrade a proxy by upgrading its beacon",
      "title": "upgrade a proxy by upgrading its beacon",
      "duration": 1244,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: BeaconProxy upgrade 2 proxies by upgrading shared beacon",
      "title": "upgrade 2 proxies by upgrading shared beacon",
      "duration": 1527,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "bad beacon is not accepted non-contract beacon",
      "title": "non-contract beacon",
      "duration": 681,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "bad beacon is not accepted non-contract implementation",
      "title": "non-contract implementation",
      "duration": 781,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "initialization non-payable initialization",
      "title": "non-payable initialization",
      "duration": 405,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "initialization reverting initialization",
      "title": "reverting initialization",
      "duration": 400,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: UpgradeableBeacon cannot be created with non-contract implementation",
      "title": "cannot be created with non-contract implementation",
      "duration": 418,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed returns implementation",
      "title": "returns implementation",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed can be upgraded by the owner",
      "title": "can be upgraded by the owner",
      "duration": 829,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed cannot be upgraded to a non-contract",
      "title": "cannot be upgraded to a non-contract",
      "duration": 425,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed cannot be upgraded by other account",
      "title": "cannot be upgraded by other account",
      "duration": 825,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 802,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 35,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 36,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 889,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 47,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 44,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "cloneDeterministic address already used",
      "title": "address already used",
      "duration": 1399,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "cloneDeterministic address prediction",
      "title": "address prediction",
      "duration": 971,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 40,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 878,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 60,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance reverts",
      "title": "reverts",
      "duration": 823,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 43,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance has expected balance",
      "title": "has expected balance",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 9,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 5,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 37,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 4,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 14,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 42,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 3,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 5,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance initializes the proxy",
      "title": "initializes the proxy",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "reverting initialization reverts",
      "title": "reverts",
      "duration": 438,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ProxyAdmin has an owner",
      "title": "has an owner",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "#getProxyAdmin returns proxyAdmin as admin of the proxy",
      "title": "returns proxyAdmin as admin of the proxy",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "#changeProxyAdmin fails to change proxy admin if its not the proxy owner",
      "title": "fails to change proxy admin if its not the proxy owner",
      "duration": 419,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "#changeProxyAdmin changes proxy admin",
      "title": "changes proxy admin",
      "duration": 467,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "#getProxyImplementation returns proxy implementation address",
      "title": "returns proxy implementation address",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with unauthorized account fails to upgrade",
      "title": "fails to upgrade",
      "duration": 409,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with authorized account upgrades implementation",
      "title": "upgrades implementation",
      "duration": 392,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with unauthorized account fails to upgrade",
      "title": "fails to upgrade",
      "duration": 405,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with invalid callData fails to upgrade",
      "title": "fails to upgrade",
      "duration": 426,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with valid callData upgrades implementation",
      "title": "upgrades implementation",
      "duration": 394,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 5,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 14,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 14,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 5,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when not sending balance has expected balance",
      "title": "has expected balance",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sending some balance sets the implementation address",
      "title": "sets the implementation address",
      "duration": 6,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "reverting initialization reverts",
      "title": "reverts",
      "duration": 321,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "implementation returns the current implementation address",
      "title": "returns the current implementation address",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "implementation delegates to the implementation",
      "title": "delegates to the implementation",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given implementation is different from the current one upgrades to the requested implementation",
      "title": "upgrades to the requested implementation",
      "duration": 321,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given implementation is different from the current one emits an event",
      "title": "emits an event",
      "duration": 292,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given implementation is the zero address reverts",
      "title": "reverts",
      "duration": 293,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not the admin reverts",
      "title": "reverts",
      "duration": 295,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is the admin upgrades to the requested implementation",
      "title": "upgrades to the requested implementation",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is the admin emits an event",
      "title": "emits an event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is the admin sends given value to the proxy",
      "title": "sends given value to the proxy",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not the admin reverts",
      "title": "reverts",
      "duration": 437,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the call does fail reverts",
      "title": "reverts",
      "duration": 444,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when upgrading to V1 upgrades to the requested version and emits an event",
      "title": "upgrades to the requested version and emits an event",
      "duration": 43,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when upgrading to V2 upgrades to the requested version and emits an event",
      "title": "upgrades to the requested version and emits an event",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when upgrading to V3 upgrades to the requested version and emits an event",
      "title": "upgrades to the requested version and emits an event",
      "duration": 42,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not the admin reverts",
      "title": "reverts",
      "duration": 646,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is the admin assigns new proxy admin",
      "title": "assigns new proxy admin",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is the admin emits an event",
      "title": "emits an event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not the admin reverts",
      "title": "reverts",
      "duration": 308,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the new proposed admin is the zero address reverts",
      "title": "reverts",
      "duration": 307,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "storage should store the implementation address in specified location",
      "title": "should store the implementation address in specified location",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "storage should store the admin proxy in specified location",
      "title": "should store the admin proxy in specified location",
      "duration": 5,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when function names clash when sender is proxy admin should run the proxy function",
      "title": "when sender is proxy admin should run the proxy function",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when function names clash when sender is other should delegate to implementation",
      "title": "when sender is other should delegate to implementation",
      "duration": 10,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when unpaused can perform normal process in non-pause",
      "title": "can perform normal process in non-pause",
      "duration": 364,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when unpaused cannot take drastic measure in non-pause",
      "title": "cannot take drastic measure in non-pause",
      "duration": 420,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when paused emits a Paused event",
      "title": "emits a Paused event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when paused cannot perform normal process in pause",
      "title": "cannot perform normal process in pause",
      "duration": 419,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when paused can take a drastic measure in a pause",
      "title": "can take a drastic measure in a pause",
      "duration": 350,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when paused reverts when re-pausing",
      "title": "reverts when re-pausing",
      "duration": 366,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "unpausing is unpausable by the pauser",
      "title": "is unpausable by the pauser",
      "duration": 423,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when unpaused emits an Unpaused event",
      "title": "emits an Unpaused event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when unpaused should resume allowing normal process",
      "title": "should resume allowing normal process",
      "duration": 746,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when unpaused should prevent drastic measure",
      "title": "should prevent drastic measure",
      "duration": 473,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when unpaused reverts when re-unpausing",
      "title": "reverts when re-unpausing",
      "duration": 430,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ReentrancyGuard nonReentrant function can be called",
      "title": "nonReentrant function can be called",
      "duration": 405,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ReentrancyGuard does not allow remote callback",
      "title": "does not allow remote callback",
      "duration": 862,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ReentrancyGuard does not allow local recursion",
      "title": "does not allow local recursion",
      "duration": 401,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ReentrancyGuard does not allow indirect local recursion",
      "title": "does not allow indirect local recursion",
      "duration": 359,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when accounts don't own tokens returns zero for given addresses",
      "title": "returns zero for given addresses",
      "duration": 40,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when accounts own some tokens returns the amount of tokens owned by the given addresses",
      "title": "returns the amount of tokens owned by the given addresses",
      "duration": 67,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when accounts don't own tokens returns zeros for each account",
      "title": "returns zeros for each account",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when accounts own some tokens returns amounts owned by each account in order passed",
      "title": "returns amounts owned by each account in order passed",
      "duration": 39,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when accounts own some tokens returns multiple times the balance of the same address when asked",
      "title": "returns multiple times the balance of the same address when asked",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 92,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "supportsInterface(bytes4) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOf(address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOfBatch(address[],uint256[]) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isApprovedForAll(address,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256,uint256,bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_mint reverts with a zero destination address",
      "title": "reverts with a zero destination address",
      "duration": 405,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted tokens emits a TransferSingle event",
      "title": "emits a TransferSingle event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted tokens credits the minted amount of tokens",
      "title": "credits the minted amount of tokens",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_mintBatch reverts with a zero destination address",
      "title": "reverts with a zero destination address",
      "duration": 410,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_mintBatch reverts if length of inputs do not match",
      "title": "reverts if length of inputs do not match",
      "duration": 789,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted batch of tokens emits a TransferBatch event",
      "title": "emits a TransferBatch event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted batch of tokens credits the minted batch of tokens",
      "title": "credits the minted batch of tokens",
      "duration": 37,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burn reverts when burning the zero account's tokens",
      "title": "reverts when burning the zero account's tokens",
      "duration": 425,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burn reverts when burning a non-existent token id",
      "title": "reverts when burning a non-existent token id",
      "duration": 436,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burn reverts when burning more than available tokens",
      "title": "reverts when burning more than available tokens",
      "duration": 836,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted-then-burnt tokens emits a TransferSingle event",
      "title": "emits a TransferSingle event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted-then-burnt tokens accounts for both minting and burning",
      "title": "accounts for both minting and burning",
      "duration": 45,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burnBatch reverts when burning the zero account's tokens",
      "title": "reverts when burning the zero account's tokens",
      "duration": 423,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burnBatch reverts if length of inputs do not match",
      "title": "reverts if length of inputs do not match",
      "duration": 826,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burnBatch reverts when burning a non-existent token id",
      "title": "reverts when burning a non-existent token id",
      "duration": 410,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted-then-burnt tokens emits a TransferBatch event",
      "title": "emits a TransferBatch event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted-then-burnt tokens accounts for both minting and burning",
      "title": "accounts for both minting and burning",
      "duration": 39,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC1155MetadataURI emits no URI event in constructor",
      "title": "emits no URI event in constructor",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC1155MetadataURI sets the initial URI for all token types",
      "title": "sets the initial URI for all token types",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_setURI emits no URI event",
      "title": "emits no URI event",
      "duration": 374,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_setURI sets the new URI for all token types",
      "title": "sets the new URI for all token types",
      "duration": 431,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burn holder can burn their tokens",
      "title": "holder can burn their tokens",
      "duration": 525,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burn approved operators can burn the holder's tokens",
      "title": "approved operators can burn the holder's tokens",
      "duration": 1021,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burn unapproved accounts cannot burn the holder's tokens",
      "title": "unapproved accounts cannot burn the holder's tokens",
      "duration": 581,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burnBatch holder can burn their tokens",
      "title": "holder can burn their tokens",
      "duration": 520,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burnBatch approved operators can burn the holder's tokens",
      "title": "approved operators can burn the holder's tokens",
      "duration": 880,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burnBatch unapproved accounts cannot burn the holder's tokens",
      "title": "unapproved accounts cannot burn the holder's tokens",
      "duration": 641,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to safeTransferFrom from holder",
      "title": "reverts when trying to safeTransferFrom from holder",
      "duration": 421,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to safeTransferFrom from operator",
      "title": "reverts when trying to safeTransferFrom from operator",
      "duration": 470,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to safeBatchTransferFrom from holder",
      "title": "reverts when trying to safeBatchTransferFrom from holder",
      "duration": 425,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to safeBatchTransferFrom from operator",
      "title": "reverts when trying to safeBatchTransferFrom from operator",
      "duration": 466,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to mint",
      "title": "reverts when trying to mint",
      "duration": 389,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to mintBatch",
      "title": "reverts when trying to mintBatch",
      "duration": 434,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to burn",
      "title": "reverts when trying to burn",
      "duration": 420,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to burnBatch",
      "title": "reverts when trying to burnBatch",
      "duration": 406,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setApprovalForAll approves an operator",
      "title": "approves an operator",
      "duration": 436,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOf returns the amount of tokens owned by the given address",
      "title": "returns the amount of tokens owned by the given address",
      "duration": 34,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isApprovedForAll returns the approval of the operator",
      "title": "returns the approval of the operator",
      "duration": 34,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC1155PresetMinterPauser deployer has the default admin role",
      "title": "deployer has the default admin role",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC1155PresetMinterPauser deployer has the minter role",
      "title": "deployer has the minter role",
      "duration": 140,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC1155PresetMinterPauser deployer has the pauser role",
      "title": "deployer has the pauser role",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC1155PresetMinterPauser minter and pauser role admin is the default admin",
      "title": "minter and pauser role admin is the default admin",
      "duration": 153,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 104,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOf(address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOfBatch(address[],uint256[]) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isApprovedForAll(address,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256,uint256,bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "hasRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "grantRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "revokeRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renounceRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleMember(bytes32,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleMemberCount(bytes32) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "minting deployer can mint tokens",
      "title": "deployer can mint tokens",
      "duration": 405,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "minting other accounts cannot mint tokens",
      "title": "other accounts cannot mint tokens",
      "duration": 431,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "batched minting deployer can batch mint tokens",
      "title": "deployer can batch mint tokens",
      "duration": 436,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "batched minting other accounts cannot batch mint tokens",
      "title": "other accounts cannot batch mint tokens",
      "duration": 416,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing deployer can pause",
      "title": "deployer can pause",
      "duration": 421,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing deployer can unpause",
      "title": "deployer can unpause",
      "duration": 833,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing cannot mint while paused",
      "title": "cannot mint while paused",
      "duration": 837,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing other accounts cannot pause",
      "title": "other accounts cannot pause",
      "duration": 442,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing other accounts cannot unpause",
      "title": "other accounts cannot unpause",
      "duration": 844,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burning holders can burn their tokens",
      "title": "holders can burn their tokens",
      "duration": 785,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC1155Holder receives ERC1155 tokens from a single ID",
      "title": "receives ERC1155 tokens from a single ID",
      "duration": 410,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC1155Holder receives ERC1155 tokens from a multiple IDs",
      "title": "receives ERC1155 tokens from a multiple IDs",
      "duration": 470,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "supportsInterface(bytes4) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 8,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "onERC1155Received(address,address,uint256,uint256,bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20 has a name",
      "title": "has a name",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20 has a symbol",
      "title": "has a symbol",
      "duration": 9,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20 has 18 decimals",
      "title": "has 18 decimals",
      "duration": 9,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_setupDecimals can set decimals during construction",
      "title": "can set decimals during construction",
      "duration": 356,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "total supply returns the total amount of tokens",
      "title": "returns the total amount of tokens",
      "duration": 10,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the requested account has no tokens returns zero",
      "title": "returns zero",
      "duration": 34,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the requested account has some tokens returns the total amount of tokens",
      "title": "returns the total amount of tokens",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender does not have enough balance reverts",
      "title": "reverts",
      "duration": 292,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers all balance transfers the requested amount",
      "title": "transfers the requested amount",
      "duration": 314,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers all balance emits a transfer event",
      "title": "emits a transfer event",
      "duration": 295,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers zero tokens transfers the requested amount",
      "title": "transfers the requested amount",
      "duration": 330,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers zero tokens emits a transfer event",
      "title": "emits a transfer event",
      "duration": 295,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the recipient is the zero address reverts",
      "title": "reverts",
      "duration": 307,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner has enough balance transfers the requested amount",
      "title": "transfers the requested amount",
      "duration": 342,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner has enough balance decreases the spender allowance",
      "title": "decreases the spender allowance",
      "duration": 329,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner has enough balance emits a transfer event",
      "title": "emits a transfer event",
      "duration": 286,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner has enough balance emits an approval event",
      "title": "emits an approval event",
      "duration": 307,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner does not have enough balance reverts",
      "title": "reverts",
      "duration": 306,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner has enough balance reverts",
      "title": "reverts",
      "duration": 298,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner does not have enough balance reverts",
      "title": "reverts",
      "duration": 291,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the recipient is the zero address reverts",
      "title": "reverts",
      "duration": 409,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the token owner is the zero address reverts",
      "title": "reverts",
      "duration": 434,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender has enough balance emits an approval event",
      "title": "emits an approval event",
      "duration": 375,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before approves the requested amount",
      "title": "approves the requested amount",
      "duration": 422,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
      "title": "approves the requested amount and replaces the previous one",
      "duration": 418,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender does not have enough balance emits an approval event",
      "title": "emits an approval event",
      "duration": 374,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before approves the requested amount",
      "title": "approves the requested amount",
      "duration": 434,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
      "title": "approves the requested amount and replaces the previous one",
      "duration": 461,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender is the zero address reverts",
      "title": "reverts",
      "duration": 407,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before reverts",
      "title": "reverts",
      "duration": 407,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount emits an approval event",
      "title": "emits an approval event",
      "duration": 459,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount decreases the spender allowance subtracting the requested amount",
      "title": "decreases the spender allowance subtracting the requested amount",
      "duration": 448,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount sets the allowance to zero when all allowance is removed",
      "title": "sets the allowance to zero when all allowance is removed",
      "duration": 470,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount reverts when more than the full allowance is removed",
      "title": "reverts when more than the full allowance is removed",
      "duration": 435,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before reverts",
      "title": "reverts",
      "duration": 443,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount emits an approval event",
      "title": "emits an approval event",
      "duration": 413,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount decreases the spender allowance subtracting the requested amount",
      "title": "decreases the spender allowance subtracting the requested amount",
      "duration": 424,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount sets the allowance to zero when all allowance is removed",
      "title": "sets the allowance to zero when all allowance is removed",
      "duration": 451,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount reverts when more than the full allowance is removed",
      "title": "reverts when more than the full allowance is removed",
      "duration": 443,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender is the zero address reverts",
      "title": "reverts",
      "duration": 431,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender has enough balance emits an approval event",
      "title": "emits an approval event",
      "duration": 396,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before approves the requested amount",
      "title": "approves the requested amount",
      "duration": 432,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount increases the spender allowance adding the requested amount",
      "title": "increases the spender allowance adding the requested amount",
      "duration": 435,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender does not have enough balance emits an approval event",
      "title": "emits an approval event",
      "duration": 423,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before approves the requested amount",
      "title": "approves the requested amount",
      "duration": 465,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount increases the spender allowance adding the requested amount",
      "title": "increases the spender allowance adding the requested amount",
      "duration": 445,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender is the zero address reverts",
      "title": "reverts",
      "duration": 411,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_mint rejects a null account",
      "title": "rejects a null account",
      "duration": 409,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non zero account increments totalSupply",
      "title": "increments totalSupply",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non zero account increments recipient balance",
      "title": "increments recipient balance",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non zero account emits Transfer event",
      "title": "emits Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burn rejects a null account",
      "title": "rejects a null account",
      "duration": 408,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non zero account rejects burning more than balance",
      "title": "rejects burning more than balance",
      "duration": 424,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for entire balance decrements totalSupply",
      "title": "decrements totalSupply",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for entire balance decrements initialHolder balance",
      "title": "decrements initialHolder balance",
      "duration": 35,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for entire balance emits Transfer event",
      "title": "emits Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for less amount than balance decrements totalSupply",
      "title": "decrements totalSupply",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for less amount than balance decrements initialHolder balance",
      "title": "decrements initialHolder balance",
      "duration": 33,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for less amount than balance emits Transfer event",
      "title": "emits Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender does not have enough balance reverts",
      "title": "reverts",
      "duration": 412,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers all balance transfers the requested amount",
      "title": "transfers the requested amount",
      "duration": 434,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers all balance emits a transfer event",
      "title": "emits a transfer event",
      "duration": 414,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers zero tokens transfers the requested amount",
      "title": "transfers the requested amount",
      "duration": 446,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender transfers zero tokens emits a transfer event",
      "title": "emits a transfer event",
      "duration": 419,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the recipient is the zero address reverts",
      "title": "reverts",
      "duration": 471,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is the zero address reverts",
      "title": "reverts",
      "duration": 435,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender has enough balance emits an approval event",
      "title": "emits an approval event",
      "duration": 389,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before approves the requested amount",
      "title": "approves the requested amount",
      "duration": 453,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
      "title": "approves the requested amount and replaces the previous one",
      "duration": 429,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender does not have enough balance emits an approval event",
      "title": "emits an approval event",
      "duration": 401,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no approved amount before approves the requested amount",
      "title": "approves the requested amount",
      "duration": 442,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender had an approved amount approves the requested amount and replaces the previous one",
      "title": "approves the requested amount and replaces the previous one",
      "duration": 452,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the spender is the zero address reverts",
      "title": "reverts",
      "duration": 428,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the owner is the zero address reverts",
      "title": "reverts",
      "duration": 414,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20Permit initial nonce is 0",
      "title": "initial nonce is 0",
      "duration": 12,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20Permit domain separator",
      "title": "domain separator",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "permit accepts owner signature",
      "title": "accepts owner signature",
      "duration": 414,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "permit rejects reused signature",
      "title": "rejects reused signature",
      "duration": 785,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "permit rejects other signature",
      "title": "rejects other signature",
      "duration": 430,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "permit rejects expired permit",
      "title": "rejects expired permit",
      "duration": 458,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a zero amount burns the requested amount",
      "title": "burns the requested amount",
      "duration": 14,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a zero amount emits a transfer event",
      "title": "emits a transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non-zero amount burns the requested amount",
      "title": "burns the requested amount",
      "duration": 35,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non-zero amount emits a transfer event",
      "title": "emits a transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given amount is greater than the balance of the sender reverts",
      "title": "reverts",
      "duration": 398,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a zero amount burns the requested amount",
      "title": "burns the requested amount",
      "duration": 61,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a zero amount decrements allowance",
      "title": "decrements allowance",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a zero amount emits a transfer event",
      "title": "emits a transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non-zero amount burns the requested amount",
      "title": "burns the requested amount",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non-zero amount decrements allowance",
      "title": "decrements allowance",
      "duration": 52,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "for a non-zero amount emits a transfer event",
      "title": "emits a transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given amount is greater than the balance of the sender reverts",
      "title": "reverts",
      "duration": 849,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given amount is greater than the allowance reverts",
      "title": "reverts",
      "duration": 852,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20Capped requires a non-zero cap",
      "title": "requires a non-zero cap",
      "duration": 467,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "capped token starts with the correct cap",
      "title": "starts with the correct cap",
      "duration": 13,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "capped token mints when amount is less than cap",
      "title": "mints when amount is less than cap",
      "duration": 417,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "capped token fails to mint if the amount exceeds the cap",
      "title": "fails to mint if the amount exceeds the cap",
      "duration": 774,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "capped token fails to mint after cap is reached",
      "title": "fails to mint after cap is reached",
      "duration": 837,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer allows to transfer when unpaused",
      "title": "allows to transfer when unpaused",
      "duration": 394,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer allows to transfer when paused and then unpaused",
      "title": "allows to transfer when paused and then unpaused",
      "duration": 1325,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer reverts when trying to transfer when paused",
      "title": "reverts when trying to transfer when paused",
      "duration": 811,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer from allows to transfer from when unpaused",
      "title": "allows to transfer from when unpaused",
      "duration": 619,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer from allows to transfer when paused and then unpaused",
      "title": "allows to transfer when paused and then unpaused",
      "duration": 1479,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transfer from reverts when trying to transfer from when paused",
      "title": "reverts when trying to transfer from when paused",
      "duration": 1019,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mint allows to mint when unpaused",
      "title": "allows to mint when unpaused",
      "duration": 459,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mint allows to mint when paused and then unpaused",
      "title": "allows to mint when paused and then unpaused",
      "duration": 1258,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mint reverts when trying to mint when paused",
      "title": "reverts when trying to mint when paused",
      "duration": 895,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burn allows to burn when unpaused",
      "title": "allows to burn when unpaused",
      "duration": 506,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burn allows to burn when paused and then unpaused",
      "title": "allows to burn when paused and then unpaused",
      "duration": 1279,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burn reverts when trying to burn when paused",
      "title": "reverts when trying to burn when paused",
      "duration": 851,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "snapshot emits a snapshot event",
      "title": "emits a snapshot event",
      "duration": 382,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "snapshot creates increasing snapshots ids, starting from 1",
      "title": "creates increasing snapshots ids, starting from 1",
      "duration": 2195,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with no supply changes after the snapshot returns the current total supply",
      "title": "returns the current total supply",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with supply changes after the snapshot returns the total supply before the changes",
      "title": "returns the total supply before the changes",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with a second snapshot after supply changes snapshots return the supply before and after the changes",
      "title": "snapshots return the supply before and after the changes",
      "duration": 56,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with multiple snapshots after supply changes all posterior snapshots return the supply after the changes",
      "title": "all posterior snapshots return the supply after the changes",
      "duration": 102,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with no balance changes after the snapshot returns the current balance for all accounts",
      "title": "returns the current balance for all accounts",
      "duration": 62,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with balance changes after the snapshot returns the balances before the changes",
      "title": "returns the balances before the changes",
      "duration": 55,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with a second snapshot after supply changes snapshots return the balances before and after the changes",
      "title": "snapshots return the balances before and after the changes",
      "duration": 148,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with multiple snapshots after supply changes all posterior snapshots return the supply after the changes",
      "title": "all posterior snapshots return the supply after the changes",
      "duration": 312,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20PresetFixedSupply deployer has the balance equal to initial supply",
      "title": "deployer has the balance equal to initial supply",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20PresetFixedSupply total supply is equal to initial supply",
      "title": "total supply is equal to initial supply",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burning holders can burn their tokens",
      "title": "holders can burn their tokens",
      "duration": 486,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burning decrements totalSupply",
      "title": "decrements totalSupply",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20PresetMinterPauser deployer has the default admin role",
      "title": "deployer has the default admin role",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20PresetMinterPauser deployer has the minter role",
      "title": "deployer has the minter role",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20PresetMinterPauser deployer has the pauser role",
      "title": "deployer has the pauser role",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC20PresetMinterPauser minter and pauser role admin is the default admin",
      "title": "minter and pauser role admin is the default admin",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "minting deployer can mint tokens",
      "title": "deployer can mint tokens",
      "duration": 486,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "minting other accounts cannot mint tokens",
      "title": "other accounts cannot mint tokens",
      "duration": 511,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing deployer can pause",
      "title": "deployer can pause",
      "duration": 413,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing deployer can unpause",
      "title": "deployer can unpause",
      "duration": 923,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing cannot mint while paused",
      "title": "cannot mint while paused",
      "duration": 937,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing other accounts cannot pause",
      "title": "other accounts cannot pause",
      "duration": 869,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing other accounts cannot unpause",
      "title": "other accounts cannot unpause",
      "duration": 941,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burning holders can burn their tokens",
      "title": "holders can burn their tokens",
      "duration": 894,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with address that has no contract code reverts on transfer",
      "title": "reverts on transfer",
      "duration": 416,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with address that has no contract code reverts on transferFrom",
      "title": "reverts on transferFrom",
      "duration": 466,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with address that has no contract code reverts on approve",
      "title": "reverts on approve",
      "duration": 443,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with address that has no contract code reverts on increaseAllowance",
      "title": "reverts on increaseAllowance",
      "duration": 446,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with address that has no contract code reverts on decreaseAllowance",
      "title": "reverts on decreaseAllowance",
      "duration": 435,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns false on all calls reverts on transfer",
      "title": "reverts on transfer",
      "duration": 451,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns false on all calls reverts on transferFrom",
      "title": "reverts on transferFrom",
      "duration": 423,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns false on all calls reverts on approve",
      "title": "reverts on approve",
      "duration": 416,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns false on all calls reverts on increaseAllowance",
      "title": "reverts on increaseAllowance",
      "duration": 510,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns false on all calls reverts on decreaseAllowance",
      "title": "reverts on decreaseAllowance",
      "duration": 486,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns true on all calls doesn't revert on transfer",
      "title": "doesn't revert on transfer",
      "duration": 446,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns true on all calls doesn't revert on transferFrom",
      "title": "doesn't revert on transferFrom",
      "duration": 419,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance doesn't revert when approving a non-zero allowance",
      "title": "doesn't revert when approving a non-zero allowance",
      "duration": 441,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance doesn't revert when approving a zero allowance",
      "title": "doesn't revert when approving a zero allowance",
      "duration": 435,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance doesn't revert when increasing the allowance",
      "title": "doesn't revert when increasing the allowance",
      "duration": 440,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance reverts when decreasing the allowance",
      "title": "reverts when decreasing the allowance",
      "duration": 533,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance reverts when approving a non-zero allowance",
      "title": "reverts when approving a non-zero allowance",
      "duration": 453,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance doesn't revert when approving a zero allowance",
      "title": "doesn't revert when approving a zero allowance",
      "duration": 444,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance doesn't revert when increasing the allowance",
      "title": "doesn't revert when increasing the allowance",
      "duration": 449,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance doesn't revert when decreasing the allowance to a positive value",
      "title": "doesn't revert when decreasing the allowance to a positive value",
      "duration": 476,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance reverts when decreasing the allowance to a negative value",
      "title": "reverts when decreasing the allowance to a negative value",
      "duration": 513,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns no boolean values doesn't revert on transfer",
      "title": "doesn't revert on transfer",
      "duration": 487,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token that returns no boolean values doesn't revert on transferFrom",
      "title": "doesn't revert on transferFrom",
      "duration": 484,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance doesn't revert when approving a non-zero allowance",
      "title": "doesn't revert when approving a non-zero allowance",
      "duration": 529,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance doesn't revert when approving a zero allowance",
      "title": "doesn't revert when approving a zero allowance",
      "duration": 474,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance doesn't revert when increasing the allowance",
      "title": "doesn't revert when increasing the allowance",
      "duration": 492,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero allowance reverts when decreasing the allowance",
      "title": "reverts when decreasing the allowance",
      "duration": 444,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance reverts when approving a non-zero allowance",
      "title": "reverts when approving a non-zero allowance",
      "duration": 458,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance doesn't revert when approving a zero allowance",
      "title": "doesn't revert when approving a zero allowance",
      "duration": 434,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance doesn't revert when increasing the allowance",
      "title": "doesn't revert when increasing the allowance",
      "duration": 412,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance doesn't revert when decreasing the allowance to a positive value",
      "title": "doesn't revert when decreasing the allowance to a positive value",
      "duration": 416,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero allowance reverts when decreasing the allowance to a negative value",
      "title": "reverts when decreasing the allowance to a negative value",
      "duration": 463,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with token rejects a release time in the past",
      "title": "rejects a release time in the past",
      "duration": 418,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed can get state",
      "title": "can get state",
      "duration": 42,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed cannot be released before time limit",
      "title": "cannot be released before time limit",
      "duration": 484,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed cannot be released just before time limit",
      "title": "cannot be released just before time limit",
      "duration": 465,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 10,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 45,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "supportsInterface(bytes4) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 10,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 11,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOf(address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ownerOf(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "approve(address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getApproved(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isApprovedForAll(address,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transferFrom(address,address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256,bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given address owns some tokens returns the amount of tokens owned by the given address",
      "title": "returns the amount of tokens owned by the given address",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given address does not own any tokens returns 0",
      "title": "returns 0",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID was tracked by this token returns the owner of the given token ID",
      "title": "returns the owner of the given token ID",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 54,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 39,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 49,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 187,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 58,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 108,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 43,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 445,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 178,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 36,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 168,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 46,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 905,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1205,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 713,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 736,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 60,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 156,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 123,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 88,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 269,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 37,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 259,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 282,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 164,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 74,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 138,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 89,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 100,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 821,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1203,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 961,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 839,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received",
      "title": "calls onERC721Received",
      "duration": 919,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
      "title": "calls onERC721Received from approved",
      "duration": 1026,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 48,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 76,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 141,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 112,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 109,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 71,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 286,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 298,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 44,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 122,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 323,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 85,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 228,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 304,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 884,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1147,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 789,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 868,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with an invalid token id reverts",
      "title": "reverts",
      "duration": 897,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 122,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 54,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 47,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 52,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 35,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 183,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 143,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 178,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 77,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 74,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 77,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 78,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 1017,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1171,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 790,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 738,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received",
      "title": "calls onERC721Received",
      "duration": 903,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
      "title": "calls onERC721Received from approved",
      "duration": 757,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 75,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 93,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 59,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 48,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 82,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 81,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 97,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 65,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 198,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 67,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 86,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 86,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 902,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1091,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 904,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 746,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with an invalid token id reverts",
      "title": "reverts",
      "duration": 780,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract returning unexpected value reverts",
      "title": "reverts",
      "duration": 1676,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts with message reverts",
      "title": "reverts",
      "duration": 1647,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts without message reverts",
      "title": "reverts",
      "duration": 1718,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that panics reverts",
      "title": "reverts",
      "duration": 1818,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a contract that does not implement the required function reverts",
      "title": "reverts",
      "duration": 892,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "via safeMint calls onERC721Received — with data",
      "title": "calls onERC721Received — with data",
      "duration": 1670,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "via safeMint calls onERC721Received — without data",
      "title": "calls onERC721Received — without data",
      "duration": 1551,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract returning unexpected value reverts",
      "title": "reverts",
      "duration": 1753,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts with message reverts",
      "title": "reverts",
      "duration": 1552,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts without message reverts",
      "title": "reverts",
      "duration": 1766,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that panics reverts",
      "title": "reverts",
      "duration": 1564,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a contract that does not implement the required function reverts",
      "title": "reverts",
      "duration": 851,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval clears approval for the token",
      "title": "clears approval for the token",
      "duration": 76,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval clears approval for the token",
      "title": "clears approval for the token",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 98,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to the same address sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to the same address emits an approval event",
      "title": "emits an approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to a different address sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 37,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to a different address emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address that receives the approval is the owner reverts",
      "title": "reverts",
      "duration": 810,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender does not own the given token ID reverts",
      "title": "reverts",
      "duration": 1359,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is approved for the given token ID reverts",
      "title": "reverts",
      "duration": 1571,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is an operator sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 237,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is an operator emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 1356,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there is no operator approval set by the sender approves the operator",
      "title": "approves the operator",
      "duration": 789,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there is no operator approval set by the sender emits an approval event",
      "title": "emits an approval event",
      "duration": 806,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was set as not approved approves the operator",
      "title": "approves the operator",
      "duration": 883,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was set as not approved emits an approval event",
      "title": "emits an approval event",
      "duration": 721,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was set as not approved can unset the operator approval",
      "title": "can unset the operator approval",
      "duration": 870,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was already approved keeps the approval to the given address",
      "title": "keeps the approval to the given address",
      "duration": 783,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was already approved emits an approval event",
      "title": "emits an approval event",
      "duration": 753,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator is the owner reverts",
      "title": "reverts",
      "duration": 897,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token has been minted  should return the zero address",
      "title": "should return the zero address",
      "duration": 44,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when account has been approved returns approved account",
      "title": "returns approved account",
      "duration": 36,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_mint(address, uint256) reverts with a null destination address",
      "title": "reverts with a null destination address",
      "duration": 765,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token creates the token",
      "title": "creates the token",
      "duration": 146,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token reverts when adding a token id that already exists",
      "title": "reverts when adding a token id that already exists",
      "duration": 832,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burn reverts when burning a non-existent token id",
      "title": "reverts when burning a non-existent token id",
      "duration": 941,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token reverts when burning a token id that has been deleted",
      "title": "reverts when burning a token id that has been deleted",
      "duration": 869,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 73,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "name() has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "symbol() has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenURI(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "metadata has a name",
      "title": "has a name",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "metadata has a symbol",
      "title": "has a symbol",
      "duration": 33,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI return empty string by default",
      "title": "return empty string by default",
      "duration": 65,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 14,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "supportsInterface(bytes4) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOf(address) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ownerOf(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "approve(address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getApproved(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isApprovedForAll(address,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transferFrom(address,address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256,bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given address owns some tokens returns the amount of tokens owned by the given address",
      "title": "returns the amount of tokens owned by the given address",
      "duration": 77,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given address does not own any tokens returns 0",
      "title": "returns 0",
      "duration": 56,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID was tracked by this token returns the owner of the given token ID",
      "title": "returns the owner of the given token ID",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 88,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 133,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 183,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 34,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 106,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 108,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 61,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 40,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 46,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 75,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 71,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 33,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 99,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 91,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 60,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 63,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 171,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 150,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 808,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1268,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 910,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 908,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 73,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 164,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 98,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 81,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 133,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 104,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 87,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 97,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 108,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 116,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 101,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 41,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 60,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 70,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 69,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 82,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 29,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 29,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 909,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1475,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 792,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 885,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received",
      "title": "calls onERC721Received",
      "duration": 727,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
      "title": "calls onERC721Received from approved",
      "duration": 1207,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 40,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 36,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 41,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 74,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 45,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 130,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 56,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 85,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 91,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 2,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 45,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 120,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 36,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 47,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 39,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 165,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 155,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 67,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 71,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 57,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 896,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1298,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 770,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 913,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with an invalid token id reverts",
      "title": "reverts",
      "duration": 806,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 42,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 42,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 178,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 247,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 94,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 164,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 43,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 72,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 167,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 187,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 122,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 123,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 97,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 216,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 138,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 59,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 121,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 776,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1249,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 819,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 926,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received",
      "title": "calls onERC721Received",
      "duration": 794,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a valid receiver contract calls onERC721Received from approved",
      "title": "calls onERC721Received from approved",
      "duration": 1228,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 60,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 52,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 144,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 102,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 311,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 127,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the approved individual adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 61,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 40,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 191,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 68,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the operator adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 91,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user transfers the ownership of the given token ID to the given address",
      "title": "transfers the ownership of the given token ID to the given address",
      "duration": 54,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 102,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user emits an Approval event",
      "title": "emits an Approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners balances",
      "title": "adjusts owners balances",
      "duration": 81,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when called by the owner without an approved user adjusts owners tokens by index",
      "title": "adjusts owners tokens by index",
      "duration": 110,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps ownership of the token",
      "title": "keeps ownership of the token",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner clears the approval for the token ID",
      "title": "clears the approval for the token ID",
      "duration": 110,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner emits only a transfer event",
      "title": "emits only a transfer event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps the owner balance",
      "title": "keeps the owner balance",
      "duration": 84,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sent to the owner keeps same tokens by index",
      "title": "keeps same tokens by index",
      "duration": 122,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address of the previous owner is incorrect reverts",
      "title": "reverts",
      "duration": 901,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is not authorized for the token id reverts",
      "title": "reverts",
      "duration": 1329,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 917,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address to transfer the token to is the zero address reverts",
      "title": "reverts",
      "duration": 786,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with an invalid token id reverts",
      "title": "reverts",
      "duration": 769,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract returning unexpected value reverts",
      "title": "reverts",
      "duration": 1882,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts with message reverts",
      "title": "reverts",
      "duration": 1764,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts without message reverts",
      "title": "reverts",
      "duration": 1680,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that panics reverts",
      "title": "reverts",
      "duration": 1826,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a contract that does not implement the required function reverts",
      "title": "reverts",
      "duration": 915,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "via safeMint calls onERC721Received — with data",
      "title": "calls onERC721Received — with data",
      "duration": 1804,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "via safeMint calls onERC721Received — without data",
      "title": "calls onERC721Received — without data",
      "duration": 1799,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract returning unexpected value reverts",
      "title": "reverts",
      "duration": 1744,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts with message reverts",
      "title": "reverts",
      "duration": 1686,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that reverts without message reverts",
      "title": "reverts",
      "duration": 1794,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a receiver contract that panics reverts",
      "title": "reverts",
      "duration": 1667,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "to a contract that does not implement the required function reverts",
      "title": "reverts",
      "duration": 893,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval clears approval for the token",
      "title": "clears approval for the token",
      "duration": 54,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval clears approval for the token",
      "title": "clears approval for the token",
      "duration": 89,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was no prior approval emits an approval event",
      "title": "emits an approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to the same address sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 69,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to the same address emits an approval event",
      "title": "emits an approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to a different address sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 89,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there was a prior approval to a different address emits an approval event",
      "title": "emits an approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the address that receives the approval is the owner reverts",
      "title": "reverts",
      "duration": 834,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender does not own the given token ID reverts",
      "title": "reverts",
      "duration": 1195,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is approved for the given token ID reverts",
      "title": "reverts",
      "duration": 2020,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is an operator sets the approval for the target address",
      "title": "sets the approval for the target address",
      "duration": 44,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the sender is an operator emits an approval event",
      "title": "emits an approval event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID does not exist reverts",
      "title": "reverts",
      "duration": 1229,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there is no operator approval set by the sender approves the operator",
      "title": "approves the operator",
      "duration": 948,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when there is no operator approval set by the sender emits an approval event",
      "title": "emits an approval event",
      "duration": 867,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was set as not approved approves the operator",
      "title": "approves the operator",
      "duration": 991,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was set as not approved emits an approval event",
      "title": "emits an approval event",
      "duration": 877,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was set as not approved can unset the operator approval",
      "title": "can unset the operator approval",
      "duration": 1029,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was already approved keeps the approval to the given address",
      "title": "keeps the approval to the given address",
      "duration": 1243,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator was already approved emits an approval event",
      "title": "emits an approval event",
      "duration": 971,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the operator is the owner reverts",
      "title": "reverts",
      "duration": 1001,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token has been minted  should return the zero address",
      "title": "should return the zero address",
      "duration": 125,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when account has been approved returns approved account",
      "title": "returns approved account",
      "duration": 51,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_mint(address, uint256) reverts with a null destination address",
      "title": "reverts with a null destination address",
      "duration": 809,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token creates the token",
      "title": "creates the token",
      "duration": 50,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token reverts when adding a token id that already exists",
      "title": "reverts when adding a token id that already exists",
      "duration": 969,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burn reverts when burning a non-existent token id",
      "title": "reverts when burning a non-existent token id",
      "duration": 947,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token emits a Transfer event",
      "title": "emits a Transfer event",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token emits an Approval event",
      "title": "emits an Approval event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token reverts when burning a token id that has been deleted",
      "title": "reverts when burning a token id that has been deleted",
      "duration": 870,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "name() has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "symbol() has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenURI(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "metadata has a name",
      "title": "has a name",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "metadata has a symbol",
      "title": "has a symbol",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI return empty string by default",
      "title": "return empty string by default",
      "duration": 46,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "base URI base URI can be set",
      "title": "base URI can be set",
      "duration": 1036,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "base URI base URI is added as a prefix to the token URI",
      "title": "base URI is added as a prefix to the token URI",
      "duration": 914,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "base URI token URI can be changed by changing the base URI",
      "title": "token URI can be changed by changing the base URI",
      "duration": 1739,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "totalSupply() has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenOfOwnerByIndex(address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenByIndex(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "totalSupply returns total token supply",
      "title": "returns total token supply",
      "duration": 130,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given index is lower than the amount of tokens owned by the given address returns the token ID placed at the given index",
      "title": "returns the token ID placed at the given index",
      "duration": 133,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "after transferring all tokens to another user returns correct token IDs for target",
      "title": "returns correct token IDs for target",
      "duration": 110,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenByIndex returns all tokens",
      "title": "returns all tokens",
      "duration": 82,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenByIndex returns all tokens after burning token 5042 and minting new tokens",
      "title": "returns all tokens after burning token 5042 and minting new tokens",
      "duration": 2666,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenByIndex returns all tokens after burning token 79217 and minting new tokens",
      "title": "returns all tokens after burning token 79217 and minting new tokens",
      "duration": 2727,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_mint(address, uint256) reverts with a null destination address",
      "title": "reverts with a null destination address",
      "duration": 811,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token adjusts owner tokens by index",
      "title": "adjusts owner tokens by index",
      "duration": 40,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with minted token adjusts all tokens list",
      "title": "adjusts all tokens list",
      "duration": 106,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "_burn reverts when burning a non-existent token id",
      "title": "reverts when burning a non-existent token id",
      "duration": 828,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token removes that token from the token list of the owner",
      "title": "removes that token from the token list of the owner",
      "duration": 66,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with burnt token adjusts all tokens list",
      "title": "adjusts all tokens list",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when successful emits a burn event",
      "title": "emits a burn event",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when the given token ID was not tracked by this contract reverts",
      "title": "reverts",
      "duration": 918,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to transferFrom",
      "title": "reverts when trying to transferFrom",
      "duration": 795,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to safeTransferFrom",
      "title": "reverts when trying to safeTransferFrom",
      "duration": 927,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to safeTransferFrom with data",
      "title": "reverts when trying to safeTransferFrom with data",
      "duration": 815,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to mint",
      "title": "reverts when trying to mint",
      "duration": 858,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when token is paused reverts when trying to burn",
      "title": "reverts when trying to burn",
      "duration": 864,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getApproved returns approved address",
      "title": "returns approved address",
      "duration": 29,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOf returns the amount of tokens owned by the given address",
      "title": "returns the amount of tokens owned by the given address",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ownerOf returns the amount of tokens owned by the given address",
      "title": "returns the amount of tokens owned by the given address",
      "duration": 40,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "exists returns token existence",
      "title": "returns token existence",
      "duration": 43,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isApprovedForAll returns the approval of the operator",
      "title": "returns the approval of the operator",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI it is empty by default",
      "title": "it is empty by default",
      "duration": 74,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI can be set for a token id",
      "title": "can be set for a token id",
      "duration": 1162,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI reverts when setting for non existent token id",
      "title": "reverts when setting for non existent token id",
      "duration": 1046,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI base URI can be set",
      "title": "base URI can be set",
      "duration": 959,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI base URI is added as a prefix to the token URI",
      "title": "base URI is added as a prefix to the token URI",
      "duration": 1900,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI token URI can be changed by changing the base URI",
      "title": "token URI can be changed by changing the base URI",
      "duration": 2863,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "token URI tokenId is appended to base URI for tokens with no URI",
      "title": "tokenId is appended to base URI for tokens with no URI",
      "duration": 1054,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC721PresetMinterPauserAutoId token has correct name",
      "title": "token has correct name",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC721PresetMinterPauserAutoId token has correct symbol",
      "title": "token has correct symbol",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC721PresetMinterPauserAutoId deployer has the default admin role",
      "title": "deployer has the default admin role",
      "duration": 39,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC721PresetMinterPauserAutoId deployer has the minter role",
      "title": "deployer has the minter role",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC721PresetMinterPauserAutoId minter role admin is the default admin",
      "title": "minter role admin is the default admin",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "balanceOf(address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ownerOf(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "approve(address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getApproved(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "setApprovalForAll(address,bool) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isApprovedForAll(address,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "transferFrom(address,address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "safeTransferFrom(address,address,uint256,bytes) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "totalSupply() has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenOfOwnerByIndex(address,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tokenByIndex(uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 29,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "hasRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleAdmin(bytes32) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "grantRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "revokeRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "renounceRole(bytes32,address) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleMember(bytes32,uint256) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "getRoleMemberCount(bytes32) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "minting deployer can mint tokens",
      "title": "deployer can mint tokens",
      "duration": 981,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "minting other accounts cannot mint tokens",
      "title": "other accounts cannot mint tokens",
      "duration": 856,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing deployer can pause",
      "title": "deployer can pause",
      "duration": 816,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing deployer can unpause",
      "title": "deployer can unpause",
      "duration": 1847,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing cannot mint while paused",
      "title": "cannot mint while paused",
      "duration": 1766,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing other accounts cannot pause",
      "title": "other accounts cannot pause",
      "duration": 853,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "pausing other accounts cannot unpause",
      "title": "other accounts cannot unpause",
      "duration": 1755,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "burning holders can burn their tokens",
      "title": "holders can burn their tokens",
      "duration": 1693,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC721Holder receives an ERC721 token",
      "title": "receives an ERC721 token",
      "duration": 3685,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isContract returns false for account address",
      "title": "returns false for account address",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "isContract returns true for contract address",
      "title": "returns true for contract address",
      "duration": 934,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sender contract has no funds sends 0 wei",
      "title": "sends 0 wei",
      "duration": 789,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "when sender contract has no funds reverts when sending non-zero amounts",
      "title": "reverts when sending non-zero amounts",
      "duration": 846,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with valid contract receiver calls the requested function",
      "title": "calls the requested function",
      "duration": 775,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with valid contract receiver reverts when the called function reverts with no reason",
      "title": "reverts when the called function reverts with no reason",
      "duration": 785,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with valid contract receiver reverts when the called function reverts, bubbling up the revert reason",
      "title": "reverts when the called function reverts, bubbling up the revert reason",
      "duration": 922,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with valid contract receiver reverts when the called function runs out of gas",
      "title": "reverts when the called function runs out of gas",
      "duration": 752,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with valid contract receiver reverts when the called function throws",
      "title": "reverts when the called function throws",
      "duration": 951,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with valid contract receiver reverts when function does not exist",
      "title": "reverts when function does not exist",
      "duration": 1059,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-contract receiver reverts when address is not a contract",
      "title": "reverts when address is not a contract",
      "duration": 879,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with zero value calls the requested function",
      "title": "calls the requested function",
      "duration": 861,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with non-zero value reverts if insufficient sender balance",
      "title": "reverts if insufficient sender balance",
      "duration": 941,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "functionStaticCall calls the requested function",
      "title": "calls the requested function",
      "duration": 815,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "functionStaticCall reverts on a non-static function",
      "title": "reverts on a non-static function",
      "duration": 900,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "functionStaticCall bubbles up revert reason",
      "title": "bubbles up revert reason",
      "duration": 878,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "functionStaticCall reverts when address is not a contract",
      "title": "reverts when address is not a contract",
      "duration": 842,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "functionDelegateCall delegate calls the requested function",
      "title": "delegate calls the requested function",
      "duration": 932,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "functionDelegateCall bubbles up revert reason",
      "title": "bubbles up revert reason",
      "duration": 929,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "functionDelegateCall reverts when address is not a contract",
      "title": "reverts when address is not a contract",
      "duration": 875,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Even number of elements returns correct index for the basic case",
      "title": "returns correct index for the basic case",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Even number of elements returns 0 for the first element",
      "title": "returns 0 for the first element",
      "duration": 191,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Even number of elements returns index of the last element",
      "title": "returns index of the last element",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Even number of elements returns first index after last element if searched value is over the upper boundary",
      "title": "returns first index after last element if searched value is over the upper boundary",
      "duration": 244,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Even number of elements returns 0 for the element under the lower boundary",
      "title": "returns 0 for the element under the lower boundary",
      "duration": 92,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Odd number of elements returns correct index for the basic case",
      "title": "returns correct index for the basic case",
      "duration": 128,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Odd number of elements returns 0 for the first element",
      "title": "returns 0 for the first element",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Odd number of elements returns index of the last element",
      "title": "returns index of the last element",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Odd number of elements returns first index after last element if searched value is over the upper boundary",
      "title": "returns first index after last element if searched value is over the upper boundary",
      "duration": 91,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Odd number of elements returns 0 for the element under the lower boundary",
      "title": "returns 0 for the element under the lower boundary",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Array with gap returns index of first element in next filled range",
      "title": "returns index of first element in next filled range",
      "duration": 24,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Empty array always returns 0 for empty array",
      "title": "always returns 0 for empty array",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgSender returns the transaction sender when called from an EOA",
      "title": "returns the transaction sender when called from an EOA",
      "duration": 768,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgSender returns the transaction sender when from another contract",
      "title": "returns the transaction sender when from another contract",
      "duration": 986,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgData returns the transaction data when called from an EOA",
      "title": "returns the transaction data when called from an EOA",
      "duration": 811,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "msgData returns the transaction sender when from another contract",
      "title": "returns the transaction sender when from another contract",
      "duration": 1098,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: Counters starts at zero",
      "title": "starts at zero",
      "duration": 34,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "starting from 0 increments the current value by one",
      "title": "increments the current value by one",
      "duration": 1086,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "starting from 0 can be called multiple times",
      "title": "can be called multiple times",
      "duration": 2594,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "starting from 1 decrements the current value by one",
      "title": "decrements the current value by one",
      "duration": 1106,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "starting from 1 reverts if the current value is 0",
      "title": "reverts if the current value is 0",
      "duration": 1860,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "after incremented to 3 can be called multiple times",
      "title": "can be called multiple times",
      "duration": 4505,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "computeAddress computes the correct contract address",
      "title": "computes the correct contract address",
      "duration": 168,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "computeAddress computes the correct contract address with deployer",
      "title": "computes the correct contract address with deployer",
      "duration": 145,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deploy deploys a ERC1820Implementer from inline assembly code",
      "title": "deploys a ERC1820Implementer from inline assembly code",
      "duration": 794,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deploy deploys a ERC20Mock with correct balances",
      "title": "deploys a ERC20Mock with correct balances",
      "duration": 975,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deploy fails deploying a contract in an existent address",
      "title": "fails deploying a contract in an existent address",
      "duration": 1900,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deploy fails deploying a contract if the bytecode length is zero",
      "title": "fails deploying a contract if the bytecode length is zero",
      "duration": 828,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deploy fails deploying a contract if factory contract does not have sufficient balance",
      "title": "fails deploying a contract if factory contract does not have sufficient balance",
      "duration": 846,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: EIP712 domain separator",
      "title": "domain separator",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with 27 as version value works",
      "title": "works",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "with 28 as version value works",
      "title": "works",
      "duration": 123,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toEthSignedMessage should prefix hashes correctly",
      "title": "should prefix hashes correctly",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "verify returns true for a valid Merkle proof",
      "title": "returns true for a valid Merkle proof",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "verify returns false for an invalid Merkle proof",
      "title": "returns false for an invalid Merkle proof",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "verify returns false for a Merkle proof of invalid length",
      "title": "returns false for a Merkle proof of invalid length",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deposits can accept an empty deposit",
      "title": "can accept an empty deposit",
      "duration": 927,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deposits only the owner can deposit",
      "title": "only the owner can deposit",
      "duration": 1444,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "withdrawals can do an empty withdrawal",
      "title": "can do an empty withdrawal",
      "duration": 968,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "withdrawals only the owner can withdraw",
      "title": "only the owner can withdraw",
      "duration": 1082,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deposits can accept an empty deposit",
      "title": "can accept an empty deposit",
      "duration": 975,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "deposits only the owner can deposit",
      "title": "only the owner can deposit",
      "duration": 1303,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "withdrawals can do an empty withdrawal",
      "title": "can do an empty withdrawal",
      "duration": 918,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "withdrawals only the owner can withdraw",
      "title": "only the owner can withdraw",
      "duration": 898,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: RefundEscrow requires a non-null beneficiary",
      "title": "requires a non-null beneficiary",
      "duration": 1090,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed only the owner can enter closed state",
      "title": "only the owner can enter closed state",
      "duration": 1670,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed only the owner can enter refund state",
      "title": "only the owner can enter refund state",
      "duration": 1735,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "active state has beneficiary and state",
      "title": "has beneficiary and state",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "before initialize initializer has not run",
      "title": "initializer has not run",
      "duration": 62,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "after initialize initializer has run",
      "title": "initializer has run",
      "duration": 46,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "after initialize initializer does not run again",
      "title": "initializer does not run again",
      "duration": 908,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "after nested initialize initializer has run",
      "title": "initializer has run",
      "duration": 85,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "complex testing with inheritance initializes human",
      "title": "initializes human",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "complex testing with inheritance initializes mother",
      "title": "initializes mother",
      "duration": 81,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "complex testing with inheritance initializes gramps",
      "title": "initializes gramps",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "complex testing with inheritance initializes father",
      "title": "initializes father",
      "duration": 90,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "complex testing with inheritance initializes child",
      "title": "initializes child",
      "duration": 79,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "supportsInterface(bytes4) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 missing return data does not support ERC165",
      "title": "does not support ERC165",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 missing return data does not support mock interface via supportsInterface",
      "title": "does not support mock interface via supportsInterface",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 missing return data does not support mock interface via supportsAllInterfaces",
      "title": "does not support mock interface via supportsAllInterfaces",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 missing return data does not support mock interface via getSupportedInterfaces",
      "title": "does not support mock interface via getSupportedInterfaces",
      "duration": 142,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 not supported does not support ERC165",
      "title": "does not support ERC165",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 not supported does not support mock interface via supportsInterface",
      "title": "does not support mock interface via supportsInterface",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 not supported does not support mock interface via supportsAllInterfaces",
      "title": "does not support mock interface via supportsAllInterfaces",
      "duration": 44,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 not supported does not support mock interface via getSupportedInterfaces",
      "title": "does not support mock interface via getSupportedInterfaces",
      "duration": 52,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 supported supports ERC165",
      "title": "supports ERC165",
      "duration": 33,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 supported does not support mock interface via supportsInterface",
      "title": "does not support mock interface via supportsInterface",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 supported does not support mock interface via supportsAllInterfaces",
      "title": "does not support mock interface via supportsAllInterfaces",
      "duration": 41,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 supported does not support mock interface via getSupportedInterfaces",
      "title": "does not support mock interface via getSupportedInterfaces",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and single interface supported supports ERC165",
      "title": "supports ERC165",
      "duration": 36,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and single interface supported supports mock interface via supportsInterface",
      "title": "supports mock interface via supportsInterface",
      "duration": 68,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and single interface supported supports mock interface via supportsAllInterfaces",
      "title": "supports mock interface via supportsAllInterfaces",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and single interface supported supports mock interface via getSupportedInterfaces",
      "title": "supports mock interface via getSupportedInterfaces",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports ERC165",
      "title": "supports ERC165",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports each interfaceId via supportsInterface",
      "title": "supports each interfaceId via supportsInterface",
      "duration": 151,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports all interfaceIds via supportsAllInterfaces",
      "title": "supports all interfaceIds via supportsAllInterfaces",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports none of the interfaces queried via supportsAllInterfaces",
      "title": "supports none of the interfaces queried via supportsAllInterfaces",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports not all of the interfaces queried via supportsAllInterfaces",
      "title": "supports not all of the interfaces queried via supportsAllInterfaces",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports all interfaceIds via getSupportedInterfaces",
      "title": "supports all interfaceIds via getSupportedInterfaces",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports none of the interfaces queried via getSupportedInterfaces",
      "title": "supports none of the interfaces queried via getSupportedInterfaces",
      "duration": 33,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165 and many interfaces supported supports not all of the interfaces queried via getSupportedInterfaces",
      "title": "supports not all of the interfaces queried via getSupportedInterfaces",
      "duration": 79,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "account address does not support ERC165 does not support ERC165",
      "title": "does not support ERC165",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "account address does not support ERC165 does not support mock interface via supportsInterface",
      "title": "does not support mock interface via supportsInterface",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "account address does not support ERC165 does not support mock interface via supportsAllInterfaces",
      "title": "does not support mock interface via supportsAllInterfaces",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "account address does not support ERC165 does not support mock interface via getSupportedInterfaces",
      "title": "does not support mock interface via getSupportedInterfaces",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC165Storage register interface",
      "title": "register interface",
      "duration": 854,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: ERC165Storage does not allow 0xffffffff",
      "title": "does not allow 0xffffffff",
      "duration": 792,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) uses less than 30k gas [skip-on-coverage]",
      "title": "uses less than 30k gas [skip-on-coverage]",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "ERC165's supportsInterface(bytes4) claims support",
      "title": "claims support",
      "duration": 63,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "supportsInterface(bytes4) has to be implemented",
      "title": "has to be implemented",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "max is correctly detected in first argument position",
      "title": "is correctly detected in first argument position",
      "duration": 106,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "max is correctly detected in second argument position",
      "title": "is correctly detected in second argument position",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "min is correctly detected in first argument position",
      "title": "is correctly detected in first argument position",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "min is correctly detected in second argument position",
      "title": "is correctly detected in second argument position",
      "duration": 61,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "average is correctly calculated with two odd numbers",
      "title": "is correctly calculated with two odd numbers",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "average is correctly calculated with two even numbers",
      "title": "is correctly calculated with two even numbers",
      "duration": 38,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "average is correctly calculated with one even and one odd number",
      "title": "is correctly calculated with one even and one odd number",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint8 downcasts 0",
      "title": "downcasts 0",
      "duration": 81,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint8 downcasts 1",
      "title": "downcasts 1",
      "duration": 210,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint8 downcasts 2^8 - 1 (255)",
      "title": "downcasts 2^8 - 1 (255)",
      "duration": 220,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint16 downcasts 0",
      "title": "downcasts 0",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint16 downcasts 1",
      "title": "downcasts 1",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint16 downcasts 2^16 - 1 (65535)",
      "title": "downcasts 2^16 - 1 (65535)",
      "duration": 59,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint32 downcasts 0",
      "title": "downcasts 0",
      "duration": 30,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint32 downcasts 1",
      "title": "downcasts 1",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint32 downcasts 2^32 - 1 (4294967295)",
      "title": "downcasts 2^32 - 1 (4294967295)",
      "duration": 75,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint64 downcasts 0",
      "title": "downcasts 0",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint64 downcasts 1",
      "title": "downcasts 1",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint64 downcasts 2^64 - 1 (18446744073709551615)",
      "title": "downcasts 2^64 - 1 (18446744073709551615)",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint128 downcasts 0",
      "title": "downcasts 0",
      "duration": 247,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint128 downcasts 1",
      "title": "downcasts 1",
      "duration": 35,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint128 downcasts 2^128 - 1 (340282366920938463463374607431768211455)",
      "title": "downcasts 2^128 - 1 (340282366920938463463374607431768211455)",
      "duration": 55,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint256 casts 0",
      "title": "casts 0",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint256 casts 1",
      "title": "casts 1",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toUint256 casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
      "title": "casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
      "duration": 47,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt8 downcasts 0",
      "title": "downcasts 0",
      "duration": 61,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt8 downcasts 1",
      "title": "downcasts 1",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt8 downcasts -1",
      "title": "downcasts -1",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt8 downcasts -2^7 (-128)",
      "title": "downcasts -2^7 (-128)",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt8 downcasts 2^7 - 1 (127)",
      "title": "downcasts 2^7 - 1 (127)",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt16 downcasts 0",
      "title": "downcasts 0",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt16 downcasts 1",
      "title": "downcasts 1",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt16 downcasts -1",
      "title": "downcasts -1",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt16 downcasts -2^15 (-32768)",
      "title": "downcasts -2^15 (-32768)",
      "duration": 35,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt16 downcasts 2^15 - 1 (32767)",
      "title": "downcasts 2^15 - 1 (32767)",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt32 downcasts 0",
      "title": "downcasts 0",
      "duration": 49,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt32 downcasts 1",
      "title": "downcasts 1",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt32 downcasts -1",
      "title": "downcasts -1",
      "duration": 50,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt32 downcasts -2^31 (-2147483648)",
      "title": "downcasts -2^31 (-2147483648)",
      "duration": 57,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt32 downcasts 2^31 - 1 (2147483647)",
      "title": "downcasts 2^31 - 1 (2147483647)",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt64 downcasts 0",
      "title": "downcasts 0",
      "duration": 43,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt64 downcasts 1",
      "title": "downcasts 1",
      "duration": 21,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt64 downcasts -1",
      "title": "downcasts -1",
      "duration": 116,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt64 downcasts -2^63 (-9223372036854775808)",
      "title": "downcasts -2^63 (-9223372036854775808)",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt64 downcasts 2^63 - 1 (9223372036854775807)",
      "title": "downcasts 2^63 - 1 (9223372036854775807)",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt128 downcasts 0",
      "title": "downcasts 0",
      "duration": 33,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt128 downcasts 1",
      "title": "downcasts 1",
      "duration": 37,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt128 downcasts -1",
      "title": "downcasts -1",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt128 downcasts -2^127 (-170141183460469231731687303715884105728)",
      "title": "downcasts -2^127 (-170141183460469231731687303715884105728)",
      "duration": 60,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt128 downcasts 2^127 - 1 (170141183460469231731687303715884105727)",
      "title": "downcasts 2^127 - 1 (170141183460469231731687303715884105727)",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt256 casts 0",
      "title": "casts 0",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt256 casts 1",
      "title": "casts 1",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "toInt256 casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
      "title": "casts INT256_MAX (57896044618658097711785492504343953926634992332820282019728792003956564819967)",
      "duration": 51,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds correctly",
      "title": "adds correctly",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add reverts on addition overflow",
      "title": "reverts on addition overflow",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "sub subtracts correctly",
      "title": "subtracts correctly",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "sub reverts if subtraction result would be negative",
      "title": "reverts if subtraction result would be negative",
      "duration": 20,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mul multiplies correctly",
      "title": "multiplies correctly",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mul multiplies by zero correctly",
      "title": "multiplies by zero correctly",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mul reverts on multiplication overflow",
      "title": "reverts on multiplication overflow",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides correctly",
      "title": "divides correctly",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides zero correctly",
      "title": "divides zero correctly",
      "duration": 106,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div returns complete number result on non-even division",
      "title": "returns complete number result on non-even division",
      "duration": 26,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div reverts on division by zero",
      "title": "reverts on division by zero",
      "duration": 15,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mod reverts with a 0 divisor",
      "title": "reverts with a 0 divisor",
      "duration": 27,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is smaller than the divisor",
      "title": "when the dividend is smaller than the divisor",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is equal to the divisor",
      "title": "when the dividend is equal to the divisor",
      "duration": 22,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is larger than the divisor",
      "title": "when the dividend is larger than the divisor",
      "duration": 104,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is a multiple of the divisor",
      "title": "when the dividend is a multiple of the divisor",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds correctly",
      "title": "adds correctly",
      "duration": 76,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "sub subtracts correctly",
      "title": "subtracts correctly",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mul multiplies correctly",
      "title": "multiplies correctly",
      "duration": 74,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mul multiplies by zero correctly",
      "title": "multiplies by zero correctly",
      "duration": 66,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides correctly",
      "title": "divides correctly",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides zero correctly",
      "title": "divides zero correctly",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div returns complete number result on non-even division",
      "title": "returns complete number result on non-even division",
      "duration": 65,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is smaller than the divisor",
      "title": "when the dividend is smaller than the divisor",
      "duration": 48,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is equal to the divisor",
      "title": "when the dividend is equal to the divisor",
      "duration": 75,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is larger than the divisor",
      "title": "when the dividend is larger than the divisor",
      "duration": 64,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is a multiple of the divisor",
      "title": "when the dividend is a multiple of the divisor",
      "duration": 34,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "sub subtracts correctly",
      "title": "subtracts correctly",
      "duration": 60,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides correctly",
      "title": "divides correctly",
      "duration": 23,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides zero correctly",
      "title": "divides zero correctly",
      "duration": 59,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div returns complete number result on non-even division",
      "title": "returns complete number result on non-even division",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is smaller than the divisor",
      "title": "when the dividend is smaller than the divisor",
      "duration": 46,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is equal to the divisor",
      "title": "when the dividend is equal to the divisor",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is larger than the divisor",
      "title": "when the dividend is larger than the divisor",
      "duration": 31,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "modulos correctly when the dividend is a multiple of the divisor",
      "title": "when the dividend is a multiple of the divisor",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "memory leakage add",
      "title": "add",
      "duration": 80,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "memory leakage sub",
      "title": "sub",
      "duration": 72,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "memory leakage mul",
      "title": "mul",
      "duration": 25,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "memory leakage div",
      "title": "div",
      "duration": 29,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "memory leakage mod",
      "title": "mod",
      "duration": 194,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds correctly if it does not overflow and the result is positive",
      "title": "adds correctly if it does not overflow and the result is positive",
      "duration": 77,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds correctly if it does not overflow and the result is negative",
      "title": "adds correctly if it does not overflow and the result is negative",
      "duration": 46,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "sub subtracts correctly if it does not overflow and the result is positive",
      "title": "subtracts correctly if it does not overflow and the result is positive",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "sub subtracts correctly if it does not overflow and the result is negative",
      "title": "subtracts correctly if it does not overflow and the result is negative",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mul multiplies correctly",
      "title": "multiplies correctly",
      "duration": 68,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "mul multiplies by zero correctly",
      "title": "multiplies by zero correctly",
      "duration": 47,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides correctly",
      "title": "divides correctly",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div divides zero correctly",
      "title": "divides zero correctly",
      "duration": 82,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "div returns complete number result on non-even division",
      "title": "returns complete number result on non-even division",
      "duration": 28,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: PaymentSplitter rejects an empty set of payees",
      "title": "rejects an empty set of payees",
      "duration": 1609,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: PaymentSplitter rejects more payees than shares",
      "title": "rejects more payees than shares",
      "duration": 857,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: PaymentSplitter rejects more shares than payees",
      "title": "rejects more shares than payees",
      "duration": 806,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: PaymentSplitter rejects null payees",
      "title": "rejects null payees",
      "duration": 909,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: PaymentSplitter rejects zero-valued shares",
      "title": "rejects zero-valued shares",
      "duration": 706,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: PaymentSplitter rejects repeated payees",
      "title": "rejects repeated payees",
      "duration": 857,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed has total shares",
      "title": "has total shares",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "once deployed has payees",
      "title": "has payees",
      "duration": 44,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "shares stores shares if address is payee",
      "title": "stores shares if address is payee",
      "duration": 80,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "shares does not store shares if address is not payee",
      "title": "does not store shares if address is not payee",
      "duration": 17,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "release reverts if no funds to claim",
      "title": "reverts if no funds to claim",
      "duration": 981,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - decimal format converts 0",
      "title": "converts 0",
      "duration": 48,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - decimal format converts a positive number",
      "title": "converts a positive number",
      "duration": 89,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - decimal format converts MAX_UINT256",
      "title": "converts MAX_UINT256",
      "duration": 16,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - hex format converts 0",
      "title": "converts 0",
      "duration": 59,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - hex format converts a positive number",
      "title": "converts a positive number",
      "duration": 19,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - hex format converts MAX_UINT256",
      "title": "converts MAX_UINT256",
      "duration": 53,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - fixed hex format converts a positive number (long)",
      "title": "converts a positive number (long)",
      "duration": 32,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "from uint256 - fixed hex format converts MAX_UINT256",
      "title": "converts MAX_UINT256",
      "duration": 18,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Contract: EnumerableMap starts empty",
      "title": "starts empty",
      "duration": 113,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "set adds a key",
      "title": "adds a key",
      "duration": 844,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "set adds several keys",
      "title": "adds several keys",
      "duration": 1710,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "set returns false when adding keys already in the set",
      "title": "returns false when adding keys already in the set",
      "duration": 1679,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "set updates values for keys already in the set",
      "title": "updates values for keys already in the set",
      "duration": 1827,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove removes added keys",
      "title": "removes added keys",
      "duration": 1910,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove returns false when removing keys not in the set",
      "title": "returns false when removing keys not in the set",
      "duration": 972,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove adds and removes multiple keys",
      "title": "adds and removes multiple keys",
      "duration": 11659,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "get existing value",
      "title": "existing value",
      "duration": 113,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "get with message existing value",
      "title": "existing value",
      "duration": 83,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tryGet existing value",
      "title": "existing value",
      "duration": 176,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "tryGet missing value",
      "title": "missing value",
      "duration": 253,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "EnumerableBytes32Set starts empty",
      "title": "starts empty",
      "duration": 294,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds a value",
      "title": "adds a value",
      "duration": 817,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds several values",
      "title": "adds several values",
      "duration": 1941,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add returns false when adding values already in the set",
      "title": "returns false when adding values already in the set",
      "duration": 2054,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove removes added values",
      "title": "removes added values",
      "duration": 1770,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove returns false when removing values not in the set",
      "title": "returns false when removing values not in the set",
      "duration": 933,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove adds and removes multiple values",
      "title": "adds and removes multiple values",
      "duration": 11734,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "EnumerableAddressSet starts empty",
      "title": "starts empty",
      "duration": 63,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds a value",
      "title": "adds a value",
      "duration": 967,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds several values",
      "title": "adds several values",
      "duration": 1750,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add returns false when adding values already in the set",
      "title": "returns false when adding values already in the set",
      "duration": 1906,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove removes added values",
      "title": "removes added values",
      "duration": 2270,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove returns false when removing values not in the set",
      "title": "returns false when removing values not in the set",
      "duration": 1178,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove adds and removes multiple values",
      "title": "adds and removes multiple values",
      "duration": 11437,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "EnumerableUintSet starts empty",
      "title": "starts empty",
      "duration": 71,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds a value",
      "title": "adds a value",
      "duration": 1001,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add adds several values",
      "title": "adds several values",
      "duration": 2125,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "add returns false when adding values already in the set",
      "title": "returns false when adding values already in the set",
      "duration": 1733,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove removes added values",
      "title": "removes added values",
      "duration": 2163,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove returns false when removing values not in the set",
      "title": "returns false when removing values not in the set",
      "duration": 872,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "remove adds and removes multiple values",
      "title": "adds and removes multiple values",
      "duration": 11435,
      "result": "passed",
      "err": {}
    }
  ]
}
